04-Mar-2024 08:02:12.895 INFO [main] org.apache.catalina.startup.VersionLoggerListener.log Server version name:   Apache Tomcat/8.5.99
04-Mar-2024 08:02:12.896 INFO [main] org.apache.catalina.startup.VersionLoggerListener.log Server built:          Feb 14 2024 22:52:13 UTC
04-Mar-2024 08:02:12.897 INFO [main] org.apache.catalina.startup.VersionLoggerListener.log Server version number: 8.5.99.0
04-Mar-2024 08:02:12.897 INFO [main] org.apache.catalina.startup.VersionLoggerListener.log OS Name:               Linux
04-Mar-2024 08:02:12.897 INFO [main] org.apache.catalina.startup.VersionLoggerListener.log OS Version:            5.15.0-97-generic
04-Mar-2024 08:02:12.897 INFO [main] org.apache.catalina.startup.VersionLoggerListener.log Architecture:          amd64
04-Mar-2024 08:02:12.897 INFO [main] org.apache.catalina.startup.VersionLoggerListener.log Java Home:             /usr/lib/jvm/java-8-openjdk-amd64/jre
04-Mar-2024 08:02:12.897 INFO [main] org.apache.catalina.startup.VersionLoggerListener.log JVM Version:           1.8.0_392-8u392-ga-1~22.04-b08
04-Mar-2024 08:02:12.897 INFO [main] org.apache.catalina.startup.VersionLoggerListener.log JVM Vendor:            Private Build
04-Mar-2024 08:02:12.897 INFO [main] org.apache.catalina.startup.VersionLoggerListener.log CATALINA_BASE:         /home/minds/maum/sds-builder/apache-tomcat-8.5.99
04-Mar-2024 08:02:12.897 INFO [main] org.apache.catalina.startup.VersionLoggerListener.log CATALINA_HOME:         /home/minds/maum/sds-builder/apache-tomcat-8.5.99
04-Mar-2024 08:02:12.897 INFO [main] org.apache.catalina.startup.VersionLoggerListener.log Command line argument: -Djava.util.logging.config.file=/home/minds/maum/sds-builder/apache-tomcat-8.5.99/conf/logging.properties
04-Mar-2024 08:02:12.898 INFO [main] org.apache.catalina.startup.VersionLoggerListener.log Command line argument: -Djava.util.logging.manager=org.apache.juli.ClassLoaderLogManager
04-Mar-2024 08:02:12.898 INFO [main] org.apache.catalina.startup.VersionLoggerListener.log Command line argument: -Djdk.tls.ephemeralDHKeySize=2048
04-Mar-2024 08:02:12.898 INFO [main] org.apache.catalina.startup.VersionLoggerListener.log Command line argument: -Djava.protocol.handler.pkgs=org.apache.catalina.webresources
04-Mar-2024 08:02:12.898 INFO [main] org.apache.catalina.startup.VersionLoggerListener.log Command line argument: -Dorg.apache.catalina.security.SecurityListener.UMASK=0027
04-Mar-2024 08:02:12.898 INFO [main] org.apache.catalina.startup.VersionLoggerListener.log Command line argument: -Dignore.endorsed.dirs=
04-Mar-2024 08:02:12.898 INFO [main] org.apache.catalina.startup.VersionLoggerListener.log Command line argument: -Dcatalina.base=/home/minds/maum/sds-builder/apache-tomcat-8.5.99
04-Mar-2024 08:02:12.898 INFO [main] org.apache.catalina.startup.VersionLoggerListener.log Command line argument: -Dcatalina.home=/home/minds/maum/sds-builder/apache-tomcat-8.5.99
04-Mar-2024 08:02:12.898 INFO [main] org.apache.catalina.startup.VersionLoggerListener.log Command line argument: -Djava.io.tmpdir=/home/minds/maum/sds-builder/apache-tomcat-8.5.99/temp
04-Mar-2024 08:02:12.898 INFO [main] org.apache.catalina.core.AprLifecycleListener.lifecycleEvent The Apache Tomcat Native library which allows using OpenSSL was not found on the java.library.path: [/usr/java/packages/lib/amd64:/usr/lib/x86_64-linux-gnu/jni:/lib/x86_64-linux-gnu:/usr/lib/x86_64-linux-gnu:/usr/lib/jni:/lib:/usr/lib]
04-Mar-2024 08:02:12.958 INFO [main] org.apache.coyote.AbstractProtocol.init Initializing ProtocolHandler ["http-nio-18090"]
04-Mar-2024 08:02:12.977 INFO [main] org.apache.catalina.startup.Catalina.load Initialization processed in 462 ms
04-Mar-2024 08:02:13.034 INFO [main] org.apache.catalina.core.StandardService.startInternal Starting service [Catalina]
04-Mar-2024 08:02:13.034 INFO [main] org.apache.catalina.core.StandardEngine.startInternal Starting Servlet engine: [Apache Tomcat/8.5.99]
04-Mar-2024 08:02:13.060 INFO [localhost-startStop-1] org.apache.catalina.startup.HostConfig.deployWAR Deploying web application archive [/home/minds/maum/sds-builder/apache-tomcat-8.5.99/webapps/sds-builder.war]
04-Mar-2024 08:02:16.258 INFO [localhost-startStop-1] org.apache.jasper.servlet.TldScanner.scanJars At least one JAR was scanned for TLDs yet contained no TLDs. Enable debug logging for this logger for a complete list of JARs that were scanned but no TLDs were found in them. Skipping unneeded JARs during scanning can improve startup time and JSP compilation time.
DEBUG: org.mybatis.spring.SqlSessionFactoryBean - Property 'configuration' or 'configLocation' not specified, using default MyBatis Configuration
DEBUG: org.mybatis.spring.SqlSessionFactoryBean - Parsed mapper file: 'file [/home/minds/maum/sds-builder/apache-tomcat-8.5.99/webapps/sds-builder/WEB-INF/classes/mapper/maria/Chatbot/Builder_SQL.xml]'
DEBUG: org.mybatis.spring.SqlSessionFactoryBean - Parsed mapper file: 'file [/home/minds/maum/sds-builder/apache-tomcat-8.5.99/webapps/sds-builder/WEB-INF/classes/mapper/maria/Chatbot/MaumSDS_SQL.xml]'
DEBUG: org.mybatis.spring.SqlSessionFactoryBean - Property 'configuration' or 'configLocation' not specified, using default MyBatis Configuration
DEBUG: org.mybatis.spring.SqlSessionFactoryBean - Parsed mapper file: 'file [/home/minds/maum/sds-builder/apache-tomcat-8.5.99/webapps/sds-builder/WEB-INF/classes/mapper/maria/HAPPYCALL4/NQA_SQL.xml]'
DEBUG: org.mybatis.spring.SqlSessionFactoryBean - Parsed mapper file: 'file [/home/minds/maum/sds-builder/apache-tomcat-8.5.99/webapps/sds-builder/WEB-INF/classes/mapper/maria/HAPPYCALL4/SimpleBot_SQL.xml]'
SimpleBot Execution Environment : prod
SimpleBot BertIntent itfIP : 0
SimpleBot BertIntent nerIP : 0
SimpleBot BL IP : 125.132.250.244
SimpleBot CM IP : 121.133.247.250
SimpleBot M2U rest address : http://localhost:9990
SimpleBot Style Resources Path : /home/minds/maum/sds-builder/imgUpload
Default Resources Make : chatbot.css
Default Resources Make : chatbot_custom.css
Default Resources Make : chatbot_floating.css
Default Resources Make : IconImg
Default Resources Make : logoImg
Default Resources Make : default
Default Resources Make : mindslab
Default Resources Make : redtie
Default Resource constructed.
DEBUG: first.common.logger.LoggerAspect - ServiceImpl  	:  first.builder.service.BuilderService.getNqaStatusChatbotList()
DEBUG: first.common.logger.LoggerAspect - DAO  		:  first.builder.dao.BuilderDAO.getNqaStatusChatbotList()
DEBUG: first.builder.dao.AbstractDAO - 	 QueryId  	:  builder.getNqaStatusChatbotList
DEBUG: org.mybatis.spring.SqlSessionUtils - Creating a new SqlSession
DEBUG: org.mybatis.spring.SqlSessionUtils - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@489ceaf1]
DEBUG: org.mybatis.spring.transaction.SpringManagedTransaction - JDBC Connection [net.sf.log4jdbc.ConnectionSpy@e71624] will be managed by Spring
2024-03-04 08:02:18,370  INFO SQL(simplebot)        :  SELECT No as host, Name, 'preparation' as nqaUploadStatus
 from Account
		ORDER BY No
2024-03-04 08:02:18,377 ERROR  org.apache.ibatis.executor.statement.PreparedStatementHandler.query(PreparedStatementHandler.java:64)
1. SELECT No as host, Name, 'preparation' as nqaUploadStatus from Account
		ORDER BY No
com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: Table 'Chatbot.Account' doesn't exist
	at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
	at sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:423)
	at com.mysql.jdbc.Util.handleNewInstance(Util.java:425)
	at com.mysql.jdbc.Util.getInstance(Util.java:408)
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:944)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:3933)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:3869)
	at com.mysql.jdbc.MysqlIO.sendCommand(MysqlIO.java:2524)
	at com.mysql.jdbc.MysqlIO.sqlQueryDirect(MysqlIO.java:2675)
	at com.mysql.jdbc.ConnectionImpl.execSQL(ConnectionImpl.java:2465)
	at com.mysql.jdbc.PreparedStatement.executeInternal(PreparedStatement.java:1912)
	at com.mysql.jdbc.PreparedStatement.execute(PreparedStatement.java:1251)
	at org.apache.commons.dbcp.DelegatingPreparedStatement.execute(DelegatingPreparedStatement.java:172)
	at org.apache.commons.dbcp.DelegatingPreparedStatement.execute(DelegatingPreparedStatement.java:172)
	at net.sf.log4jdbc.PreparedStatementSpy.execute(PreparedStatementSpy.java:418)
	at org.apache.ibatis.executor.statement.PreparedStatementHandler.query(PreparedStatementHandler.java:64)
	at org.apache.ibatis.executor.statement.RoutingStatementHandler.query(RoutingStatementHandler.java:79)
	at org.apache.ibatis.executor.SimpleExecutor.doQuery(SimpleExecutor.java:63)
	at org.apache.ibatis.executor.BaseExecutor.queryFromDatabase(BaseExecutor.java:324)
	at org.apache.ibatis.executor.BaseExecutor.query(BaseExecutor.java:156)
	at org.apache.ibatis.executor.CachingExecutor.query(CachingExecutor.java:109)
	at org.apache.ibatis.executor.CachingExecutor.query(CachingExecutor.java:83)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:148)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:141)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:136)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:433)
	at com.sun.proxy.$Proxy26.selectList(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate.selectList(SqlSessionTemplate.java:222)
	at first.builder.dao.AbstractDAO.selectList(AbstractDAO.java:64)
	at first.builder.dao.BuilderDAO.getNqaStatusChatbotList(BuilderDAO.java:554)
	at first.builder.dao.BuilderDAO$$FastClassBySpringCGLIB$$76e165a4.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:736)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:157)
	at org.springframework.aop.aspectj.MethodInvocationProceedingJoinPoint.proceed(MethodInvocationProceedingJoinPoint.java:84)
	at first.common.logger.LoggerAspect.logPrint(LoggerAspect.java:29)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:627)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:616)
	at org.springframework.aop.aspectj.AspectJAroundAdvice.invoke(AspectJAroundAdvice.java:70)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:92)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:671)
	at first.builder.dao.BuilderDAO$$EnhancerBySpringCGLIB$$84fda78d.getNqaStatusChatbotList(<generated>)
	at first.builder.service.BuilderServiceImpl.getNqaStatusChatbotList(BuilderServiceImpl.java:2224)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:333)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:190)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:157)
	at org.springframework.aop.aspectj.MethodInvocationProceedingJoinPoint.proceed(MethodInvocationProceedingJoinPoint.java:84)
	at first.common.logger.LoggerAspect.logPrint(LoggerAspect.java:29)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:627)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:616)
	at org.springframework.aop.aspectj.AspectJAroundAdvice.invoke(AspectJAroundAdvice.java:70)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.transaction.interceptor.TransactionInterceptor$1.proceedWithInvocation(TransactionInterceptor.java:99)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:282)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:96)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:92)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:213)
	at com.sun.proxy.$Proxy28.getNqaStatusChatbotList(Unknown Source)
	at first.common.util.NqaUploadStatusList.setNqaStatusList(NqaUploadStatusList.java:26)
	at first.common.util.NqaUploadStatusList$$EnhancerBySpringCGLIB$$b3b8eb76.CGLIB$setNqaStatusList$0(<generated>)
	at first.common.util.NqaUploadStatusList$$EnhancerBySpringCGLIB$$b3b8eb76$$FastClassBySpringCGLIB$$e69db2d4.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invokeSuper(MethodProxy.java:228)
	at org.springframework.context.annotation.ConfigurationClassEnhancer$BeanMethodInterceptor.intercept(ConfigurationClassEnhancer.java:358)
	at first.common.util.NqaUploadStatusList$$EnhancerBySpringCGLIB$$b3b8eb76.setNqaStatusList(<generated>)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.beans.factory.support.SimpleInstantiationStrategy.instantiate(SimpleInstantiationStrategy.java:162)
	at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:588)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1178)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1072)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:511)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:481)
	at org.springframework.beans.factory.support.AbstractBeanFactory$1.getObject(AbstractBeanFactory.java:312)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:230)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:308)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:197)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:761)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:867)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:543)
	at org.springframework.web.context.ContextLoader.configureAndRefreshWebApplicationContext(ContextLoader.java:443)
	at org.springframework.web.context.ContextLoader.initWebApplicationContext(ContextLoader.java:325)
	at org.springframework.web.context.ContextLoaderListener.contextInitialized(ContextLoaderListener.java:107)
	at org.apache.catalina.core.StandardContext.listenerStart(StandardContext.java:4441)
	at org.apache.catalina.core.StandardContext.startInternal(StandardContext.java:4899)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:171)
	at org.apache.catalina.core.ContainerBase.addChildInternal(ContainerBase.java:710)
	at org.apache.catalina.core.ContainerBase.addChild(ContainerBase.java:687)
	at org.apache.catalina.core.StandardHost.addChild(StandardHost.java:660)
	at org.apache.catalina.startup.HostConfig.deployWAR(HostConfig.java:1015)
	at org.apache.catalina.startup.HostConfig$DeployWar.run(HostConfig.java:1867)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:750)
DEBUG: org.mybatis.spring.SqlSessionUtils - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@489ceaf1]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@489ceaf1]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@489ceaf1]
04-Mar-2024 08:02:18.411 SEVERE [localhost-startStop-1] org.apache.catalina.core.StandardContext.startInternal One or more listeners failed to start. Full details will be found in the appropriate container log file
04-Mar-2024 08:02:18.414 SEVERE [localhost-startStop-1] org.apache.catalina.core.StandardContext.startInternal Context [/sds-builder] startup failed due to previous errors
04-Mar-2024 08:02:18.420 WARNING [localhost-startStop-1] org.apache.catalina.loader.WebappClassLoaderBase.clearReferencesJdbc The web application [sds-builder] registered the JDBC driver [com.mysql.jdbc.Driver] but failed to unregister it when the web application was stopped. To prevent a memory leak, the JDBC Driver has been forcibly unregistered.
04-Mar-2024 08:02:18.421 WARNING [localhost-startStop-1] org.apache.catalina.loader.WebappClassLoaderBase.clearReferencesJdbc The web application [sds-builder] registered the JDBC driver [net.sf.log4jdbc.DriverSpy] but failed to unregister it when the web application was stopped. To prevent a memory leak, the JDBC Driver has been forcibly unregistered.
04-Mar-2024 08:02:18.421 WARNING [localhost-startStop-1] org.apache.catalina.loader.WebappClassLoaderBase.clearReferencesJdbc The web application [sds-builder] registered the JDBC driver [com.microsoft.sqlserver.jdbc.SQLServerDriver] but failed to unregister it when the web application was stopped. To prevent a memory leak, the JDBC Driver has been forcibly unregistered.
04-Mar-2024 08:02:18.421 WARNING [localhost-startStop-1] org.apache.catalina.loader.WebappClassLoaderBase.clearReferencesThreads The web application [sds-builder] appears to have started a thread named [mysql-cj-abandoned-connection-cleanup] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 java.lang.Object.wait(Native Method)
 java.lang.ref.ReferenceQueue.remove(ReferenceQueue.java:144)
 com.mysql.jdbc.AbandonedConnectionCleanupThread.run(AbandonedConnectionCleanupThread.java:80)
 java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
 java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
 java.lang.Thread.run(Thread.java:750)
04-Mar-2024 08:02:18.425 INFO [localhost-startStop-1] org.apache.catalina.startup.HostConfig.deployWAR Deployment of web application archive [/home/minds/maum/sds-builder/apache-tomcat-8.5.99/webapps/sds-builder.war] has finished in [5,364] ms
04-Mar-2024 08:02:18.426 INFO [localhost-startStop-1] org.apache.catalina.startup.HostConfig.deployDirectory Deploying web application directory [/home/minds/maum/sds-builder/apache-tomcat-8.5.99/webapps/examples]
04-Mar-2024 08:02:18.529 INFO [localhost-startStop-1] org.apache.catalina.startup.HostConfig.deployDirectory Deployment of web application directory [/home/minds/maum/sds-builder/apache-tomcat-8.5.99/webapps/examples] has finished in [103] ms
04-Mar-2024 08:02:18.529 INFO [localhost-startStop-1] org.apache.catalina.startup.HostConfig.deployDirectory Deploying web application directory [/home/minds/maum/sds-builder/apache-tomcat-8.5.99/webapps/manager]
04-Mar-2024 08:02:18.546 INFO [localhost-startStop-1] org.apache.catalina.startup.HostConfig.deployDirectory Deployment of web application directory [/home/minds/maum/sds-builder/apache-tomcat-8.5.99/webapps/manager] has finished in [17] ms
04-Mar-2024 08:02:18.546 INFO [localhost-startStop-1] org.apache.catalina.startup.HostConfig.deployDirectory Deploying web application directory [/home/minds/maum/sds-builder/apache-tomcat-8.5.99/webapps/host-manager]
04-Mar-2024 08:02:18.558 INFO [localhost-startStop-1] org.apache.catalina.startup.HostConfig.deployDirectory Deployment of web application directory [/home/minds/maum/sds-builder/apache-tomcat-8.5.99/webapps/host-manager] has finished in [12] ms
04-Mar-2024 08:02:18.558 INFO [localhost-startStop-1] org.apache.catalina.startup.HostConfig.deployDirectory Deploying web application directory [/home/minds/maum/sds-builder/apache-tomcat-8.5.99/webapps/docs]
04-Mar-2024 08:02:18.567 INFO [localhost-startStop-1] org.apache.catalina.startup.HostConfig.deployDirectory Deployment of web application directory [/home/minds/maum/sds-builder/apache-tomcat-8.5.99/webapps/docs] has finished in [9] ms
04-Mar-2024 08:02:18.572 INFO [main] org.apache.coyote.AbstractProtocol.start Starting ProtocolHandler ["http-nio-18090"]
04-Mar-2024 08:02:18.581 INFO [main] org.apache.catalina.startup.Catalina.start Server startup in 5603 ms
04-Mar-2024 08:02:18.581 SEVERE [main] org.apache.catalina.core.StandardServer.await Failed to create server shutdown socket on address [localhost] and port [8005] (base port [8005] and offset [0])
	java.net.BindException: Address already in use (Bind failed)
		at java.net.PlainSocketImpl.socketBind(Native Method)
		at java.net.AbstractPlainSocketImpl.bind(AbstractPlainSocketImpl.java:387)
		at java.net.ServerSocket.bind(ServerSocket.java:390)
		at java.net.ServerSocket.<init>(ServerSocket.java:252)
		at org.apache.catalina.core.StandardServer.await(StandardServer.java:444)
		at org.apache.catalina.startup.Catalina.await(Catalina.java:730)
		at org.apache.catalina.startup.Catalina.start(Catalina.java:678)
		at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
		at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
		at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
		at java.lang.reflect.Method.invoke(Method.java:498)
		at org.apache.catalina.startup.Bootstrap.start(Bootstrap.java:345)
		at org.apache.catalina.startup.Bootstrap.main(Bootstrap.java:476)
04-Mar-2024 08:02:18.582 INFO [main] org.apache.coyote.AbstractProtocol.pause Pausing ProtocolHandler ["http-nio-18090"]
04-Mar-2024 08:02:18.583 INFO [main] org.apache.catalina.core.StandardService.stopInternal Stopping service [Catalina]
04-Mar-2024 08:02:18.595 INFO [main] org.apache.coyote.AbstractProtocol.stop Stopping ProtocolHandler ["http-nio-18090"]
04-Mar-2024 08:02:18.607 INFO [main] org.apache.coyote.AbstractProtocol.destroy Destroying ProtocolHandler ["http-nio-18090"]
04-Mar-2024 08:02:46.654 INFO [main] org.apache.catalina.startup.VersionLoggerListener.log Server version name:   Apache Tomcat/8.5.99
04-Mar-2024 08:02:46.656 INFO [main] org.apache.catalina.startup.VersionLoggerListener.log Server built:          Feb 14 2024 22:52:13 UTC
04-Mar-2024 08:02:46.656 INFO [main] org.apache.catalina.startup.VersionLoggerListener.log Server version number: 8.5.99.0
04-Mar-2024 08:02:46.656 INFO [main] org.apache.catalina.startup.VersionLoggerListener.log OS Name:               Linux
04-Mar-2024 08:02:46.656 INFO [main] org.apache.catalina.startup.VersionLoggerListener.log OS Version:            5.15.0-97-generic
04-Mar-2024 08:02:46.656 INFO [main] org.apache.catalina.startup.VersionLoggerListener.log Architecture:          amd64
04-Mar-2024 08:02:46.656 INFO [main] org.apache.catalina.startup.VersionLoggerListener.log Java Home:             /usr/lib/jvm/java-8-openjdk-amd64/jre
04-Mar-2024 08:02:46.656 INFO [main] org.apache.catalina.startup.VersionLoggerListener.log JVM Version:           1.8.0_392-8u392-ga-1~22.04-b08
04-Mar-2024 08:02:46.657 INFO [main] org.apache.catalina.startup.VersionLoggerListener.log JVM Vendor:            Private Build
04-Mar-2024 08:02:46.657 INFO [main] org.apache.catalina.startup.VersionLoggerListener.log CATALINA_BASE:         /home/minds/maum/sds-builder/apache-tomcat-8.5.99
04-Mar-2024 08:02:46.657 INFO [main] org.apache.catalina.startup.VersionLoggerListener.log CATALINA_HOME:         /home/minds/maum/sds-builder/apache-tomcat-8.5.99
04-Mar-2024 08:02:46.657 INFO [main] org.apache.catalina.startup.VersionLoggerListener.log Command line argument: -Djava.util.logging.config.file=/home/minds/maum/sds-builder/apache-tomcat-8.5.99/conf/logging.properties
04-Mar-2024 08:02:46.657 INFO [main] org.apache.catalina.startup.VersionLoggerListener.log Command line argument: -Djava.util.logging.manager=org.apache.juli.ClassLoaderLogManager
04-Mar-2024 08:02:46.657 INFO [main] org.apache.catalina.startup.VersionLoggerListener.log Command line argument: -Djdk.tls.ephemeralDHKeySize=2048
04-Mar-2024 08:02:46.657 INFO [main] org.apache.catalina.startup.VersionLoggerListener.log Command line argument: -Djava.protocol.handler.pkgs=org.apache.catalina.webresources
04-Mar-2024 08:02:46.657 INFO [main] org.apache.catalina.startup.VersionLoggerListener.log Command line argument: -Dorg.apache.catalina.security.SecurityListener.UMASK=0027
04-Mar-2024 08:02:46.657 INFO [main] org.apache.catalina.startup.VersionLoggerListener.log Command line argument: -Dignore.endorsed.dirs=
04-Mar-2024 08:02:46.657 INFO [main] org.apache.catalina.startup.VersionLoggerListener.log Command line argument: -Dcatalina.base=/home/minds/maum/sds-builder/apache-tomcat-8.5.99
04-Mar-2024 08:02:46.658 INFO [main] org.apache.catalina.startup.VersionLoggerListener.log Command line argument: -Dcatalina.home=/home/minds/maum/sds-builder/apache-tomcat-8.5.99
04-Mar-2024 08:02:46.658 INFO [main] org.apache.catalina.startup.VersionLoggerListener.log Command line argument: -Djava.io.tmpdir=/home/minds/maum/sds-builder/apache-tomcat-8.5.99/temp
04-Mar-2024 08:02:46.658 INFO [main] org.apache.catalina.core.AprLifecycleListener.lifecycleEvent The Apache Tomcat Native library which allows using OpenSSL was not found on the java.library.path: [/usr/java/packages/lib/amd64:/usr/lib/x86_64-linux-gnu/jni:/lib/x86_64-linux-gnu:/usr/lib/x86_64-linux-gnu:/usr/lib/jni:/lib:/usr/lib]
04-Mar-2024 08:02:46.716 INFO [main] org.apache.coyote.AbstractProtocol.init Initializing ProtocolHandler ["http-nio-18090"]
04-Mar-2024 08:02:46.732 INFO [main] org.apache.catalina.startup.Catalina.load Initialization processed in 415 ms
04-Mar-2024 08:02:46.777 INFO [main] org.apache.catalina.core.StandardService.startInternal Starting service [Catalina]
04-Mar-2024 08:02:46.777 INFO [main] org.apache.catalina.core.StandardEngine.startInternal Starting Servlet engine: [Apache Tomcat/8.5.99]
04-Mar-2024 08:02:46.804 INFO [localhost-startStop-1] org.apache.catalina.startup.HostConfig.deployWAR Deploying web application archive [/home/minds/maum/sds-builder/apache-tomcat-8.5.99/webapps/sds-builder.war]
04-Mar-2024 08:02:49.472 INFO [localhost-startStop-1] org.apache.jasper.servlet.TldScanner.scanJars At least one JAR was scanned for TLDs yet contained no TLDs. Enable debug logging for this logger for a complete list of JARs that were scanned but no TLDs were found in them. Skipping unneeded JARs during scanning can improve startup time and JSP compilation time.
DEBUG: org.mybatis.spring.SqlSessionFactoryBean - Property 'configuration' or 'configLocation' not specified, using default MyBatis Configuration
DEBUG: org.mybatis.spring.SqlSessionFactoryBean - Parsed mapper file: 'file [/home/minds/maum/sds-builder/apache-tomcat-8.5.99/webapps/sds-builder/WEB-INF/classes/mapper/maria/Chatbot/Builder_SQL.xml]'
DEBUG: org.mybatis.spring.SqlSessionFactoryBean - Parsed mapper file: 'file [/home/minds/maum/sds-builder/apache-tomcat-8.5.99/webapps/sds-builder/WEB-INF/classes/mapper/maria/Chatbot/MaumSDS_SQL.xml]'
DEBUG: org.mybatis.spring.SqlSessionFactoryBean - Property 'configuration' or 'configLocation' not specified, using default MyBatis Configuration
DEBUG: org.mybatis.spring.SqlSessionFactoryBean - Parsed mapper file: 'file [/home/minds/maum/sds-builder/apache-tomcat-8.5.99/webapps/sds-builder/WEB-INF/classes/mapper/maria/HAPPYCALL4/NQA_SQL.xml]'
DEBUG: org.mybatis.spring.SqlSessionFactoryBean - Parsed mapper file: 'file [/home/minds/maum/sds-builder/apache-tomcat-8.5.99/webapps/sds-builder/WEB-INF/classes/mapper/maria/HAPPYCALL4/SimpleBot_SQL.xml]'
SimpleBot Execution Environment : prod
SimpleBot BertIntent itfIP : 0
SimpleBot BertIntent nerIP : 0
SimpleBot BL IP : 125.132.250.244
SimpleBot CM IP : 121.133.247.250
SimpleBot M2U rest address : http://localhost:9990
SimpleBot Style Resources Path : /home/minds/maum/sds-builder/imgUpload
Default Resources Make : chatbot.css
Default Resources Make : chatbot_custom.css
Default Resources Make : chatbot_floating.css
Default Resources Make : IconImg
Default Resources Make : logoImg
Default Resources Make : default
Default Resources Make : mindslab
Default Resources Make : redtie
Default Resource constructed.
DEBUG: first.common.logger.LoggerAspect - ServiceImpl  	:  first.builder.service.BuilderService.getNqaStatusChatbotList()
DEBUG: first.common.logger.LoggerAspect - DAO  		:  first.builder.dao.BuilderDAO.getNqaStatusChatbotList()
DEBUG: first.builder.dao.AbstractDAO - 	 QueryId  	:  builder.getNqaStatusChatbotList
DEBUG: org.mybatis.spring.SqlSessionUtils - Creating a new SqlSession
DEBUG: org.mybatis.spring.SqlSessionUtils - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@66c48b0b]
DEBUG: org.mybatis.spring.transaction.SpringManagedTransaction - JDBC Connection [net.sf.log4jdbc.ConnectionSpy@4785bf6] will be managed by Spring
2024-03-04 08:02:51,500  INFO SQL(simplebot)        :  SELECT No as host, Name, 'preparation' as nqaUploadStatus
 from Account
		ORDER BY No
2024-03-04 08:02:51,507 ERROR  org.apache.ibatis.executor.statement.PreparedStatementHandler.query(PreparedStatementHandler.java:64)
1. SELECT No as host, Name, 'preparation' as nqaUploadStatus from Account
		ORDER BY No
com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: Table 'Chatbot.Account' doesn't exist
	at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
	at sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:423)
	at com.mysql.jdbc.Util.handleNewInstance(Util.java:425)
	at com.mysql.jdbc.Util.getInstance(Util.java:408)
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:944)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:3933)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:3869)
	at com.mysql.jdbc.MysqlIO.sendCommand(MysqlIO.java:2524)
	at com.mysql.jdbc.MysqlIO.sqlQueryDirect(MysqlIO.java:2675)
	at com.mysql.jdbc.ConnectionImpl.execSQL(ConnectionImpl.java:2465)
	at com.mysql.jdbc.PreparedStatement.executeInternal(PreparedStatement.java:1912)
	at com.mysql.jdbc.PreparedStatement.execute(PreparedStatement.java:1251)
	at org.apache.commons.dbcp.DelegatingPreparedStatement.execute(DelegatingPreparedStatement.java:172)
	at org.apache.commons.dbcp.DelegatingPreparedStatement.execute(DelegatingPreparedStatement.java:172)
	at net.sf.log4jdbc.PreparedStatementSpy.execute(PreparedStatementSpy.java:418)
	at org.apache.ibatis.executor.statement.PreparedStatementHandler.query(PreparedStatementHandler.java:64)
	at org.apache.ibatis.executor.statement.RoutingStatementHandler.query(RoutingStatementHandler.java:79)
	at org.apache.ibatis.executor.SimpleExecutor.doQuery(SimpleExecutor.java:63)
	at org.apache.ibatis.executor.BaseExecutor.queryFromDatabase(BaseExecutor.java:324)
	at org.apache.ibatis.executor.BaseExecutor.query(BaseExecutor.java:156)
	at org.apache.ibatis.executor.CachingExecutor.query(CachingExecutor.java:109)
	at org.apache.ibatis.executor.CachingExecutor.query(CachingExecutor.java:83)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:148)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:141)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:136)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:433)
	at com.sun.proxy.$Proxy26.selectList(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate.selectList(SqlSessionTemplate.java:222)
	at first.builder.dao.AbstractDAO.selectList(AbstractDAO.java:64)
	at first.builder.dao.BuilderDAO.getNqaStatusChatbotList(BuilderDAO.java:554)
	at first.builder.dao.BuilderDAO$$FastClassBySpringCGLIB$$76e165a4.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:736)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:157)
	at org.springframework.aop.aspectj.MethodInvocationProceedingJoinPoint.proceed(MethodInvocationProceedingJoinPoint.java:84)
	at first.common.logger.LoggerAspect.logPrint(LoggerAspect.java:29)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:627)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:616)
	at org.springframework.aop.aspectj.AspectJAroundAdvice.invoke(AspectJAroundAdvice.java:70)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:92)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:671)
	at first.builder.dao.BuilderDAO$$EnhancerBySpringCGLIB$$4ac8bdd.getNqaStatusChatbotList(<generated>)
	at first.builder.service.BuilderServiceImpl.getNqaStatusChatbotList(BuilderServiceImpl.java:2224)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:333)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:190)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:157)
	at org.springframework.aop.aspectj.MethodInvocationProceedingJoinPoint.proceed(MethodInvocationProceedingJoinPoint.java:84)
	at first.common.logger.LoggerAspect.logPrint(LoggerAspect.java:29)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:627)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:616)
	at org.springframework.aop.aspectj.AspectJAroundAdvice.invoke(AspectJAroundAdvice.java:70)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.transaction.interceptor.TransactionInterceptor$1.proceedWithInvocation(TransactionInterceptor.java:99)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:282)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:96)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:92)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:213)
	at com.sun.proxy.$Proxy28.getNqaStatusChatbotList(Unknown Source)
	at first.common.util.NqaUploadStatusList.setNqaStatusList(NqaUploadStatusList.java:26)
	at first.common.util.NqaUploadStatusList$$EnhancerBySpringCGLIB$$9c8f8637.CGLIB$setNqaStatusList$0(<generated>)
	at first.common.util.NqaUploadStatusList$$EnhancerBySpringCGLIB$$9c8f8637$$FastClassBySpringCGLIB$$e980340b.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invokeSuper(MethodProxy.java:228)
	at org.springframework.context.annotation.ConfigurationClassEnhancer$BeanMethodInterceptor.intercept(ConfigurationClassEnhancer.java:358)
	at first.common.util.NqaUploadStatusList$$EnhancerBySpringCGLIB$$9c8f8637.setNqaStatusList(<generated>)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.beans.factory.support.SimpleInstantiationStrategy.instantiate(SimpleInstantiationStrategy.java:162)
	at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:588)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1178)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1072)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:511)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:481)
	at org.springframework.beans.factory.support.AbstractBeanFactory$1.getObject(AbstractBeanFactory.java:312)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:230)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:308)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:197)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:761)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:867)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:543)
	at org.springframework.web.context.ContextLoader.configureAndRefreshWebApplicationContext(ContextLoader.java:443)
	at org.springframework.web.context.ContextLoader.initWebApplicationContext(ContextLoader.java:325)
	at org.springframework.web.context.ContextLoaderListener.contextInitialized(ContextLoaderListener.java:107)
	at org.apache.catalina.core.StandardContext.listenerStart(StandardContext.java:4441)
	at org.apache.catalina.core.StandardContext.startInternal(StandardContext.java:4899)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:171)
	at org.apache.catalina.core.ContainerBase.addChildInternal(ContainerBase.java:710)
	at org.apache.catalina.core.ContainerBase.addChild(ContainerBase.java:687)
	at org.apache.catalina.core.StandardHost.addChild(StandardHost.java:660)
	at org.apache.catalina.startup.HostConfig.deployWAR(HostConfig.java:1015)
	at org.apache.catalina.startup.HostConfig$DeployWar.run(HostConfig.java:1867)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:750)
DEBUG: org.mybatis.spring.SqlSessionUtils - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@66c48b0b]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@66c48b0b]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@66c48b0b]
04-Mar-2024 08:02:51.542 SEVERE [localhost-startStop-1] org.apache.catalina.core.StandardContext.startInternal One or more listeners failed to start. Full details will be found in the appropriate container log file
04-Mar-2024 08:02:51.546 SEVERE [localhost-startStop-1] org.apache.catalina.core.StandardContext.startInternal Context [/sds-builder] startup failed due to previous errors
04-Mar-2024 08:02:51.551 WARNING [localhost-startStop-1] org.apache.catalina.loader.WebappClassLoaderBase.clearReferencesJdbc The web application [sds-builder] registered the JDBC driver [com.mysql.jdbc.Driver] but failed to unregister it when the web application was stopped. To prevent a memory leak, the JDBC Driver has been forcibly unregistered.
04-Mar-2024 08:02:51.552 WARNING [localhost-startStop-1] org.apache.catalina.loader.WebappClassLoaderBase.clearReferencesJdbc The web application [sds-builder] registered the JDBC driver [net.sf.log4jdbc.DriverSpy] but failed to unregister it when the web application was stopped. To prevent a memory leak, the JDBC Driver has been forcibly unregistered.
04-Mar-2024 08:02:51.552 WARNING [localhost-startStop-1] org.apache.catalina.loader.WebappClassLoaderBase.clearReferencesJdbc The web application [sds-builder] registered the JDBC driver [com.microsoft.sqlserver.jdbc.SQLServerDriver] but failed to unregister it when the web application was stopped. To prevent a memory leak, the JDBC Driver has been forcibly unregistered.
04-Mar-2024 08:02:51.552 WARNING [localhost-startStop-1] org.apache.catalina.loader.WebappClassLoaderBase.clearReferencesThreads The web application [sds-builder] appears to have started a thread named [mysql-cj-abandoned-connection-cleanup] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 java.lang.Object.wait(Native Method)
 java.lang.ref.ReferenceQueue.remove(ReferenceQueue.java:144)
 com.mysql.jdbc.AbandonedConnectionCleanupThread.run(AbandonedConnectionCleanupThread.java:80)
 java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
 java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
 java.lang.Thread.run(Thread.java:750)
04-Mar-2024 08:02:51.557 INFO [localhost-startStop-1] org.apache.catalina.startup.HostConfig.deployWAR Deployment of web application archive [/home/minds/maum/sds-builder/apache-tomcat-8.5.99/webapps/sds-builder.war] has finished in [4,752] ms
04-Mar-2024 08:02:51.557 INFO [localhost-startStop-1] org.apache.catalina.startup.HostConfig.deployDirectory Deploying web application directory [/home/minds/maum/sds-builder/apache-tomcat-8.5.99/webapps/examples]
04-Mar-2024 08:02:51.676 INFO [localhost-startStop-1] org.apache.catalina.startup.HostConfig.deployDirectory Deployment of web application directory [/home/minds/maum/sds-builder/apache-tomcat-8.5.99/webapps/examples] has finished in [119] ms
04-Mar-2024 08:02:51.676 INFO [localhost-startStop-1] org.apache.catalina.startup.HostConfig.deployDirectory Deploying web application directory [/home/minds/maum/sds-builder/apache-tomcat-8.5.99/webapps/manager]
04-Mar-2024 08:02:51.693 INFO [localhost-startStop-1] org.apache.catalina.startup.HostConfig.deployDirectory Deployment of web application directory [/home/minds/maum/sds-builder/apache-tomcat-8.5.99/webapps/manager] has finished in [17] ms
04-Mar-2024 08:02:51.694 INFO [localhost-startStop-1] org.apache.catalina.startup.HostConfig.deployDirectory Deploying web application directory [/home/minds/maum/sds-builder/apache-tomcat-8.5.99/webapps/host-manager]
04-Mar-2024 08:02:51.707 INFO [localhost-startStop-1] org.apache.catalina.startup.HostConfig.deployDirectory Deployment of web application directory [/home/minds/maum/sds-builder/apache-tomcat-8.5.99/webapps/host-manager] has finished in [13] ms
04-Mar-2024 08:02:51.707 INFO [localhost-startStop-1] org.apache.catalina.startup.HostConfig.deployDirectory Deploying web application directory [/home/minds/maum/sds-builder/apache-tomcat-8.5.99/webapps/docs]
04-Mar-2024 08:02:51.719 INFO [localhost-startStop-1] org.apache.catalina.startup.HostConfig.deployDirectory Deployment of web application directory [/home/minds/maum/sds-builder/apache-tomcat-8.5.99/webapps/docs] has finished in [12] ms
04-Mar-2024 08:02:51.725 INFO [main] org.apache.coyote.AbstractProtocol.start Starting ProtocolHandler ["http-nio-18090"]
04-Mar-2024 08:02:51.749 INFO [main] org.apache.catalina.startup.Catalina.start Server startup in 5016 ms
04-Mar-2024 08:02:56.050 INFO [mysql-cj-abandoned-connection-cleanup] org.apache.catalina.loader.WebappClassLoaderBase.checkStateForResourceLoading Illegal access: this web application instance has been stopped already. Could not load []. The following stack trace is thrown for debugging purposes as well as to attempt to terminate the thread which caused the illegal access.
	java.lang.IllegalStateException: Illegal access: this web application instance has been stopped already. Could not load []. The following stack trace is thrown for debugging purposes as well as to attempt to terminate the thread which caused the illegal access.
		at org.apache.catalina.loader.WebappClassLoaderBase.checkStateForResourceLoading(WebappClassLoaderBase.java:1358)
		at org.apache.catalina.loader.WebappClassLoaderBase.getResource(WebappClassLoaderBase.java:990)
		at com.mysql.jdbc.AbandonedConnectionCleanupThread.checkThreadContextClassLoader(AbandonedConnectionCleanupThread.java:112)
		at com.mysql.jdbc.AbandonedConnectionCleanupThread.run(AbandonedConnectionCleanupThread.java:79)
		at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
		at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
		at java.lang.Thread.run(Thread.java:750)
04-Mar-2024 08:03:16.306 INFO [main] org.apache.catalina.core.StandardServer.await A valid shutdown command was received via the shutdown port. Stopping the Server instance.
04-Mar-2024 08:03:16.306 INFO [main] org.apache.coyote.AbstractProtocol.pause Pausing ProtocolHandler ["http-nio-18090"]
04-Mar-2024 08:03:16.310 INFO [main] org.apache.catalina.core.StandardService.stopInternal Stopping service [Catalina]
04-Mar-2024 08:03:16.346 INFO [main] org.apache.coyote.AbstractProtocol.stop Stopping ProtocolHandler ["http-nio-18090"]
04-Mar-2024 08:03:16.355 INFO [main] org.apache.coyote.AbstractProtocol.destroy Destroying ProtocolHandler ["http-nio-18090"]
04-Mar-2024 08:04:01.622 INFO [main] org.apache.catalina.startup.VersionLoggerListener.log Server version name:   Apache Tomcat/8.5.99
04-Mar-2024 08:04:01.623 INFO [main] org.apache.catalina.startup.VersionLoggerListener.log Server built:          Feb 14 2024 22:52:13 UTC
04-Mar-2024 08:04:01.624 INFO [main] org.apache.catalina.startup.VersionLoggerListener.log Server version number: 8.5.99.0
04-Mar-2024 08:04:01.624 INFO [main] org.apache.catalina.startup.VersionLoggerListener.log OS Name:               Linux
04-Mar-2024 08:04:01.624 INFO [main] org.apache.catalina.startup.VersionLoggerListener.log OS Version:            5.15.0-97-generic
04-Mar-2024 08:04:01.624 INFO [main] org.apache.catalina.startup.VersionLoggerListener.log Architecture:          amd64
04-Mar-2024 08:04:01.624 INFO [main] org.apache.catalina.startup.VersionLoggerListener.log Java Home:             /usr/lib/jvm/java-8-openjdk-amd64/jre
04-Mar-2024 08:04:01.624 INFO [main] org.apache.catalina.startup.VersionLoggerListener.log JVM Version:           1.8.0_392-8u392-ga-1~22.04-b08
04-Mar-2024 08:04:01.624 INFO [main] org.apache.catalina.startup.VersionLoggerListener.log JVM Vendor:            Private Build
04-Mar-2024 08:04:01.624 INFO [main] org.apache.catalina.startup.VersionLoggerListener.log CATALINA_BASE:         /home/minds/maum/sds-builder/apache-tomcat-8.5.99
04-Mar-2024 08:04:01.624 INFO [main] org.apache.catalina.startup.VersionLoggerListener.log CATALINA_HOME:         /home/minds/maum/sds-builder/apache-tomcat-8.5.99
04-Mar-2024 08:04:01.624 INFO [main] org.apache.catalina.startup.VersionLoggerListener.log Command line argument: -Djava.util.logging.config.file=/home/minds/maum/sds-builder/apache-tomcat-8.5.99/conf/logging.properties
04-Mar-2024 08:04:01.625 INFO [main] org.apache.catalina.startup.VersionLoggerListener.log Command line argument: -Djava.util.logging.manager=org.apache.juli.ClassLoaderLogManager
04-Mar-2024 08:04:01.625 INFO [main] org.apache.catalina.startup.VersionLoggerListener.log Command line argument: -Djdk.tls.ephemeralDHKeySize=2048
04-Mar-2024 08:04:01.625 INFO [main] org.apache.catalina.startup.VersionLoggerListener.log Command line argument: -Djava.protocol.handler.pkgs=org.apache.catalina.webresources
04-Mar-2024 08:04:01.625 INFO [main] org.apache.catalina.startup.VersionLoggerListener.log Command line argument: -Dorg.apache.catalina.security.SecurityListener.UMASK=0027
04-Mar-2024 08:04:01.625 INFO [main] org.apache.catalina.startup.VersionLoggerListener.log Command line argument: -Dignore.endorsed.dirs=
04-Mar-2024 08:04:01.625 INFO [main] org.apache.catalina.startup.VersionLoggerListener.log Command line argument: -Dcatalina.base=/home/minds/maum/sds-builder/apache-tomcat-8.5.99
04-Mar-2024 08:04:01.625 INFO [main] org.apache.catalina.startup.VersionLoggerListener.log Command line argument: -Dcatalina.home=/home/minds/maum/sds-builder/apache-tomcat-8.5.99
04-Mar-2024 08:04:01.625 INFO [main] org.apache.catalina.startup.VersionLoggerListener.log Command line argument: -Djava.io.tmpdir=/home/minds/maum/sds-builder/apache-tomcat-8.5.99/temp
04-Mar-2024 08:04:01.626 INFO [main] org.apache.catalina.core.AprLifecycleListener.lifecycleEvent The Apache Tomcat Native library which allows using OpenSSL was not found on the java.library.path: [/usr/java/packages/lib/amd64:/usr/lib/x86_64-linux-gnu/jni:/lib/x86_64-linux-gnu:/usr/lib/x86_64-linux-gnu:/usr/lib/jni:/lib:/usr/lib]
04-Mar-2024 08:04:01.690 INFO [main] org.apache.coyote.AbstractProtocol.init Initializing ProtocolHandler ["http-nio-18090"]
04-Mar-2024 08:04:01.708 INFO [main] org.apache.catalina.startup.Catalina.load Initialization processed in 440 ms
04-Mar-2024 08:04:01.757 INFO [main] org.apache.catalina.core.StandardService.startInternal Starting service [Catalina]
04-Mar-2024 08:04:01.758 INFO [main] org.apache.catalina.core.StandardEngine.startInternal Starting Servlet engine: [Apache Tomcat/8.5.99]
04-Mar-2024 08:04:01.780 INFO [localhost-startStop-1] org.apache.catalina.startup.HostConfig.deployWAR Deploying web application archive [/home/minds/maum/sds-builder/apache-tomcat-8.5.99/webapps/sds-builder.war]
04-Mar-2024 08:04:04.401 INFO [localhost-startStop-1] org.apache.jasper.servlet.TldScanner.scanJars At least one JAR was scanned for TLDs yet contained no TLDs. Enable debug logging for this logger for a complete list of JARs that were scanned but no TLDs were found in them. Skipping unneeded JARs during scanning can improve startup time and JSP compilation time.
DEBUG: org.mybatis.spring.SqlSessionFactoryBean - Property 'configuration' or 'configLocation' not specified, using default MyBatis Configuration
DEBUG: org.mybatis.spring.SqlSessionFactoryBean - Parsed mapper file: 'file [/home/minds/maum/sds-builder/apache-tomcat-8.5.99/webapps/sds-builder/WEB-INF/classes/mapper/maria/Chatbot/Builder_SQL.xml]'
DEBUG: org.mybatis.spring.SqlSessionFactoryBean - Parsed mapper file: 'file [/home/minds/maum/sds-builder/apache-tomcat-8.5.99/webapps/sds-builder/WEB-INF/classes/mapper/maria/Chatbot/MaumSDS_SQL.xml]'
DEBUG: org.mybatis.spring.SqlSessionFactoryBean - Property 'configuration' or 'configLocation' not specified, using default MyBatis Configuration
DEBUG: org.mybatis.spring.SqlSessionFactoryBean - Parsed mapper file: 'file [/home/minds/maum/sds-builder/apache-tomcat-8.5.99/webapps/sds-builder/WEB-INF/classes/mapper/maria/HAPPYCALL4/NQA_SQL.xml]'
DEBUG: org.mybatis.spring.SqlSessionFactoryBean - Parsed mapper file: 'file [/home/minds/maum/sds-builder/apache-tomcat-8.5.99/webapps/sds-builder/WEB-INF/classes/mapper/maria/HAPPYCALL4/SimpleBot_SQL.xml]'
SimpleBot Execution Environment : prod
SimpleBot BertIntent itfIP : 0
SimpleBot BertIntent nerIP : 0
SimpleBot BL IP : 125.132.250.244
SimpleBot CM IP : 121.133.247.250
SimpleBot M2U rest address : http://localhost:9990
SimpleBot Style Resources Path : /home/minds/maum/sds-builder/imgUpload
Default Resources Make : chatbot.css
Default Resources Make : chatbot_custom.css
Default Resources Make : chatbot_floating.css
Default Resources Make : IconImg
Default Resources Make : logoImg
Default Resources Make : default
Default Resources Make : mindslab
Default Resources Make : redtie
Default Resource constructed.
DEBUG: first.common.logger.LoggerAspect - ServiceImpl  	:  first.builder.service.BuilderService.getNqaStatusChatbotList()
DEBUG: first.common.logger.LoggerAspect - DAO  		:  first.builder.dao.BuilderDAO.getNqaStatusChatbotList()
DEBUG: first.builder.dao.AbstractDAO - 	 QueryId  	:  builder.getNqaStatusChatbotList
DEBUG: org.mybatis.spring.SqlSessionUtils - Creating a new SqlSession
DEBUG: org.mybatis.spring.SqlSessionUtils - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@66c48b0b]
DEBUG: org.mybatis.spring.transaction.SpringManagedTransaction - JDBC Connection [net.sf.log4jdbc.ConnectionSpy@4785bf6] will be managed by Spring
2024-03-04 08:04:06,520  INFO SQL(simplebot)        :  SELECT No as host, Name, 'preparation' as nqaUploadStatus
 from Account
		ORDER BY No
DEBUG: org.mybatis.spring.SqlSessionUtils - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@66c48b0b]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@66c48b0b]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@66c48b0b]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@66c48b0b]
04-Mar-2024 08:04:07.550 INFO [localhost-startStop-1] org.apache.catalina.startup.HostConfig.deployWAR Deployment of web application archive [/home/minds/maum/sds-builder/apache-tomcat-8.5.99/webapps/sds-builder.war] has finished in [5,769] ms
04-Mar-2024 08:04:07.551 INFO [localhost-startStop-1] org.apache.catalina.startup.HostConfig.deployDirectory Deploying web application directory [/home/minds/maum/sds-builder/apache-tomcat-8.5.99/webapps/examples]
04-Mar-2024 08:04:07.651 INFO [localhost-startStop-1] org.apache.catalina.startup.HostConfig.deployDirectory Deployment of web application directory [/home/minds/maum/sds-builder/apache-tomcat-8.5.99/webapps/examples] has finished in [100] ms
04-Mar-2024 08:04:07.651 INFO [localhost-startStop-1] org.apache.catalina.startup.HostConfig.deployDirectory Deploying web application directory [/home/minds/maum/sds-builder/apache-tomcat-8.5.99/webapps/manager]
04-Mar-2024 08:04:07.670 INFO [localhost-startStop-1] org.apache.catalina.startup.HostConfig.deployDirectory Deployment of web application directory [/home/minds/maum/sds-builder/apache-tomcat-8.5.99/webapps/manager] has finished in [19] ms
04-Mar-2024 08:04:07.670 INFO [localhost-startStop-1] org.apache.catalina.startup.HostConfig.deployDirectory Deploying web application directory [/home/minds/maum/sds-builder/apache-tomcat-8.5.99/webapps/host-manager]
04-Mar-2024 08:04:07.682 INFO [localhost-startStop-1] org.apache.catalina.startup.HostConfig.deployDirectory Deployment of web application directory [/home/minds/maum/sds-builder/apache-tomcat-8.5.99/webapps/host-manager] has finished in [12] ms
04-Mar-2024 08:04:07.682 INFO [localhost-startStop-1] org.apache.catalina.startup.HostConfig.deployDirectory Deploying web application directory [/home/minds/maum/sds-builder/apache-tomcat-8.5.99/webapps/docs]
04-Mar-2024 08:04:07.693 INFO [localhost-startStop-1] org.apache.catalina.startup.HostConfig.deployDirectory Deployment of web application directory [/home/minds/maum/sds-builder/apache-tomcat-8.5.99/webapps/docs] has finished in [11] ms
04-Mar-2024 08:04:07.698 INFO [main] org.apache.coyote.AbstractProtocol.start Starting ProtocolHandler ["http-nio-18090"]
04-Mar-2024 08:04:07.711 INFO [main] org.apache.catalina.startup.Catalina.start Server startup in 6003 ms
DEBUG: first.common.logger.LoggerAspect - Controller  	:  first.builder.controller.BuilderController.chatbotBuilderCommon()
DEBUG: first.common.logger.LoggerAspect - Controller  	:  first.builder.controller.BuilderController.getChatList()
DEBUG: first.common.logger.LoggerAspect - ServiceImpl  	:  first.builder.service.BuilderService.getChatbotList()
DEBUG: first.common.logger.LoggerAspect - DAO  		:  first.builder.dao.BuilderDAO.getChatbotList()
DEBUG: first.builder.dao.AbstractDAO - 	 QueryId  	:  builder.getChatbotList
DEBUG: org.mybatis.spring.SqlSessionUtils - Creating a new SqlSession
DEBUG: org.mybatis.spring.SqlSessionUtils - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@64263f6f]
DEBUG: org.mybatis.spring.transaction.SpringManagedTransaction - JDBC Connection [net.sf.log4jdbc.ConnectionSpy@34164502] will be managed by Spring
2024-03-04 08:05:41,297  INFO SQL(simplebot)        :  SELECT  /* No, Name, Host, Language */
			*
		from Account WHERE 1=1
		AND No IN
		 (0) 

		 
		ORDER BY No
DEBUG: org.mybatis.spring.SqlSessionUtils - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@64263f6f]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@64263f6f]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@64263f6f]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@64263f6f]
DEBUG: first.common.logger.LoggerAspect - Controller  	:  first.builder.controller.BuilderController.chatbotBuilderCommon()
DEBUG: first.common.logger.LoggerAspect - Controller  	:  first.builder.controller.BuilderController.getChatList()
DEBUG: first.common.logger.LoggerAspect - ServiceImpl  	:  first.builder.service.BuilderService.getChatbotList()
DEBUG: first.common.logger.LoggerAspect - DAO  		:  first.builder.dao.BuilderDAO.getChatbotList()
DEBUG: first.builder.dao.AbstractDAO - 	 QueryId  	:  builder.getChatbotList
DEBUG: org.mybatis.spring.SqlSessionUtils - Creating a new SqlSession
DEBUG: org.mybatis.spring.SqlSessionUtils - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@25b0fddf]
DEBUG: org.mybatis.spring.transaction.SpringManagedTransaction - JDBC Connection [net.sf.log4jdbc.ConnectionSpy@5c8fd1b8] will be managed by Spring
2024-03-04 08:07:11,329  INFO SQL(simplebot)        :  SELECT  /* No, Name, Host, Language */
			*
		from Account WHERE 1=1
		AND No IN
		 (0) 

		 
		ORDER BY No
DEBUG: org.mybatis.spring.SqlSessionUtils - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@25b0fddf]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@25b0fddf]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@25b0fddf]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@25b0fddf]
DEBUG: first.common.logger.LoggerAspect - Controller  	:  first.builder.controller.BuilderController.chatbotBuilderCommon()
DEBUG: first.common.logger.LoggerAspect - Controller  	:  first.builder.controller.BuilderController.getChatList()
DEBUG: first.common.logger.LoggerAspect - ServiceImpl  	:  first.builder.service.BuilderService.getChatbotList()
DEBUG: first.common.logger.LoggerAspect - DAO  		:  first.builder.dao.BuilderDAO.getChatbotList()
DEBUG: first.builder.dao.AbstractDAO - 	 QueryId  	:  builder.getChatbotList
DEBUG: org.mybatis.spring.SqlSessionUtils - Creating a new SqlSession
DEBUG: org.mybatis.spring.SqlSessionUtils - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@3c9ed32f]
DEBUG: org.mybatis.spring.transaction.SpringManagedTransaction - JDBC Connection [net.sf.log4jdbc.ConnectionSpy@de80e7c] will be managed by Spring
2024-03-04 09:27:17,737  INFO SQL(simplebot)        :  SELECT  /* No, Name, Host, Language */
			*
		from Account WHERE 1=1
		AND No IN
		 (0) 

		 
		ORDER BY No
DEBUG: org.mybatis.spring.SqlSessionUtils - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@3c9ed32f]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@3c9ed32f]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@3c9ed32f]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@3c9ed32f]
DEBUG: first.common.logger.LoggerAspect - Controller  	:  first.builder.controller.BuilderController.builderContentsNewChatbot()
DEBUG: first.common.logger.LoggerAspect - Controller  	:  first.builder.controller.BuilderController.builderBottomnewChatbot()
DEBUG: first.common.logger.LoggerAspect - ServiceImpl  	:  first.builder.service.BuilderService.getDomain()
DEBUG: first.common.logger.LoggerAspect - DAO  		:  first.builder.dao.BuilderDAO.getDomain()
DEBUG: first.builder.dao.AbstractDAO - 	 QueryId  	:  builder.getDomain
DEBUG: org.mybatis.spring.SqlSessionUtils - Creating a new SqlSession
DEBUG: org.mybatis.spring.SqlSessionUtils - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@50bab4d9]
DEBUG: org.mybatis.spring.transaction.SpringManagedTransaction - JDBC Connection [net.sf.log4jdbc.ConnectionSpy@63e44157] will be managed by Spring
2024-03-04 09:27:21,345  INFO SQL(simplebot)        :  SELECT Name, DefaultHost
		From Domain
DEBUG: org.mybatis.spring.SqlSessionUtils - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@50bab4d9]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@50bab4d9]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@50bab4d9]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@50bab4d9]
DEBUG: first.common.logger.LoggerAspect - Controller  	:  first.builder.controller.BuilderController.checkNewHostname()
DEBUG: first.common.logger.LoggerAspect - ServiceImpl  	:  first.builder.service.BuilderService.getNewHostName()
DEBUG: first.common.logger.LoggerAspect - DAO  		:  first.builder.dao.BuilderDAO.getNewHostName()
DEBUG: first.builder.dao.AbstractDAO - 	 QueryId  	:  builder.getNewHostName
DEBUG: org.mybatis.spring.SqlSessionUtils - Creating a new SqlSession
DEBUG: org.mybatis.spring.SqlSessionUtils - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1704c6]
DEBUG: org.mybatis.spring.transaction.SpringManagedTransaction - JDBC Connection [net.sf.log4jdbc.ConnectionSpy@29252f0c] will be managed by Spring
2024-03-04 09:27:32,426  INFO SQL(simplebot)        :  SELECT No, Host
		From Account
		Where Host='init'
DEBUG: org.mybatis.spring.SqlSessionUtils - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1704c6]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1704c6]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1704c6]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1704c6]
DEBUG: first.common.logger.LoggerAspect - Controller  	:  first.builder.controller.BuilderController.addNewChatbot()
DEBUG: first.common.logger.LoggerAspect - ServiceImpl  	:  first.builder.service.BuilderService.addChatbot()
DEBUG: first.common.logger.LoggerAspect - DAO  		:  first.builder.dao.BuilderDAO.addChatbot()
DEBUG: first.builder.dao.AbstractDAO - 	 QueryId  	:  builder.addChatbot
DEBUG: org.mybatis.spring.SqlSessionUtils - Creating a new SqlSession
DEBUG: org.mybatis.spring.SqlSessionUtils - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@2b00c644] was not registered for synchronization because synchronization is not active
DEBUG: org.mybatis.spring.transaction.SpringManagedTransaction - JDBC Connection [net.sf.log4jdbc.ConnectionSpy@a77dcb9] will not be managed by Spring
2024-03-04 09:27:32,451  INFO SQL(simplebot)        :  insert into Account (Name, Email, Host, Description,Language)
		values ('init','','init', '', '1')
DEBUG: org.mybatis.spring.SqlSessionUtils - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@2b00c644]
DEBUG: first.common.logger.LoggerAspect - ServiceImpl  	:  first.builder.service.BuilderService.getBackendInfo()
DEBUG: first.common.logger.LoggerAspect - DAO  		:  first.builder.dao.BuilderDAO.getBackendInfo()
DEBUG: first.builder.dao.AbstractDAO - 	 QueryId  	:  builder.getBackendInfo
DEBUG: org.mybatis.spring.SqlSessionUtils - Creating a new SqlSession
DEBUG: org.mybatis.spring.SqlSessionUtils - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@9ea8b45]
DEBUG: org.mybatis.spring.transaction.SpringManagedTransaction - JDBC Connection [net.sf.log4jdbc.ConnectionSpy@4196c611] will be managed by Spring
2024-03-04 09:27:32,464  INFO SQL(simplebot)        :  SELECT *
		From BackendInfo
		WHERE host=1
DEBUG: org.mybatis.spring.SqlSessionUtils - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@9ea8b45]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@9ea8b45]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@9ea8b45]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@9ea8b45]
DEBUG: first.common.logger.LoggerAspect - ServiceImpl  	:  first.builder.service.BuilderService.insertBackendInfos()
DEBUG: first.common.logger.LoggerAspect - DAO  		:  first.builder.dao.BuilderDAO.insertBackendInfos()
DEBUG: first.builder.dao.AbstractDAO - 	 QueryId  	:  builder.insertBackendInfos
DEBUG: org.mybatis.spring.SqlSessionUtils - Creating a new SqlSession
DEBUG: org.mybatis.spring.SqlSessionUtils - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@40b46c81] was not registered for synchronization because synchronization is not active
DEBUG: org.mybatis.spring.transaction.SpringManagedTransaction - JDBC Connection [net.sf.log4jdbc.ConnectionSpy@f7763b4] will not be managed by Spring
2024-03-04 09:27:32,469  INFO SQL(simplebot)        :  insert into BackendInfo
		(host, service, ip, port)
		values(1636,'ITF',NULL, NULL)
DEBUG: org.mybatis.spring.SqlSessionUtils - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@40b46c81]
DEBUG: first.common.logger.LoggerAspect - ServiceImpl  	:  first.builder.service.BuilderService.insertBackendInfos()
DEBUG: first.common.logger.LoggerAspect - DAO  		:  first.builder.dao.BuilderDAO.insertBackendInfos()
DEBUG: first.builder.dao.AbstractDAO - 	 QueryId  	:  builder.insertBackendInfos
DEBUG: org.mybatis.spring.SqlSessionUtils - Creating a new SqlSession
DEBUG: org.mybatis.spring.SqlSessionUtils - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@50a3f622] was not registered for synchronization because synchronization is not active
DEBUG: org.mybatis.spring.transaction.SpringManagedTransaction - JDBC Connection [net.sf.log4jdbc.ConnectionSpy@5d317cb5] will not be managed by Spring
2024-03-04 09:27:32,473  INFO SQL(simplebot)        :  insert into BackendInfo
		(host, service, ip, port)
		values(1636,'NER',NULL, NULL)
DEBUG: org.mybatis.spring.SqlSessionUtils - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@50a3f622]
DEBUG: first.common.logger.LoggerAspect - ServiceImpl  	:  first.builder.service.BuilderService.getIntentAnswer()
DEBUG: first.common.logger.LoggerAspect - DAO  		:  first.builder.dao.BuilderDAO.getIntentAnswer()
DEBUG: first.builder.dao.AbstractDAO - 	 QueryId  	:  builder.getIntentAnswer
DEBUG: org.mybatis.spring.SqlSessionUtils - Creating a new SqlSession
DEBUG: org.mybatis.spring.SqlSessionUtils - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@6d3fedcb]
DEBUG: org.mybatis.spring.transaction.SpringManagedTransaction - JDBC Connection [net.sf.log4jdbc.ConnectionSpy@54686e08] will be managed by Spring
2024-03-04 09:27:32,482  INFO SQL(simplebot)        :  SELECT I.No as I_No, I.Language as I_Language, I.Answer as I_Answer, I.Account as I_Account, I.TmpNo as I_TmpNo, A.No as A_NO, A.Answer as A_Answer, A.Account as A_Account, A.TmpNo as A_TmpNo, A.Language as A_Language,
				I.Main as Main, I.Name as Name, I.Entity as Entity, I.Next as Next, I.URL as URL, I.Description as Description, I.greetyn as greetyn, I.greet as greet, I.TmpNextIntent as TmpNextIntent
		FROM Intent I LEFT OUTER JOIN Answer A
		ON I.Answer = A.No
		WHERE I.Account=1 AND(I.Language=1 )
DEBUG: org.mybatis.spring.SqlSessionUtils - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@6d3fedcb]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@6d3fedcb]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@6d3fedcb]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@6d3fedcb]
DEBUG: first.common.logger.LoggerAspect - ServiceImpl  	:  first.builder.service.BuilderService.getIntentRelByAll()
DEBUG: first.common.logger.LoggerAspect - DAO  		:  first.builder.dao.BuilderDAO.getIntentRelByAll()
DEBUG: first.builder.dao.AbstractDAO - 	 QueryId  	:  builder.getIntentRelByAll
DEBUG: org.mybatis.spring.SqlSessionUtils - Creating a new SqlSession
DEBUG: org.mybatis.spring.SqlSessionUtils - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@3ca3eaa5]
DEBUG: org.mybatis.spring.transaction.SpringManagedTransaction - JDBC Connection [net.sf.log4jdbc.ConnectionSpy@7c017c09] will be managed by Spring
2024-03-04 09:27:32,503  INFO SQL(simplebot)        :  SELECT *
		From IntentRel
		WHERE SrcIntent = 1 or DestIntent = 1
DEBUG: org.mybatis.spring.SqlSessionUtils - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@3ca3eaa5]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@3ca3eaa5]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@3ca3eaa5]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@3ca3eaa5]
DEBUG: first.common.logger.LoggerAspect - ServiceImpl  	:  first.builder.service.BuilderService.getBertIntentByNo()
DEBUG: first.common.logger.LoggerAspect - DAO  		:  first.builder.dao.BuilderDAO.getBertIntentByNo()
DEBUG: first.builder.dao.AbstractDAO - 	 QueryId  	:  builder.getBertIntentByNo
DEBUG: org.mybatis.spring.SqlSessionUtils - Creating a new SqlSession
DEBUG: org.mybatis.spring.SqlSessionUtils - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@3cb6c6b2]
DEBUG: org.mybatis.spring.transaction.SpringManagedTransaction - JDBC Connection [net.sf.log4jdbc.ConnectionSpy@5c1effd5] will be managed by Spring
2024-03-04 09:27:32,508  INFO SQL(simplebot)        :  select *
		from BertIntent
		where (BertItfId = 1 or BertItfId = 2) AND (Language=1 )
DEBUG: org.mybatis.spring.SqlSessionUtils - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@3cb6c6b2]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@3cb6c6b2]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@3cb6c6b2]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@3cb6c6b2]
DEBUG: first.common.logger.LoggerAspect - ServiceImpl  	:  first.builder.service.BuilderService.insertAnswerByAll()
DEBUG: first.common.logger.LoggerAspect - DAO  		:  first.builder.dao.BuilderDAO.insertAnswerByAll()
DEBUG: first.builder.dao.AbstractDAO - 	 QueryId  	:  builder.insertAnswerByAll
DEBUG: org.mybatis.spring.SqlSessionUtils - Creating a new SqlSession
DEBUG: org.mybatis.spring.SqlSessionUtils - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@22fb1dbf] was not registered for synchronization because synchronization is not active
DEBUG: org.mybatis.spring.transaction.SpringManagedTransaction - JDBC Connection [net.sf.log4jdbc.ConnectionSpy@50a8a6bc] will not be managed by Spring
2024-03-04 09:27:32,513  INFO SQL(simplebot)        :  insert into Answer (Answer, Account, Language,TmpNo)
		values ('안녕하세요',1636,1,NULL)
DEBUG: org.mybatis.spring.SqlSessionUtils - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@22fb1dbf]
DEBUG: first.common.logger.LoggerAspect - ServiceImpl  	:  first.builder.service.BuilderService.insertIntentNewAll()
DEBUG: first.common.logger.LoggerAspect - DAO  		:  first.builder.dao.BuilderDAO.insertIntentNewAll()
DEBUG: first.builder.dao.AbstractDAO - 	 QueryId  	:  builder.insertIntentNewAll
DEBUG: org.mybatis.spring.SqlSessionUtils - Creating a new SqlSession
DEBUG: org.mybatis.spring.SqlSessionUtils - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@18a153c7] was not registered for synchronization because synchronization is not active
DEBUG: org.mybatis.spring.transaction.SpringManagedTransaction - JDBC Connection [net.sf.log4jdbc.ConnectionSpy@19580572] will not be managed by Spring
2024-03-04 09:27:32,518  INFO SQL(simplebot)        :  insert into Intent
		(Language, Main, Name, Answer, Next, URL, Description, Account, Entity, greetyn, TmpNo, TmpNextIntent, ResponseOrder)
		values(1, '처음으로', '처음으로', 1031641, NULL, NULL, NULL, 1636, 'N', '', NULL, NULL, '0,1,2')
DEBUG: org.mybatis.spring.SqlSessionUtils - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@18a153c7]
DEBUG: first.common.logger.LoggerAspect - ServiceImpl  	:  first.builder.service.BuilderService.insertBertIntentNew()
DEBUG: first.common.logger.LoggerAspect - DAO  		:  first.builder.dao.BuilderDAO.insertBertIntentNew()
DEBUG: first.builder.dao.AbstractDAO - 	 QueryId  	:  builder.insertBertIntentNew
DEBUG: org.mybatis.spring.SqlSessionUtils - Creating a new SqlSession
DEBUG: org.mybatis.spring.SqlSessionUtils - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@609ec792] was not registered for synchronization because synchronization is not active
DEBUG: org.mybatis.spring.transaction.SpringManagedTransaction - JDBC Connection [net.sf.log4jdbc.ConnectionSpy@4967de6f] will not be managed by Spring
2024-03-04 09:27:32,523  INFO SQL(simplebot)        :  insert into BertIntent
		(Name, Language, BertItfId)
		values('base',1,3145)
DEBUG: org.mybatis.spring.SqlSessionUtils - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@609ec792]
DEBUG: first.common.logger.LoggerAspect - ServiceImpl  	:  first.builder.service.BuilderService.selectReplaceDict()
DEBUG: first.common.logger.LoggerAspect - DAO  		:  first.builder.dao.BuilderDAO.selectReplaceDict()
DEBUG: first.builder.dao.AbstractDAO - 	 QueryId  	:  builder.selectReplaceDict
DEBUG: org.mybatis.spring.SqlSessionUtils - Creating a new SqlSession
DEBUG: org.mybatis.spring.SqlSessionUtils - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@44d1e82c]
DEBUG: org.mybatis.spring.transaction.SpringManagedTransaction - JDBC Connection [net.sf.log4jdbc.ConnectionSpy@748ace40] will be managed by Spring
2024-03-04 09:27:32,528  INFO SQL(simplebot)        :  SELECT *
		FROM ReplaceDict
		WHERE Host = 1
		ORDER BY Length(RTRIM(`Before`)) desc
DEBUG: org.mybatis.spring.SqlSessionUtils - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@44d1e82c]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@44d1e82c]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@44d1e82c]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@44d1e82c]
DEBUG: first.common.logger.LoggerAspect - Controller  	:  first.builder.controller.BuilderController.startSaveSetting()
DEBUG: first.common.logger.LoggerAspect - ServiceImpl  	:  first.builder.service.BuilderService.getStyleCSS()
DEBUG: first.common.logger.LoggerAspect - DAO  		:  first.builder.dao.BuilderDAO.getStyleCSS()
DEBUG: first.builder.dao.AbstractDAO - 	 QueryId  	:  builder.getStyleCSS
DEBUG: org.mybatis.spring.SqlSessionUtils - Creating a new SqlSession
DEBUG: org.mybatis.spring.SqlSessionUtils - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@60c5c4ae]
DEBUG: org.mybatis.spring.transaction.SpringManagedTransaction - JDBC Connection [net.sf.log4jdbc.ConnectionSpy@2f890f45] will be managed by Spring
2024-03-04 09:27:32,596  INFO SQL(simplebot)        :  SELECT *
		FROM style_css SC
		WHERE host='1636'
DEBUG: org.mybatis.spring.SqlSessionUtils - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@60c5c4ae]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@60c5c4ae]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@60c5c4ae]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@60c5c4ae]
DEBUG: first.common.logger.LoggerAspect - ServiceImpl  	:  first.builder.service.BuilderService.getStyleCSS()
DEBUG: first.common.logger.LoggerAspect - DAO  		:  first.builder.dao.BuilderDAO.getStyleCSS()
DEBUG: first.builder.dao.AbstractDAO - 	 QueryId  	:  builder.getStyleCSS
DEBUG: org.mybatis.spring.SqlSessionUtils - Creating a new SqlSession
DEBUG: org.mybatis.spring.SqlSessionUtils - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@56ed8065]
DEBUG: org.mybatis.spring.transaction.SpringManagedTransaction - JDBC Connection [net.sf.log4jdbc.ConnectionSpy@31620cd0] will be managed by Spring
2024-03-04 09:27:32,616  INFO SQL(simplebot)        :  SELECT *
		FROM style_css SC
		WHERE host='1636'
DEBUG: org.mybatis.spring.SqlSessionUtils - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@56ed8065]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@56ed8065]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@56ed8065]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@56ed8065]
DEBUG: first.common.logger.LoggerAspect - ServiceImpl  	:  first.builder.service.BuilderService.insertStyleCSS()
DEBUG: first.common.logger.LoggerAspect - DAO  		:  first.builder.dao.BuilderDAO.insertStyleCSS()
DEBUG: first.builder.dao.AbstractDAO - 	 QueryId  	:  builder.insertStyleCSS
DEBUG: org.mybatis.spring.SqlSessionUtils - Creating a new SqlSession
DEBUG: org.mybatis.spring.SqlSessionUtils - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1aed2922] was not registered for synchronization because synchronization is not active
DEBUG: org.mybatis.spring.transaction.SpringManagedTransaction - JDBC Connection [net.sf.log4jdbc.ConnectionSpy@6e2d4272] will not be managed by Spring
2024-03-04 09:27:32,620  INFO SQL(simplebot)        :  insert into style_css
		(host, textColor, mainColor, logoSize, posX, posY)
		values('1636', '255,255,255', '84,84,84', '34', '-1', '-1')
DEBUG: org.mybatis.spring.SqlSessionUtils - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1aed2922]
DEBUG: first.common.logger.LoggerAspect - Controller  	:  first.builder.controller.BuilderController.saveSetting()
DEBUG: first.common.logger.LoggerAspect - ServiceImpl  	:  first.builder.service.BuilderService.updateAccount()
DEBUG: first.common.logger.LoggerAspect - DAO  		:  first.builder.dao.BuilderDAO.updateAccount()
DEBUG: first.builder.dao.AbstractDAO - 	 QueryId  	:  builder.updateAccountSetting
DEBUG: org.mybatis.spring.SqlSessionUtils - Creating a new SqlSession
DEBUG: org.mybatis.spring.SqlSessionUtils - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@4172fd55] was not registered for synchronization because synchronization is not active
DEBUG: org.mybatis.spring.transaction.SpringManagedTransaction - JDBC Connection [net.sf.log4jdbc.ConnectionSpy@7bbfb698] will not be managed by Spring
2024-03-04 09:27:32,636  INFO SQL(simplebot)        :  update Account
		set Name = 'init' , Email = '', Host='init', Description=''
		WHERE No = '1636'
DEBUG: org.mybatis.spring.SqlSessionUtils - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@4172fd55]
DEBUG: first.common.logger.LoggerAspect - Controller  	:  first.builder.controller.BuilderController.getChatList()
DEBUG: first.common.logger.LoggerAspect - ServiceImpl  	:  first.builder.service.BuilderService.getChatbotList()
DEBUG: first.common.logger.LoggerAspect - DAO  		:  first.builder.dao.BuilderDAO.getChatbotList()
DEBUG: first.builder.dao.AbstractDAO - 	 QueryId  	:  builder.getChatbotList
DEBUG: org.mybatis.spring.SqlSessionUtils - Creating a new SqlSession
DEBUG: org.mybatis.spring.SqlSessionUtils - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@35bd06fc]
DEBUG: org.mybatis.spring.transaction.SpringManagedTransaction - JDBC Connection [net.sf.log4jdbc.ConnectionSpy@10907160] will be managed by Spring
2024-03-04 09:27:32,679  INFO SQL(simplebot)        :  SELECT  /* No, Name, Host, Language */
			*
		from Account WHERE 1=1
		AND No IN
		 
				 (  
					'1636'
				 ) 
			 

		 
		ORDER BY No
DEBUG: org.mybatis.spring.SqlSessionUtils - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@35bd06fc]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@35bd06fc]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@35bd06fc]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@35bd06fc]
DEBUG: first.common.logger.LoggerAspect - Controller  	:  first.builder.controller.BuilderController.builderBottomAnswer()
DEBUG: first.common.logger.LoggerAspect - Controller  	:  first.builder.controller.BuilderController.builderContentsAnswer()
DEBUG: first.common.logger.LoggerAspect - Controller  	:  first.builder.controller.BuilderController.getTask()
DEBUG: first.common.logger.LoggerAspect - ServiceImpl  	:  first.builder.service.BuilderService.getTaskCount()
DEBUG: first.common.logger.LoggerAspect - DAO  		:  first.builder.dao.BuilderDAO.getTaskCount()
DEBUG: first.builder.dao.AbstractDAO - 	 QueryId  	:  builder.getTaskCount
DEBUG: org.mybatis.spring.SqlSessionUtils - Creating a new SqlSession
DEBUG: org.mybatis.spring.SqlSessionUtils - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@494772f2]
DEBUG: org.mybatis.spring.transaction.SpringManagedTransaction - JDBC Connection [net.sf.log4jdbc.ConnectionSpy@6f07ddde] will be managed by Spring
2024-03-04 09:27:32,886  INFO SQL(simplebot)        :  SELECT COUNT(*) FROM Intent WHERE Account=1636
 and Language=1
DEBUG: org.mybatis.spring.SqlSessionUtils - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@494772f2]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@494772f2]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@494772f2]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@494772f2]
DEBUG: first.common.logger.LoggerAspect - ServiceImpl  	:  first.builder.service.BuilderService.getAnswerList()
DEBUG: first.common.logger.LoggerAspect - DAO  		:  first.builder.dao.BuilderDAO.getAnswerList()
DEBUG: first.builder.dao.AbstractDAO - 	 QueryId  	:  builder.getAnswerList
DEBUG: org.mybatis.spring.SqlSessionUtils - Creating a new SqlSession
DEBUG: org.mybatis.spring.SqlSessionUtils - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@6e3f7bf]
DEBUG: org.mybatis.spring.transaction.SpringManagedTransaction - JDBC Connection [net.sf.log4jdbc.ConnectionSpy@73beb2f0] will be managed by Spring
2024-03-04 09:27:32,891  INFO SQL(simplebot)        :  SELECT I.No, I.Main, I.Name, A.answer, I.Account
		FROM Intent I LEFT OUTER JOIN Answer A
		ON I.Answer = A.No
		WHERE I.Account=1636
 and I.Language=1
		ORDER BY I.No
		OFFSET 0 ROWS
		FETCH NEXT 15 ROWS ONLY
DEBUG: org.mybatis.spring.SqlSessionUtils - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@6e3f7bf]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@6e3f7bf]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@6e3f7bf]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@6e3f7bf]
DEBUG: first.common.logger.LoggerAspect - ServiceImpl  	:  first.builder.service.BuilderService.getAllIntents()
DEBUG: first.common.logger.LoggerAspect - DAO  		:  first.builder.dao.BuilderDAO.getAllIntents()
DEBUG: first.builder.dao.AbstractDAO - 	 QueryId  	:  builder.getAllIntents
DEBUG: org.mybatis.spring.SqlSessionUtils - Creating a new SqlSession
DEBUG: org.mybatis.spring.SqlSessionUtils - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@5bc8c2ae]
DEBUG: org.mybatis.spring.transaction.SpringManagedTransaction - JDBC Connection [net.sf.log4jdbc.ConnectionSpy@4bc22b38] will be managed by Spring
2024-03-04 09:27:32,895  INFO SQL(simplebot)        :  SELECT I.No, I.Main, I.Name,I.Next, I.URL, I.Language
		FROM Intent I
		WHERE I.Account=1636
		ORDER BY I.No
DEBUG: org.mybatis.spring.SqlSessionUtils - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@5bc8c2ae]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@5bc8c2ae]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@5bc8c2ae]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@5bc8c2ae]
DEBUG: first.common.logger.LoggerAspect - ServiceImpl  	:  first.builder.service.BuilderService.getAllBertIntents()
DEBUG: first.common.logger.LoggerAspect - DAO  		:  first.builder.dao.BuilderDAO.getAllBertIntents()
DEBUG: first.builder.dao.AbstractDAO - 	 QueryId  	:  builder.getAllBertIntents
DEBUG: org.mybatis.spring.SqlSessionUtils - Creating a new SqlSession
DEBUG: org.mybatis.spring.SqlSessionUtils - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@54c9ae0d]
DEBUG: org.mybatis.spring.transaction.SpringManagedTransaction - JDBC Connection [net.sf.log4jdbc.ConnectionSpy@4fc4f1c8] will be managed by Spring
2024-03-04 09:27:32,897  INFO SQL(simplebot)        :  SELECT B.No, B.Name, B.Language
		FROM BertIntent B LEFT OUTER JOIN BackendInfo BI
		ON B.BertItfId = BI.id
		WHERE BI.host=1636
		ORDER BY B.No
DEBUG: org.mybatis.spring.SqlSessionUtils - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@54c9ae0d]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@54c9ae0d]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@54c9ae0d]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@54c9ae0d]
DEBUG: first.common.logger.LoggerAspect - Controller  	:  first.builder.controller.BuilderController.getTask()
DEBUG: first.common.logger.LoggerAspect - ServiceImpl  	:  first.builder.service.BuilderService.getTaskCount()
DEBUG: first.common.logger.LoggerAspect - DAO  		:  first.builder.dao.BuilderDAO.getTaskCount()
DEBUG: first.builder.dao.AbstractDAO - 	 QueryId  	:  builder.getTaskCount
DEBUG: org.mybatis.spring.SqlSessionUtils - Creating a new SqlSession
DEBUG: org.mybatis.spring.SqlSessionUtils - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@21aa0618]
DEBUG: org.mybatis.spring.transaction.SpringManagedTransaction - JDBC Connection [net.sf.log4jdbc.ConnectionSpy@5c299499] will be managed by Spring
2024-03-04 09:27:32,942  INFO SQL(simplebot)        :  SELECT COUNT(*) FROM Intent WHERE Account=1636
 and Language=1
DEBUG: org.mybatis.spring.SqlSessionUtils - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@21aa0618]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@21aa0618]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@21aa0618]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@21aa0618]
DEBUG: first.common.logger.LoggerAspect - ServiceImpl  	:  first.builder.service.BuilderService.getAnswerList()
DEBUG: first.common.logger.LoggerAspect - DAO  		:  first.builder.dao.BuilderDAO.getAnswerList()
DEBUG: first.builder.dao.AbstractDAO - 	 QueryId  	:  builder.getAnswerList
DEBUG: org.mybatis.spring.SqlSessionUtils - Creating a new SqlSession
DEBUG: org.mybatis.spring.SqlSessionUtils - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@c91b20]
DEBUG: org.mybatis.spring.transaction.SpringManagedTransaction - JDBC Connection [net.sf.log4jdbc.ConnectionSpy@7940523e] will be managed by Spring
2024-03-04 09:27:32,944  INFO SQL(simplebot)        :  SELECT I.No, I.Main, I.Name, A.answer, I.Account
		FROM Intent I LEFT OUTER JOIN Answer A
		ON I.Answer = A.No
		WHERE I.Account=1636
 and I.Language=1
		ORDER BY I.No
		OFFSET 0 ROWS
		FETCH NEXT 15 ROWS ONLY
DEBUG: org.mybatis.spring.SqlSessionUtils - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@c91b20]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@c91b20]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@c91b20]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@c91b20]
DEBUG: first.common.logger.LoggerAspect - ServiceImpl  	:  first.builder.service.BuilderService.getAllIntents()
DEBUG: first.common.logger.LoggerAspect - DAO  		:  first.builder.dao.BuilderDAO.getAllIntents()
DEBUG: first.builder.dao.AbstractDAO - 	 QueryId  	:  builder.getAllIntents
DEBUG: org.mybatis.spring.SqlSessionUtils - Creating a new SqlSession
DEBUG: org.mybatis.spring.SqlSessionUtils - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@78e9c627]
DEBUG: org.mybatis.spring.transaction.SpringManagedTransaction - JDBC Connection [net.sf.log4jdbc.ConnectionSpy@508b5826] will be managed by Spring
2024-03-04 09:27:32,948  INFO SQL(simplebot)        :  SELECT I.No, I.Main, I.Name,I.Next, I.URL, I.Language
		FROM Intent I
		WHERE I.Account=1636
		ORDER BY I.No
DEBUG: org.mybatis.spring.SqlSessionUtils - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@78e9c627]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@78e9c627]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@78e9c627]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@78e9c627]
DEBUG: first.common.logger.LoggerAspect - ServiceImpl  	:  first.builder.service.BuilderService.getAllBertIntents()
DEBUG: first.common.logger.LoggerAspect - DAO  		:  first.builder.dao.BuilderDAO.getAllBertIntents()
DEBUG: first.builder.dao.AbstractDAO - 	 QueryId  	:  builder.getAllBertIntents
DEBUG: org.mybatis.spring.SqlSessionUtils - Creating a new SqlSession
DEBUG: org.mybatis.spring.SqlSessionUtils - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@61fb0a5a]
DEBUG: org.mybatis.spring.transaction.SpringManagedTransaction - JDBC Connection [net.sf.log4jdbc.ConnectionSpy@61a63c4e] will be managed by Spring
2024-03-04 09:27:32,951  INFO SQL(simplebot)        :  SELECT B.No, B.Name, B.Language
		FROM BertIntent B LEFT OUTER JOIN BackendInfo BI
		ON B.BertItfId = BI.id
		WHERE BI.host=1636
		ORDER BY B.No
DEBUG: org.mybatis.spring.SqlSessionUtils - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@61fb0a5a]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@61fb0a5a]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@61fb0a5a]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@61fb0a5a]
DEBUG: first.common.logger.LoggerAspect - Controller  	:  first.builder.controller.BuilderController.getTestPage()
DEBUG: first.common.logger.LoggerAspect - ServiceImpl  	:  first.builder.service.BuilderService.getHostByAccount()
DEBUG: first.common.logger.LoggerAspect - DAO  		:  first.builder.dao.BuilderDAO.getHostByAccount()
DEBUG: first.builder.dao.AbstractDAO - 	 QueryId  	:  builder.getHostByAccount
DEBUG: org.mybatis.spring.SqlSessionUtils - Creating a new SqlSession
DEBUG: org.mybatis.spring.SqlSessionUtils - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@78ed7fb7]
DEBUG: org.mybatis.spring.transaction.SpringManagedTransaction - JDBC Connection [net.sf.log4jdbc.ConnectionSpy@1d40a34] will be managed by Spring
2024-03-04 09:27:35,031  INFO SQL(simplebot)        :  SELECT Host
		From Account
		Where No=1636
DEBUG: org.mybatis.spring.SqlSessionUtils - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@78ed7fb7]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@78ed7fb7]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@78ed7fb7]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@78ed7fb7]
DEBUG: first.common.logger.LoggerAspect - Controller  	:  first.builder.controller.BuilderController.chatbotBuilderCommon()
DEBUG: first.common.logger.LoggerAspect - Controller  	:  first.builder.controller.BuilderController.getChatList()
DEBUG: first.common.logger.LoggerAspect - ServiceImpl  	:  first.builder.service.BuilderService.getChatbotList()
DEBUG: first.common.logger.LoggerAspect - DAO  		:  first.builder.dao.BuilderDAO.getChatbotList()
DEBUG: first.builder.dao.AbstractDAO - 	 QueryId  	:  builder.getChatbotList
DEBUG: org.mybatis.spring.SqlSessionUtils - Creating a new SqlSession
DEBUG: org.mybatis.spring.SqlSessionUtils - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1451e2d6]
DEBUG: org.mybatis.spring.transaction.SpringManagedTransaction - JDBC Connection [net.sf.log4jdbc.ConnectionSpy@796c58cb] will be managed by Spring
2024-03-04 09:27:50,536  INFO SQL(simplebot)        :  SELECT  /* No, Name, Host, Language */
			*
		from Account WHERE 1=1
		AND No IN
		 
				 (  
					'1636'
				 ) 
			 

		 
		ORDER BY No
DEBUG: org.mybatis.spring.SqlSessionUtils - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1451e2d6]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1451e2d6]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1451e2d6]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1451e2d6]
DEBUG: first.common.logger.LoggerAspect - Controller  	:  first.builder.controller.BuilderController.builderContentsAnswer()
DEBUG: first.common.logger.LoggerAspect - Controller  	:  first.builder.controller.BuilderController.builderBottomAnswer()
DEBUG: first.common.logger.LoggerAspect - Controller  	:  first.builder.controller.BuilderController.getTask()
DEBUG: first.common.logger.LoggerAspect - ServiceImpl  	:  first.builder.service.BuilderService.getTaskCount()
DEBUG: first.common.logger.LoggerAspect - DAO  		:  first.builder.dao.BuilderDAO.getTaskCount()
DEBUG: first.builder.dao.AbstractDAO - 	 QueryId  	:  builder.getTaskCount
DEBUG: org.mybatis.spring.SqlSessionUtils - Creating a new SqlSession
DEBUG: org.mybatis.spring.SqlSessionUtils - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@475c8dd8]
DEBUG: org.mybatis.spring.transaction.SpringManagedTransaction - JDBC Connection [net.sf.log4jdbc.ConnectionSpy@33356a83] will be managed by Spring
2024-03-04 09:27:50,592  INFO SQL(simplebot)        :  SELECT COUNT(*) FROM Intent WHERE Account=1636
 and Language=1
DEBUG: org.mybatis.spring.SqlSessionUtils - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@475c8dd8]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@475c8dd8]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@475c8dd8]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@475c8dd8]
DEBUG: first.common.logger.LoggerAspect - ServiceImpl  	:  first.builder.service.BuilderService.getAnswerList()
DEBUG: first.common.logger.LoggerAspect - DAO  		:  first.builder.dao.BuilderDAO.getAnswerList()
DEBUG: first.builder.dao.AbstractDAO - 	 QueryId  	:  builder.getAnswerList
DEBUG: org.mybatis.spring.SqlSessionUtils - Creating a new SqlSession
DEBUG: org.mybatis.spring.SqlSessionUtils - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@2092a36]
DEBUG: org.mybatis.spring.transaction.SpringManagedTransaction - JDBC Connection [net.sf.log4jdbc.ConnectionSpy@4ebbfde9] will be managed by Spring
2024-03-04 09:27:50,597  INFO SQL(simplebot)        :  SELECT I.No, I.Main, I.Name, A.answer, I.Account
		FROM Intent I LEFT OUTER JOIN Answer A
		ON I.Answer = A.No
		WHERE I.Account=1636
 and I.Language=1
		ORDER BY I.No
		OFFSET 0 ROWS
		FETCH NEXT 15 ROWS ONLY
DEBUG: org.mybatis.spring.SqlSessionUtils - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@2092a36]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@2092a36]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@2092a36]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@2092a36]
DEBUG: first.common.logger.LoggerAspect - ServiceImpl  	:  first.builder.service.BuilderService.getAllIntents()
DEBUG: first.common.logger.LoggerAspect - DAO  		:  first.builder.dao.BuilderDAO.getAllIntents()
DEBUG: first.builder.dao.AbstractDAO - 	 QueryId  	:  builder.getAllIntents
DEBUG: org.mybatis.spring.SqlSessionUtils - Creating a new SqlSession
DEBUG: org.mybatis.spring.SqlSessionUtils - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@5277fba1]
DEBUG: org.mybatis.spring.transaction.SpringManagedTransaction - JDBC Connection [net.sf.log4jdbc.ConnectionSpy@5f365a33] will be managed by Spring
2024-03-04 09:27:50,603  INFO SQL(simplebot)        :  SELECT I.No, I.Main, I.Name,I.Next, I.URL, I.Language
		FROM Intent I
		WHERE I.Account=1636
		ORDER BY I.No
DEBUG: org.mybatis.spring.SqlSessionUtils - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@5277fba1]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@5277fba1]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@5277fba1]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@5277fba1]
DEBUG: first.common.logger.LoggerAspect - ServiceImpl  	:  first.builder.service.BuilderService.getAllBertIntents()
DEBUG: first.common.logger.LoggerAspect - DAO  		:  first.builder.dao.BuilderDAO.getAllBertIntents()
DEBUG: first.builder.dao.AbstractDAO - 	 QueryId  	:  builder.getAllBertIntents
DEBUG: org.mybatis.spring.SqlSessionUtils - Creating a new SqlSession
DEBUG: org.mybatis.spring.SqlSessionUtils - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@113df716]
DEBUG: org.mybatis.spring.transaction.SpringManagedTransaction - JDBC Connection [net.sf.log4jdbc.ConnectionSpy@79123304] will be managed by Spring
2024-03-04 09:27:50,607  INFO SQL(simplebot)        :  SELECT B.No, B.Name, B.Language
		FROM BertIntent B LEFT OUTER JOIN BackendInfo BI
		ON B.BertItfId = BI.id
		WHERE BI.host=1636
		ORDER BY B.No
DEBUG: org.mybatis.spring.SqlSessionUtils - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@113df716]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@113df716]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@113df716]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@113df716]
DEBUG: first.common.logger.LoggerAspect - Controller  	:  first.builder.controller.BuilderController.getTask()
DEBUG: first.common.logger.LoggerAspect - ServiceImpl  	:  first.builder.service.BuilderService.getTaskCount()
DEBUG: first.common.logger.LoggerAspect - DAO  		:  first.builder.dao.BuilderDAO.getTaskCount()
DEBUG: first.builder.dao.AbstractDAO - 	 QueryId  	:  builder.getTaskCount
DEBUG: org.mybatis.spring.SqlSessionUtils - Creating a new SqlSession
DEBUG: org.mybatis.spring.SqlSessionUtils - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@427edf33]
DEBUG: org.mybatis.spring.transaction.SpringManagedTransaction - JDBC Connection [net.sf.log4jdbc.ConnectionSpy@3c33e8c2] will be managed by Spring
2024-03-04 09:27:50,669  INFO SQL(simplebot)        :  SELECT COUNT(*) FROM Intent WHERE Account=1636
 and Language=1
DEBUG: org.mybatis.spring.SqlSessionUtils - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@427edf33]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@427edf33]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@427edf33]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@427edf33]
DEBUG: first.common.logger.LoggerAspect - ServiceImpl  	:  first.builder.service.BuilderService.getAnswerList()
DEBUG: first.common.logger.LoggerAspect - DAO  		:  first.builder.dao.BuilderDAO.getAnswerList()
DEBUG: first.builder.dao.AbstractDAO - 	 QueryId  	:  builder.getAnswerList
DEBUG: org.mybatis.spring.SqlSessionUtils - Creating a new SqlSession
DEBUG: org.mybatis.spring.SqlSessionUtils - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@4f8a7c25]
DEBUG: org.mybatis.spring.transaction.SpringManagedTransaction - JDBC Connection [net.sf.log4jdbc.ConnectionSpy@9c4a10d] will be managed by Spring
2024-03-04 09:27:50,673  INFO SQL(simplebot)        :  SELECT I.No, I.Main, I.Name, A.answer, I.Account
		FROM Intent I LEFT OUTER JOIN Answer A
		ON I.Answer = A.No
		WHERE I.Account=1636
 and I.Language=1
		ORDER BY I.No
		OFFSET 0 ROWS
		FETCH NEXT 15 ROWS ONLY
DEBUG: org.mybatis.spring.SqlSessionUtils - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@4f8a7c25]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@4f8a7c25]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@4f8a7c25]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@4f8a7c25]
DEBUG: first.common.logger.LoggerAspect - ServiceImpl  	:  first.builder.service.BuilderService.getAllIntents()
DEBUG: first.common.logger.LoggerAspect - DAO  		:  first.builder.dao.BuilderDAO.getAllIntents()
DEBUG: first.builder.dao.AbstractDAO - 	 QueryId  	:  builder.getAllIntents
DEBUG: org.mybatis.spring.SqlSessionUtils - Creating a new SqlSession
DEBUG: org.mybatis.spring.SqlSessionUtils - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@7fff525]
DEBUG: org.mybatis.spring.transaction.SpringManagedTransaction - JDBC Connection [net.sf.log4jdbc.ConnectionSpy@6df83416] will be managed by Spring
2024-03-04 09:27:50,677  INFO SQL(simplebot)        :  SELECT I.No, I.Main, I.Name,I.Next, I.URL, I.Language
		FROM Intent I
		WHERE I.Account=1636
		ORDER BY I.No
DEBUG: org.mybatis.spring.SqlSessionUtils - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@7fff525]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@7fff525]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@7fff525]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@7fff525]
DEBUG: first.common.logger.LoggerAspect - ServiceImpl  	:  first.builder.service.BuilderService.getAllBertIntents()
DEBUG: first.common.logger.LoggerAspect - DAO  		:  first.builder.dao.BuilderDAO.getAllBertIntents()
DEBUG: first.builder.dao.AbstractDAO - 	 QueryId  	:  builder.getAllBertIntents
DEBUG: org.mybatis.spring.SqlSessionUtils - Creating a new SqlSession
DEBUG: org.mybatis.spring.SqlSessionUtils - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@48df4b1c]
DEBUG: org.mybatis.spring.transaction.SpringManagedTransaction - JDBC Connection [net.sf.log4jdbc.ConnectionSpy@36e00b35] will be managed by Spring
2024-03-04 09:27:50,681  INFO SQL(simplebot)        :  SELECT B.No, B.Name, B.Language
		FROM BertIntent B LEFT OUTER JOIN BackendInfo BI
		ON B.BertItfId = BI.id
		WHERE BI.host=1636
		ORDER BY B.No
DEBUG: org.mybatis.spring.SqlSessionUtils - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@48df4b1c]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@48df4b1c]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@48df4b1c]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@48df4b1c]
DEBUG: first.common.logger.LoggerAspect - Controller  	:  first.builder.controller.BuilderController.getTestPage()
DEBUG: first.common.logger.LoggerAspect - ServiceImpl  	:  first.builder.service.BuilderService.getHostByAccount()
DEBUG: first.common.logger.LoggerAspect - DAO  		:  first.builder.dao.BuilderDAO.getHostByAccount()
DEBUG: first.builder.dao.AbstractDAO - 	 QueryId  	:  builder.getHostByAccount
DEBUG: org.mybatis.spring.SqlSessionUtils - Creating a new SqlSession
DEBUG: org.mybatis.spring.SqlSessionUtils - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@67738c15]
DEBUG: org.mybatis.spring.transaction.SpringManagedTransaction - JDBC Connection [net.sf.log4jdbc.ConnectionSpy@68a38bff] will be managed by Spring
2024-03-04 09:27:53,772  INFO SQL(simplebot)        :  SELECT Host
		From Account
		Where No=1636
DEBUG: org.mybatis.spring.SqlSessionUtils - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@67738c15]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@67738c15]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@67738c15]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@67738c15]
DEBUG: first.common.logger.LoggerAspect - Controller  	:  first.builder.controller.BuilderController.chatbotBuilderCommon()
DEBUG: first.common.logger.LoggerAspect - Controller  	:  first.builder.controller.BuilderController.getChatList()
DEBUG: first.common.logger.LoggerAspect - ServiceImpl  	:  first.builder.service.BuilderService.getChatbotList()
DEBUG: first.common.logger.LoggerAspect - DAO  		:  first.builder.dao.BuilderDAO.getChatbotList()
DEBUG: first.builder.dao.AbstractDAO - 	 QueryId  	:  builder.getChatbotList
DEBUG: org.mybatis.spring.SqlSessionUtils - Creating a new SqlSession
DEBUG: org.mybatis.spring.SqlSessionUtils - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@4ac5bf7b]
DEBUG: org.mybatis.spring.transaction.SpringManagedTransaction - JDBC Connection [net.sf.log4jdbc.ConnectionSpy@3de94dd2] will be managed by Spring
2024-03-04 09:34:45,020  INFO SQL(simplebot)        :  SELECT  /* No, Name, Host, Language */
			*
		from Account WHERE 1=1
		AND No IN
		 
				 (  
					'1636'
				 ) 
			 

		 
		ORDER BY No
DEBUG: org.mybatis.spring.SqlSessionUtils - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@4ac5bf7b]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@4ac5bf7b]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@4ac5bf7b]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@4ac5bf7b]
DEBUG: first.common.logger.LoggerAspect - Controller  	:  first.builder.controller.BuilderController.builderBottomAnswer()
DEBUG: first.common.logger.LoggerAspect - Controller  	:  first.builder.controller.BuilderController.builderContentsAnswer()
DEBUG: first.common.logger.LoggerAspect - Controller  	:  first.builder.controller.BuilderController.getTask()
DEBUG: first.common.logger.LoggerAspect - ServiceImpl  	:  first.builder.service.BuilderService.getTaskCount()
DEBUG: first.common.logger.LoggerAspect - DAO  		:  first.builder.dao.BuilderDAO.getTaskCount()
DEBUG: first.builder.dao.AbstractDAO - 	 QueryId  	:  builder.getTaskCount
DEBUG: org.mybatis.spring.SqlSessionUtils - Creating a new SqlSession
DEBUG: org.mybatis.spring.SqlSessionUtils - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@4017f2a4]
DEBUG: org.mybatis.spring.transaction.SpringManagedTransaction - JDBC Connection [net.sf.log4jdbc.ConnectionSpy@695712bf] will be managed by Spring
2024-03-04 09:34:45,077  INFO SQL(simplebot)        :  SELECT COUNT(*) FROM Intent WHERE Account=1636
 and Language=1
DEBUG: org.mybatis.spring.SqlSessionUtils - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@4017f2a4]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@4017f2a4]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@4017f2a4]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@4017f2a4]
DEBUG: first.common.logger.LoggerAspect - ServiceImpl  	:  first.builder.service.BuilderService.getAnswerList()
DEBUG: first.common.logger.LoggerAspect - DAO  		:  first.builder.dao.BuilderDAO.getAnswerList()
DEBUG: first.builder.dao.AbstractDAO - 	 QueryId  	:  builder.getAnswerList
DEBUG: org.mybatis.spring.SqlSessionUtils - Creating a new SqlSession
DEBUG: org.mybatis.spring.SqlSessionUtils - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@197a2847]
DEBUG: org.mybatis.spring.transaction.SpringManagedTransaction - JDBC Connection [net.sf.log4jdbc.ConnectionSpy@18f48755] will be managed by Spring
2024-03-04 09:34:45,081  INFO SQL(simplebot)        :  SELECT I.No, I.Main, I.Name, A.answer, I.Account
		FROM Intent I LEFT OUTER JOIN Answer A
		ON I.Answer = A.No
		WHERE I.Account=1636
 and I.Language=1
		ORDER BY I.No
		OFFSET 0 ROWS
		FETCH NEXT 15 ROWS ONLY
DEBUG: org.mybatis.spring.SqlSessionUtils - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@197a2847]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@197a2847]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@197a2847]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@197a2847]
DEBUG: first.common.logger.LoggerAspect - ServiceImpl  	:  first.builder.service.BuilderService.getAllIntents()
DEBUG: first.common.logger.LoggerAspect - DAO  		:  first.builder.dao.BuilderDAO.getAllIntents()
DEBUG: first.builder.dao.AbstractDAO - 	 QueryId  	:  builder.getAllIntents
DEBUG: org.mybatis.spring.SqlSessionUtils - Creating a new SqlSession
DEBUG: org.mybatis.spring.SqlSessionUtils - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@2123a702]
DEBUG: org.mybatis.spring.transaction.SpringManagedTransaction - JDBC Connection [net.sf.log4jdbc.ConnectionSpy@79862853] will be managed by Spring
2024-03-04 09:34:45,085  INFO SQL(simplebot)        :  SELECT I.No, I.Main, I.Name,I.Next, I.URL, I.Language
		FROM Intent I
		WHERE I.Account=1636
		ORDER BY I.No
DEBUG: org.mybatis.spring.SqlSessionUtils - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@2123a702]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@2123a702]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@2123a702]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@2123a702]
DEBUG: first.common.logger.LoggerAspect - ServiceImpl  	:  first.builder.service.BuilderService.getAllBertIntents()
DEBUG: first.common.logger.LoggerAspect - DAO  		:  first.builder.dao.BuilderDAO.getAllBertIntents()
DEBUG: first.builder.dao.AbstractDAO - 	 QueryId  	:  builder.getAllBertIntents
DEBUG: org.mybatis.spring.SqlSessionUtils - Creating a new SqlSession
DEBUG: org.mybatis.spring.SqlSessionUtils - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@14731968]
DEBUG: org.mybatis.spring.transaction.SpringManagedTransaction - JDBC Connection [net.sf.log4jdbc.ConnectionSpy@d478a80] will be managed by Spring
2024-03-04 09:34:45,090  INFO SQL(simplebot)        :  SELECT B.No, B.Name, B.Language
		FROM BertIntent B LEFT OUTER JOIN BackendInfo BI
		ON B.BertItfId = BI.id
		WHERE BI.host=1636
		ORDER BY B.No
DEBUG: org.mybatis.spring.SqlSessionUtils - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@14731968]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@14731968]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@14731968]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@14731968]
DEBUG: first.common.logger.LoggerAspect - Controller  	:  first.builder.controller.BuilderController.getTask()
DEBUG: first.common.logger.LoggerAspect - ServiceImpl  	:  first.builder.service.BuilderService.getTaskCount()
DEBUG: first.common.logger.LoggerAspect - DAO  		:  first.builder.dao.BuilderDAO.getTaskCount()
DEBUG: first.builder.dao.AbstractDAO - 	 QueryId  	:  builder.getTaskCount
DEBUG: org.mybatis.spring.SqlSessionUtils - Creating a new SqlSession
DEBUG: org.mybatis.spring.SqlSessionUtils - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@64f16812]
DEBUG: org.mybatis.spring.transaction.SpringManagedTransaction - JDBC Connection [net.sf.log4jdbc.ConnectionSpy@233c0a58] will be managed by Spring
2024-03-04 09:34:45,154  INFO SQL(simplebot)        :  SELECT COUNT(*) FROM Intent WHERE Account=1636
 and Language=1
DEBUG: org.mybatis.spring.SqlSessionUtils - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@64f16812]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@64f16812]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@64f16812]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@64f16812]
DEBUG: first.common.logger.LoggerAspect - ServiceImpl  	:  first.builder.service.BuilderService.getAnswerList()
DEBUG: first.common.logger.LoggerAspect - DAO  		:  first.builder.dao.BuilderDAO.getAnswerList()
DEBUG: first.builder.dao.AbstractDAO - 	 QueryId  	:  builder.getAnswerList
DEBUG: org.mybatis.spring.SqlSessionUtils - Creating a new SqlSession
DEBUG: org.mybatis.spring.SqlSessionUtils - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1000c3eb]
DEBUG: org.mybatis.spring.transaction.SpringManagedTransaction - JDBC Connection [net.sf.log4jdbc.ConnectionSpy@2b7576ae] will be managed by Spring
2024-03-04 09:34:45,158  INFO SQL(simplebot)        :  SELECT I.No, I.Main, I.Name, A.answer, I.Account
		FROM Intent I LEFT OUTER JOIN Answer A
		ON I.Answer = A.No
		WHERE I.Account=1636
 and I.Language=1
		ORDER BY I.No
		OFFSET 0 ROWS
		FETCH NEXT 15 ROWS ONLY
DEBUG: org.mybatis.spring.SqlSessionUtils - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1000c3eb]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1000c3eb]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1000c3eb]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1000c3eb]
DEBUG: first.common.logger.LoggerAspect - ServiceImpl  	:  first.builder.service.BuilderService.getAllIntents()
DEBUG: first.common.logger.LoggerAspect - DAO  		:  first.builder.dao.BuilderDAO.getAllIntents()
DEBUG: first.builder.dao.AbstractDAO - 	 QueryId  	:  builder.getAllIntents
DEBUG: org.mybatis.spring.SqlSessionUtils - Creating a new SqlSession
DEBUG: org.mybatis.spring.SqlSessionUtils - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@3f838865]
DEBUG: org.mybatis.spring.transaction.SpringManagedTransaction - JDBC Connection [net.sf.log4jdbc.ConnectionSpy@32b1b2cc] will be managed by Spring
2024-03-04 09:34:45,162  INFO SQL(simplebot)        :  SELECT I.No, I.Main, I.Name,I.Next, I.URL, I.Language
		FROM Intent I
		WHERE I.Account=1636
		ORDER BY I.No
DEBUG: org.mybatis.spring.SqlSessionUtils - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@3f838865]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@3f838865]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@3f838865]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@3f838865]
DEBUG: first.common.logger.LoggerAspect - ServiceImpl  	:  first.builder.service.BuilderService.getAllBertIntents()
DEBUG: first.common.logger.LoggerAspect - DAO  		:  first.builder.dao.BuilderDAO.getAllBertIntents()
DEBUG: first.builder.dao.AbstractDAO - 	 QueryId  	:  builder.getAllBertIntents
DEBUG: org.mybatis.spring.SqlSessionUtils - Creating a new SqlSession
DEBUG: org.mybatis.spring.SqlSessionUtils - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@3db2b4aa]
DEBUG: org.mybatis.spring.transaction.SpringManagedTransaction - JDBC Connection [net.sf.log4jdbc.ConnectionSpy@5e9676b6] will be managed by Spring
2024-03-04 09:34:45,166  INFO SQL(simplebot)        :  SELECT B.No, B.Name, B.Language
		FROM BertIntent B LEFT OUTER JOIN BackendInfo BI
		ON B.BertItfId = BI.id
		WHERE BI.host=1636
		ORDER BY B.No
DEBUG: org.mybatis.spring.SqlSessionUtils - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@3db2b4aa]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@3db2b4aa]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@3db2b4aa]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@3db2b4aa]
DEBUG: first.common.logger.LoggerAspect - Controller  	:  first.builder.controller.BuilderController.getTestPage()
DEBUG: first.common.logger.LoggerAspect - ServiceImpl  	:  first.builder.service.BuilderService.getHostByAccount()
DEBUG: first.common.logger.LoggerAspect - DAO  		:  first.builder.dao.BuilderDAO.getHostByAccount()
DEBUG: first.builder.dao.AbstractDAO - 	 QueryId  	:  builder.getHostByAccount
DEBUG: org.mybatis.spring.SqlSessionUtils - Creating a new SqlSession
DEBUG: org.mybatis.spring.SqlSessionUtils - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@6e71653]
DEBUG: org.mybatis.spring.transaction.SpringManagedTransaction - JDBC Connection [net.sf.log4jdbc.ConnectionSpy@7786cf07] will be managed by Spring
2024-03-04 09:34:47,263  INFO SQL(simplebot)        :  SELECT Host
		From Account
		Where No=1636
DEBUG: org.mybatis.spring.SqlSessionUtils - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@6e71653]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@6e71653]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@6e71653]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@6e71653]
04-Mar-2024 09:42:38.465 INFO [ContainerBackgroundProcessor[StandardEngine[Catalina]]] org.apache.catalina.startup.HostConfig.undeploy Undeploying context [/sds-builder]
04-Mar-2024 09:42:38.496 WARNING [ContainerBackgroundProcessor[StandardEngine[Catalina]]] org.apache.catalina.loader.WebappClassLoaderBase.clearReferencesJdbc The web application [sds-builder] registered the JDBC driver [com.mysql.jdbc.Driver] but failed to unregister it when the web application was stopped. To prevent a memory leak, the JDBC Driver has been forcibly unregistered.
04-Mar-2024 09:42:38.496 WARNING [ContainerBackgroundProcessor[StandardEngine[Catalina]]] org.apache.catalina.loader.WebappClassLoaderBase.clearReferencesJdbc The web application [sds-builder] registered the JDBC driver [net.sf.log4jdbc.DriverSpy] but failed to unregister it when the web application was stopped. To prevent a memory leak, the JDBC Driver has been forcibly unregistered.
04-Mar-2024 09:42:38.497 WARNING [ContainerBackgroundProcessor[StandardEngine[Catalina]]] org.apache.catalina.loader.WebappClassLoaderBase.clearReferencesJdbc The web application [sds-builder] registered the JDBC driver [com.microsoft.sqlserver.jdbc.SQLServerDriver] but failed to unregister it when the web application was stopped. To prevent a memory leak, the JDBC Driver has been forcibly unregistered.
04-Mar-2024 09:42:38.498 WARNING [ContainerBackgroundProcessor[StandardEngine[Catalina]]] org.apache.catalina.loader.WebappClassLoaderBase.clearReferencesThreads The web application [sds-builder] appears to have started a thread named [mysql-cj-abandoned-connection-cleanup] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 java.lang.Object.wait(Native Method)
 java.lang.ref.ReferenceQueue.remove(ReferenceQueue.java:144)
 com.mysql.jdbc.AbandonedConnectionCleanupThread.run(AbandonedConnectionCleanupThread.java:80)
 java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
 java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
 java.lang.Thread.run(Thread.java:750)
04-Mar-2024 09:42:38.559 INFO [localhost-startStop-2] org.apache.catalina.startup.HostConfig.deployWAR Deploying web application archive [/home/minds/maum/sds-builder/apache-tomcat-8.5.99/webapps/sds-builder.war]
04-Mar-2024 09:42:39.431 INFO [mysql-cj-abandoned-connection-cleanup] org.apache.catalina.loader.WebappClassLoaderBase.checkStateForResourceLoading Illegal access: this web application instance has been stopped already. Could not load []. The following stack trace is thrown for debugging purposes as well as to attempt to terminate the thread which caused the illegal access.
	java.lang.IllegalStateException: Illegal access: this web application instance has been stopped already. Could not load []. The following stack trace is thrown for debugging purposes as well as to attempt to terminate the thread which caused the illegal access.
		at org.apache.catalina.loader.WebappClassLoaderBase.checkStateForResourceLoading(WebappClassLoaderBase.java:1358)
		at org.apache.catalina.loader.WebappClassLoaderBase.getResource(WebappClassLoaderBase.java:990)
		at com.mysql.jdbc.AbandonedConnectionCleanupThread.checkThreadContextClassLoader(AbandonedConnectionCleanupThread.java:112)
		at com.mysql.jdbc.AbandonedConnectionCleanupThread.run(AbandonedConnectionCleanupThread.java:79)
		at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
		at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
		at java.lang.Thread.run(Thread.java:750)
04-Mar-2024 09:42:39.432 INFO [mysql-cj-abandoned-connection-cleanup] org.apache.catalina.loader.WebappClassLoaderBase.checkStateForResourceLoading Illegal access: this web application instance has been stopped already. Could not load []. The following stack trace is thrown for debugging purposes as well as to attempt to terminate the thread which caused the illegal access.
	java.lang.IllegalStateException: Illegal access: this web application instance has been stopped already. Could not load []. The following stack trace is thrown for debugging purposes as well as to attempt to terminate the thread which caused the illegal access.
		at org.apache.catalina.loader.WebappClassLoaderBase.checkStateForResourceLoading(WebappClassLoaderBase.java:1358)
		at org.apache.catalina.loader.WebappClassLoaderBase.getResource(WebappClassLoaderBase.java:990)
		at com.mysql.jdbc.AbandonedConnectionCleanupThread.checkThreadContextClassLoader(AbandonedConnectionCleanupThread.java:112)
		at com.mysql.jdbc.AbandonedConnectionCleanupThread.run(AbandonedConnectionCleanupThread.java:79)
		at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
		at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
		at java.lang.Thread.run(Thread.java:750)
04-Mar-2024 09:42:39.432 INFO [mysql-cj-abandoned-connection-cleanup] org.apache.catalina.loader.WebappClassLoaderBase.checkStateForResourceLoading Illegal access: this web application instance has been stopped already. Could not load []. The following stack trace is thrown for debugging purposes as well as to attempt to terminate the thread which caused the illegal access.
	java.lang.IllegalStateException: Illegal access: this web application instance has been stopped already. Could not load []. The following stack trace is thrown for debugging purposes as well as to attempt to terminate the thread which caused the illegal access.
		at org.apache.catalina.loader.WebappClassLoaderBase.checkStateForResourceLoading(WebappClassLoaderBase.java:1358)
		at org.apache.catalina.loader.WebappClassLoaderBase.getResource(WebappClassLoaderBase.java:990)
		at com.mysql.jdbc.AbandonedConnectionCleanupThread.checkThreadContextClassLoader(AbandonedConnectionCleanupThread.java:112)
		at com.mysql.jdbc.AbandonedConnectionCleanupThread.run(AbandonedConnectionCleanupThread.java:79)
		at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
		at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
		at java.lang.Thread.run(Thread.java:750)
04-Mar-2024 09:42:40.880 INFO [localhost-startStop-2] org.apache.jasper.servlet.TldScanner.scanJars At least one JAR was scanned for TLDs yet contained no TLDs. Enable debug logging for this logger for a complete list of JARs that were scanned but no TLDs were found in them. Skipping unneeded JARs during scanning can improve startup time and JSP compilation time.
DEBUG: org.mybatis.spring.SqlSessionFactoryBean - Property 'configuration' or 'configLocation' not specified, using default MyBatis Configuration
DEBUG: org.mybatis.spring.SqlSessionFactoryBean - Parsed mapper file: 'file [/home/minds/maum/sds-builder/apache-tomcat-8.5.99/webapps/sds-builder/WEB-INF/classes/mapper/maria/Chatbot/Builder_SQL.xml]'
DEBUG: org.mybatis.spring.SqlSessionFactoryBean - Parsed mapper file: 'file [/home/minds/maum/sds-builder/apache-tomcat-8.5.99/webapps/sds-builder/WEB-INF/classes/mapper/maria/Chatbot/MaumSDS_SQL.xml]'
DEBUG: org.mybatis.spring.SqlSessionFactoryBean - Property 'configuration' or 'configLocation' not specified, using default MyBatis Configuration
DEBUG: org.mybatis.spring.SqlSessionFactoryBean - Parsed mapper file: 'file [/home/minds/maum/sds-builder/apache-tomcat-8.5.99/webapps/sds-builder/WEB-INF/classes/mapper/maria/HAPPYCALL4/NQA_SQL.xml]'
DEBUG: org.mybatis.spring.SqlSessionFactoryBean - Parsed mapper file: 'file [/home/minds/maum/sds-builder/apache-tomcat-8.5.99/webapps/sds-builder/WEB-INF/classes/mapper/maria/HAPPYCALL4/SimpleBot_SQL.xml]'
SimpleBot Execution Environment : prod
SimpleBot BertIntent itfIP : 0
SimpleBot BertIntent nerIP : 0
SimpleBot BL IP : 125.132.250.244
SimpleBot CM IP : 121.133.247.250
SimpleBot M2U rest address : http://localhost:9990
SimpleBot Style Resources Path : /home/minds/maum/sds-builder/imgUpload
Default Resources Make : chatbot.css
Default Resources Make : chatbot_custom.css
Default Resources Make : chatbot_floating.css
Default Resources Make : IconImg
Default Resources Make : logoImg
Default Resources Make : default
Default Resources Make : mindslab
Default Resources Make : redtie
Default Resource constructed.
DEBUG: first.common.logger.LoggerAspect - ServiceImpl  	:  first.builder.service.BuilderService.getNqaStatusChatbotList()
DEBUG: first.common.logger.LoggerAspect - DAO  		:  first.builder.dao.BuilderDAO.getNqaStatusChatbotList()
DEBUG: first.builder.dao.AbstractDAO - 	 QueryId  	:  builder.getNqaStatusChatbotList
DEBUG: org.mybatis.spring.SqlSessionUtils - Creating a new SqlSession
DEBUG: org.mybatis.spring.SqlSessionUtils - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@6d7b64b6]
DEBUG: org.mybatis.spring.transaction.SpringManagedTransaction - JDBC Connection [net.sf.log4jdbc.ConnectionSpy@65e2cfd] will be managed by Spring
2024-03-04 09:42:42,638  INFO SQL(simplebot)        :  SELECT No as host, Name, 'preparation' as nqaUploadStatus
 from Account
		ORDER BY No
DEBUG: org.mybatis.spring.SqlSessionUtils - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@6d7b64b6]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@6d7b64b6]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@6d7b64b6]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@6d7b64b6]
04-Mar-2024 09:42:43.565 INFO [localhost-startStop-2] org.apache.catalina.startup.HostConfig.deployWAR Deployment of web application archive [/home/minds/maum/sds-builder/apache-tomcat-8.5.99/webapps/sds-builder.war] has finished in [5,006] ms
DEBUG: first.common.logger.LoggerAspect - Controller  	:  first.builder.controller.BuilderController.chatbotBuilderCommon()
DEBUG: first.common.logger.LoggerAspect - Controller  	:  first.builder.controller.BuilderController.getChatList()
DEBUG: first.common.logger.LoggerAspect - ServiceImpl  	:  first.builder.service.BuilderService.getChatbotList()
DEBUG: first.common.logger.LoggerAspect - DAO  		:  first.builder.dao.BuilderDAO.getChatbotList()
DEBUG: first.builder.dao.AbstractDAO - 	 QueryId  	:  builder.getChatbotList
DEBUG: org.mybatis.spring.SqlSessionUtils - Creating a new SqlSession
DEBUG: org.mybatis.spring.SqlSessionUtils - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@4e1219db]
DEBUG: org.mybatis.spring.transaction.SpringManagedTransaction - JDBC Connection [net.sf.log4jdbc.ConnectionSpy@327447d2] will be managed by Spring
2024-03-04 09:43:11,524  INFO SQL(simplebot)        :  SELECT  /* No, Name, Host, Language */
			*
		from Account WHERE 1=1
		AND No IN
		 
				 (  
					'1636'
				 ) 
			 

		 
		ORDER BY No
DEBUG: org.mybatis.spring.SqlSessionUtils - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@4e1219db]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@4e1219db]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@4e1219db]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@4e1219db]
DEBUG: first.common.logger.LoggerAspect - Controller  	:  first.builder.controller.BuilderController.builderContentsAnswer()
DEBUG: first.common.logger.LoggerAspect - Controller  	:  first.builder.controller.BuilderController.builderBottomAnswer()
DEBUG: first.common.logger.LoggerAspect - Controller  	:  first.builder.controller.BuilderController.getTask()
DEBUG: first.common.logger.LoggerAspect - ServiceImpl  	:  first.builder.service.BuilderService.getTaskCount()
DEBUG: first.common.logger.LoggerAspect - DAO  		:  first.builder.dao.BuilderDAO.getTaskCount()
DEBUG: first.builder.dao.AbstractDAO - 	 QueryId  	:  builder.getTaskCount
DEBUG: org.mybatis.spring.SqlSessionUtils - Creating a new SqlSession
DEBUG: org.mybatis.spring.SqlSessionUtils - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1aa6d94a]
DEBUG: org.mybatis.spring.transaction.SpringManagedTransaction - JDBC Connection [net.sf.log4jdbc.ConnectionSpy@4800f07c] will be managed by Spring
2024-03-04 09:43:11,741  INFO SQL(simplebot)        :  SELECT COUNT(*) FROM Intent WHERE Account=1636
 and Language=1
DEBUG: org.mybatis.spring.SqlSessionUtils - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1aa6d94a]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1aa6d94a]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1aa6d94a]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1aa6d94a]
DEBUG: first.common.logger.LoggerAspect - ServiceImpl  	:  first.builder.service.BuilderService.getAnswerList()
DEBUG: first.common.logger.LoggerAspect - DAO  		:  first.builder.dao.BuilderDAO.getAnswerList()
DEBUG: first.builder.dao.AbstractDAO - 	 QueryId  	:  builder.getAnswerList
DEBUG: org.mybatis.spring.SqlSessionUtils - Creating a new SqlSession
DEBUG: org.mybatis.spring.SqlSessionUtils - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@4ef7e1be]
DEBUG: org.mybatis.spring.transaction.SpringManagedTransaction - JDBC Connection [net.sf.log4jdbc.ConnectionSpy@7ab612b2] will be managed by Spring
2024-03-04 09:43:11,745  INFO SQL(simplebot)        :  SELECT I.No, I.Main, I.Name, A.answer, I.Account
		FROM Intent I LEFT OUTER JOIN Answer A
		ON I.Answer = A.No
		WHERE I.Account=1636
 and I.Language=1
		ORDER BY I.No
		OFFSET 0 ROWS
		FETCH NEXT 15 ROWS ONLY
DEBUG: org.mybatis.spring.SqlSessionUtils - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@4ef7e1be]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@4ef7e1be]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@4ef7e1be]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@4ef7e1be]
DEBUG: first.common.logger.LoggerAspect - ServiceImpl  	:  first.builder.service.BuilderService.getAllIntents()
DEBUG: first.common.logger.LoggerAspect - DAO  		:  first.builder.dao.BuilderDAO.getAllIntents()
DEBUG: first.builder.dao.AbstractDAO - 	 QueryId  	:  builder.getAllIntents
DEBUG: org.mybatis.spring.SqlSessionUtils - Creating a new SqlSession
DEBUG: org.mybatis.spring.SqlSessionUtils - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@65e6a7]
DEBUG: org.mybatis.spring.transaction.SpringManagedTransaction - JDBC Connection [net.sf.log4jdbc.ConnectionSpy@6f7f3312] will be managed by Spring
2024-03-04 09:43:11,752  INFO SQL(simplebot)        :  SELECT I.No, I.Main, I.Name,I.Next, I.URL, I.Language
		FROM Intent I
		WHERE I.Account=1636
		ORDER BY I.No
DEBUG: org.mybatis.spring.SqlSessionUtils - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@65e6a7]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@65e6a7]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@65e6a7]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@65e6a7]
DEBUG: first.common.logger.LoggerAspect - ServiceImpl  	:  first.builder.service.BuilderService.getAllBertIntents()
DEBUG: first.common.logger.LoggerAspect - DAO  		:  first.builder.dao.BuilderDAO.getAllBertIntents()
DEBUG: first.builder.dao.AbstractDAO - 	 QueryId  	:  builder.getAllBertIntents
DEBUG: org.mybatis.spring.SqlSessionUtils - Creating a new SqlSession
DEBUG: org.mybatis.spring.SqlSessionUtils - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@36ebc29b]
DEBUG: org.mybatis.spring.transaction.SpringManagedTransaction - JDBC Connection [net.sf.log4jdbc.ConnectionSpy@29efb884] will be managed by Spring
2024-03-04 09:43:11,756  INFO SQL(simplebot)        :  SELECT B.No, B.Name, B.Language
		FROM BertIntent B LEFT OUTER JOIN BackendInfo BI
		ON B.BertItfId = BI.id
		WHERE BI.host=1636
		ORDER BY B.No
DEBUG: org.mybatis.spring.SqlSessionUtils - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@36ebc29b]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@36ebc29b]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@36ebc29b]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@36ebc29b]
DEBUG: first.common.logger.LoggerAspect - Controller  	:  first.builder.controller.BuilderController.getTask()
DEBUG: first.common.logger.LoggerAspect - ServiceImpl  	:  first.builder.service.BuilderService.getTaskCount()
DEBUG: first.common.logger.LoggerAspect - DAO  		:  first.builder.dao.BuilderDAO.getTaskCount()
DEBUG: first.builder.dao.AbstractDAO - 	 QueryId  	:  builder.getTaskCount
DEBUG: org.mybatis.spring.SqlSessionUtils - Creating a new SqlSession
DEBUG: org.mybatis.spring.SqlSessionUtils - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@4648ee77]
DEBUG: org.mybatis.spring.transaction.SpringManagedTransaction - JDBC Connection [net.sf.log4jdbc.ConnectionSpy@22beae22] will be managed by Spring
2024-03-04 09:43:11,789  INFO SQL(simplebot)        :  SELECT COUNT(*) FROM Intent WHERE Account=1636
 and Language=1
DEBUG: org.mybatis.spring.SqlSessionUtils - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@4648ee77]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@4648ee77]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@4648ee77]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@4648ee77]
DEBUG: first.common.logger.LoggerAspect - ServiceImpl  	:  first.builder.service.BuilderService.getAnswerList()
DEBUG: first.common.logger.LoggerAspect - DAO  		:  first.builder.dao.BuilderDAO.getAnswerList()
DEBUG: first.builder.dao.AbstractDAO - 	 QueryId  	:  builder.getAnswerList
DEBUG: org.mybatis.spring.SqlSessionUtils - Creating a new SqlSession
DEBUG: org.mybatis.spring.SqlSessionUtils - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@507e8432]
DEBUG: org.mybatis.spring.transaction.SpringManagedTransaction - JDBC Connection [net.sf.log4jdbc.ConnectionSpy@d1beb49] will be managed by Spring
2024-03-04 09:43:11,794  INFO SQL(simplebot)        :  SELECT I.No, I.Main, I.Name, A.answer, I.Account
		FROM Intent I LEFT OUTER JOIN Answer A
		ON I.Answer = A.No
		WHERE I.Account=1636
 and I.Language=1
		ORDER BY I.No
		OFFSET 0 ROWS
		FETCH NEXT 15 ROWS ONLY
DEBUG: org.mybatis.spring.SqlSessionUtils - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@507e8432]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@507e8432]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@507e8432]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@507e8432]
DEBUG: first.common.logger.LoggerAspect - ServiceImpl  	:  first.builder.service.BuilderService.getAllIntents()
DEBUG: first.common.logger.LoggerAspect - DAO  		:  first.builder.dao.BuilderDAO.getAllIntents()
DEBUG: first.builder.dao.AbstractDAO - 	 QueryId  	:  builder.getAllIntents
DEBUG: org.mybatis.spring.SqlSessionUtils - Creating a new SqlSession
DEBUG: org.mybatis.spring.SqlSessionUtils - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@5ff6b4f2]
DEBUG: org.mybatis.spring.transaction.SpringManagedTransaction - JDBC Connection [net.sf.log4jdbc.ConnectionSpy@17bd3e2b] will be managed by Spring
2024-03-04 09:43:11,799  INFO SQL(simplebot)        :  SELECT I.No, I.Main, I.Name,I.Next, I.URL, I.Language
		FROM Intent I
		WHERE I.Account=1636
		ORDER BY I.No
DEBUG: org.mybatis.spring.SqlSessionUtils - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@5ff6b4f2]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@5ff6b4f2]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@5ff6b4f2]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@5ff6b4f2]
DEBUG: first.common.logger.LoggerAspect - ServiceImpl  	:  first.builder.service.BuilderService.getAllBertIntents()
DEBUG: first.common.logger.LoggerAspect - DAO  		:  first.builder.dao.BuilderDAO.getAllBertIntents()
DEBUG: first.builder.dao.AbstractDAO - 	 QueryId  	:  builder.getAllBertIntents
DEBUG: org.mybatis.spring.SqlSessionUtils - Creating a new SqlSession
DEBUG: org.mybatis.spring.SqlSessionUtils - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@41e53a3a]
DEBUG: org.mybatis.spring.transaction.SpringManagedTransaction - JDBC Connection [net.sf.log4jdbc.ConnectionSpy@4beea439] will be managed by Spring
2024-03-04 09:43:11,804  INFO SQL(simplebot)        :  SELECT B.No, B.Name, B.Language
		FROM BertIntent B LEFT OUTER JOIN BackendInfo BI
		ON B.BertItfId = BI.id
		WHERE BI.host=1636
		ORDER BY B.No
DEBUG: org.mybatis.spring.SqlSessionUtils - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@41e53a3a]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@41e53a3a]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@41e53a3a]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@41e53a3a]
DEBUG: first.common.logger.LoggerAspect - Controller  	:  first.builder.controller.BuilderController.getTestPage()
DEBUG: first.common.logger.LoggerAspect - ServiceImpl  	:  first.builder.service.BuilderService.getHostByAccount()
DEBUG: first.common.logger.LoggerAspect - DAO  		:  first.builder.dao.BuilderDAO.getHostByAccount()
DEBUG: first.builder.dao.AbstractDAO - 	 QueryId  	:  builder.getHostByAccount
DEBUG: org.mybatis.spring.SqlSessionUtils - Creating a new SqlSession
DEBUG: org.mybatis.spring.SqlSessionUtils - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1f54166c]
DEBUG: org.mybatis.spring.transaction.SpringManagedTransaction - JDBC Connection [net.sf.log4jdbc.ConnectionSpy@7c2aa062] will be managed by Spring
2024-03-04 09:43:13,501  INFO SQL(simplebot)        :  SELECT Host
		From Account
		Where No=1636
DEBUG: org.mybatis.spring.SqlSessionUtils - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1f54166c]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1f54166c]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1f54166c]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1f54166c]
DEBUG: first.common.logger.LoggerAspect - Controller  	:  first.builder.controller.BuilderController.chatbotBuilderCommon()
DEBUG: first.common.logger.LoggerAspect - Controller  	:  first.builder.controller.BuilderController.getChatList()
DEBUG: first.common.logger.LoggerAspect - ServiceImpl  	:  first.builder.service.BuilderService.getChatbotList()
DEBUG: first.common.logger.LoggerAspect - DAO  		:  first.builder.dao.BuilderDAO.getChatbotList()
DEBUG: first.builder.dao.AbstractDAO - 	 QueryId  	:  builder.getChatbotList
DEBUG: org.mybatis.spring.SqlSessionUtils - Creating a new SqlSession
DEBUG: org.mybatis.spring.SqlSessionUtils - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@281a2ff9]
DEBUG: org.mybatis.spring.transaction.SpringManagedTransaction - JDBC Connection [net.sf.log4jdbc.ConnectionSpy@76f0a4c8] will be managed by Spring
2024-03-04 09:43:30,715  INFO SQL(simplebot)        :  SELECT  /* No, Name, Host, Language */
			*
		from Account WHERE 1=1
		AND No IN
		 
				 (  
					'1636'
				 ) 
			 

		 
		ORDER BY No
DEBUG: org.mybatis.spring.SqlSessionUtils - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@281a2ff9]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@281a2ff9]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@281a2ff9]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@281a2ff9]
DEBUG: first.common.logger.LoggerAspect - Controller  	:  first.builder.controller.BuilderController.builderContentsAnswer()
DEBUG: first.common.logger.LoggerAspect - Controller  	:  first.builder.controller.BuilderController.builderBottomAnswer()
DEBUG: first.common.logger.LoggerAspect - Controller  	:  first.builder.controller.BuilderController.getTask()
DEBUG: first.common.logger.LoggerAspect - ServiceImpl  	:  first.builder.service.BuilderService.getTaskCount()
DEBUG: first.common.logger.LoggerAspect - DAO  		:  first.builder.dao.BuilderDAO.getTaskCount()
DEBUG: first.builder.dao.AbstractDAO - 	 QueryId  	:  builder.getTaskCount
DEBUG: org.mybatis.spring.SqlSessionUtils - Creating a new SqlSession
DEBUG: org.mybatis.spring.SqlSessionUtils - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@6199a33a]
DEBUG: org.mybatis.spring.transaction.SpringManagedTransaction - JDBC Connection [net.sf.log4jdbc.ConnectionSpy@64bfab0d] will be managed by Spring
2024-03-04 09:43:30,785  INFO SQL(simplebot)        :  SELECT COUNT(*) FROM Intent WHERE Account=1636
 and Language=1
DEBUG: org.mybatis.spring.SqlSessionUtils - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@6199a33a]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@6199a33a]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@6199a33a]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@6199a33a]
DEBUG: first.common.logger.LoggerAspect - ServiceImpl  	:  first.builder.service.BuilderService.getAnswerList()
DEBUG: first.common.logger.LoggerAspect - DAO  		:  first.builder.dao.BuilderDAO.getAnswerList()
DEBUG: first.builder.dao.AbstractDAO - 	 QueryId  	:  builder.getAnswerList
DEBUG: org.mybatis.spring.SqlSessionUtils - Creating a new SqlSession
DEBUG: org.mybatis.spring.SqlSessionUtils - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@39c515aa]
DEBUG: org.mybatis.spring.transaction.SpringManagedTransaction - JDBC Connection [net.sf.log4jdbc.ConnectionSpy@1f315833] will be managed by Spring
2024-03-04 09:43:30,790  INFO SQL(simplebot)        :  SELECT I.No, I.Main, I.Name, A.answer, I.Account
		FROM Intent I LEFT OUTER JOIN Answer A
		ON I.Answer = A.No
		WHERE I.Account=1636
 and I.Language=1
		ORDER BY I.No
		OFFSET 0 ROWS
		FETCH NEXT 15 ROWS ONLY
DEBUG: org.mybatis.spring.SqlSessionUtils - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@39c515aa]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@39c515aa]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@39c515aa]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@39c515aa]
DEBUG: first.common.logger.LoggerAspect - ServiceImpl  	:  first.builder.service.BuilderService.getAllIntents()
DEBUG: first.common.logger.LoggerAspect - DAO  		:  first.builder.dao.BuilderDAO.getAllIntents()
DEBUG: first.builder.dao.AbstractDAO - 	 QueryId  	:  builder.getAllIntents
DEBUG: org.mybatis.spring.SqlSessionUtils - Creating a new SqlSession
DEBUG: org.mybatis.spring.SqlSessionUtils - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@189ac7ee]
DEBUG: org.mybatis.spring.transaction.SpringManagedTransaction - JDBC Connection [net.sf.log4jdbc.ConnectionSpy@6eeaa198] will be managed by Spring
2024-03-04 09:43:30,795  INFO SQL(simplebot)        :  SELECT I.No, I.Main, I.Name,I.Next, I.URL, I.Language
		FROM Intent I
		WHERE I.Account=1636
		ORDER BY I.No
DEBUG: org.mybatis.spring.SqlSessionUtils - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@189ac7ee]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@189ac7ee]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@189ac7ee]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@189ac7ee]
DEBUG: first.common.logger.LoggerAspect - ServiceImpl  	:  first.builder.service.BuilderService.getAllBertIntents()
DEBUG: first.common.logger.LoggerAspect - DAO  		:  first.builder.dao.BuilderDAO.getAllBertIntents()
DEBUG: first.builder.dao.AbstractDAO - 	 QueryId  	:  builder.getAllBertIntents
DEBUG: org.mybatis.spring.SqlSessionUtils - Creating a new SqlSession
DEBUG: org.mybatis.spring.SqlSessionUtils - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@20715592]
DEBUG: org.mybatis.spring.transaction.SpringManagedTransaction - JDBC Connection [net.sf.log4jdbc.ConnectionSpy@4b3a4e2d] will be managed by Spring
2024-03-04 09:43:30,799  INFO SQL(simplebot)        :  SELECT B.No, B.Name, B.Language
		FROM BertIntent B LEFT OUTER JOIN BackendInfo BI
		ON B.BertItfId = BI.id
		WHERE BI.host=1636
		ORDER BY B.No
DEBUG: org.mybatis.spring.SqlSessionUtils - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@20715592]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@20715592]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@20715592]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@20715592]
DEBUG: first.common.logger.LoggerAspect - Controller  	:  first.builder.controller.BuilderController.getTask()
DEBUG: first.common.logger.LoggerAspect - ServiceImpl  	:  first.builder.service.BuilderService.getTaskCount()
DEBUG: first.common.logger.LoggerAspect - DAO  		:  first.builder.dao.BuilderDAO.getTaskCount()
DEBUG: first.builder.dao.AbstractDAO - 	 QueryId  	:  builder.getTaskCount
DEBUG: org.mybatis.spring.SqlSessionUtils - Creating a new SqlSession
DEBUG: org.mybatis.spring.SqlSessionUtils - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@dbd07d9]
DEBUG: org.mybatis.spring.transaction.SpringManagedTransaction - JDBC Connection [net.sf.log4jdbc.ConnectionSpy@1e5df469] will be managed by Spring
2024-03-04 09:43:30,891  INFO SQL(simplebot)        :  SELECT COUNT(*) FROM Intent WHERE Account=1636
 and Language=1
DEBUG: org.mybatis.spring.SqlSessionUtils - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@dbd07d9]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@dbd07d9]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@dbd07d9]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@dbd07d9]
DEBUG: first.common.logger.LoggerAspect - ServiceImpl  	:  first.builder.service.BuilderService.getAnswerList()
DEBUG: first.common.logger.LoggerAspect - DAO  		:  first.builder.dao.BuilderDAO.getAnswerList()
DEBUG: first.builder.dao.AbstractDAO - 	 QueryId  	:  builder.getAnswerList
DEBUG: org.mybatis.spring.SqlSessionUtils - Creating a new SqlSession
DEBUG: org.mybatis.spring.SqlSessionUtils - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@3470aec2]
DEBUG: org.mybatis.spring.transaction.SpringManagedTransaction - JDBC Connection [net.sf.log4jdbc.ConnectionSpy@5a7b15c5] will be managed by Spring
2024-03-04 09:43:30,895  INFO SQL(simplebot)        :  SELECT I.No, I.Main, I.Name, A.answer, I.Account
		FROM Intent I LEFT OUTER JOIN Answer A
		ON I.Answer = A.No
		WHERE I.Account=1636
 and I.Language=1
		ORDER BY I.No
		OFFSET 0 ROWS
		FETCH NEXT 15 ROWS ONLY
DEBUG: org.mybatis.spring.SqlSessionUtils - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@3470aec2]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@3470aec2]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@3470aec2]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@3470aec2]
DEBUG: first.common.logger.LoggerAspect - ServiceImpl  	:  first.builder.service.BuilderService.getAllIntents()
DEBUG: first.common.logger.LoggerAspect - DAO  		:  first.builder.dao.BuilderDAO.getAllIntents()
DEBUG: first.builder.dao.AbstractDAO - 	 QueryId  	:  builder.getAllIntents
DEBUG: org.mybatis.spring.SqlSessionUtils - Creating a new SqlSession
DEBUG: org.mybatis.spring.SqlSessionUtils - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@26ae1b85]
DEBUG: org.mybatis.spring.transaction.SpringManagedTransaction - JDBC Connection [net.sf.log4jdbc.ConnectionSpy@63b06c40] will be managed by Spring
2024-03-04 09:43:30,899  INFO SQL(simplebot)        :  SELECT I.No, I.Main, I.Name,I.Next, I.URL, I.Language
		FROM Intent I
		WHERE I.Account=1636
		ORDER BY I.No
DEBUG: org.mybatis.spring.SqlSessionUtils - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@26ae1b85]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@26ae1b85]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@26ae1b85]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@26ae1b85]
DEBUG: first.common.logger.LoggerAspect - ServiceImpl  	:  first.builder.service.BuilderService.getAllBertIntents()
DEBUG: first.common.logger.LoggerAspect - DAO  		:  first.builder.dao.BuilderDAO.getAllBertIntents()
DEBUG: first.builder.dao.AbstractDAO - 	 QueryId  	:  builder.getAllBertIntents
DEBUG: org.mybatis.spring.SqlSessionUtils - Creating a new SqlSession
DEBUG: org.mybatis.spring.SqlSessionUtils - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@464b6cb9]
DEBUG: org.mybatis.spring.transaction.SpringManagedTransaction - JDBC Connection [net.sf.log4jdbc.ConnectionSpy@7ae5af4b] will be managed by Spring
2024-03-04 09:43:30,903  INFO SQL(simplebot)        :  SELECT B.No, B.Name, B.Language
		FROM BertIntent B LEFT OUTER JOIN BackendInfo BI
		ON B.BertItfId = BI.id
		WHERE BI.host=1636
		ORDER BY B.No
DEBUG: org.mybatis.spring.SqlSessionUtils - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@464b6cb9]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@464b6cb9]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@464b6cb9]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@464b6cb9]
DEBUG: first.common.logger.LoggerAspect - Controller  	:  first.builder.controller.BuilderController.chatbotBuilderCommon()
DEBUG: first.common.logger.LoggerAspect - Controller  	:  first.builder.controller.BuilderController.getChatList()
DEBUG: first.common.logger.LoggerAspect - ServiceImpl  	:  first.builder.service.BuilderService.getChatbotList()
DEBUG: first.common.logger.LoggerAspect - DAO  		:  first.builder.dao.BuilderDAO.getChatbotList()
DEBUG: first.builder.dao.AbstractDAO - 	 QueryId  	:  builder.getChatbotList
DEBUG: org.mybatis.spring.SqlSessionUtils - Creating a new SqlSession
DEBUG: org.mybatis.spring.SqlSessionUtils - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@40c098cd]
DEBUG: org.mybatis.spring.transaction.SpringManagedTransaction - JDBC Connection [net.sf.log4jdbc.ConnectionSpy@3fc01cf0] will be managed by Spring
2024-03-04 09:43:39,559  INFO SQL(simplebot)        :  SELECT  /* No, Name, Host, Language */
			*
		from Account WHERE 1=1
		AND No IN
		 
				 (  
					'1636'
				 ) 
			 

		 
		ORDER BY No
DEBUG: org.mybatis.spring.SqlSessionUtils - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@40c098cd]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@40c098cd]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@40c098cd]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@40c098cd]
DEBUG: first.common.logger.LoggerAspect - Controller  	:  first.builder.controller.BuilderController.builderContentsAnswer()
DEBUG: first.common.logger.LoggerAspect - Controller  	:  first.builder.controller.BuilderController.builderBottomAnswer()
DEBUG: first.common.logger.LoggerAspect - Controller  	:  first.builder.controller.BuilderController.getTask()
DEBUG: first.common.logger.LoggerAspect - ServiceImpl  	:  first.builder.service.BuilderService.getTaskCount()
DEBUG: first.common.logger.LoggerAspect - DAO  		:  first.builder.dao.BuilderDAO.getTaskCount()
DEBUG: first.builder.dao.AbstractDAO - 	 QueryId  	:  builder.getTaskCount
DEBUG: org.mybatis.spring.SqlSessionUtils - Creating a new SqlSession
DEBUG: org.mybatis.spring.SqlSessionUtils - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@5eb68500]
DEBUG: org.mybatis.spring.transaction.SpringManagedTransaction - JDBC Connection [net.sf.log4jdbc.ConnectionSpy@28d49a81] will be managed by Spring
2024-03-04 09:43:39,701  INFO SQL(simplebot)        :  SELECT COUNT(*) FROM Intent WHERE Account=1636
 and Language=1
DEBUG: org.mybatis.spring.SqlSessionUtils - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@5eb68500]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@5eb68500]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@5eb68500]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@5eb68500]
DEBUG: first.common.logger.LoggerAspect - ServiceImpl  	:  first.builder.service.BuilderService.getAnswerList()
DEBUG: first.common.logger.LoggerAspect - DAO  		:  first.builder.dao.BuilderDAO.getAnswerList()
DEBUG: first.builder.dao.AbstractDAO - 	 QueryId  	:  builder.getAnswerList
DEBUG: org.mybatis.spring.SqlSessionUtils - Creating a new SqlSession
DEBUG: org.mybatis.spring.SqlSessionUtils - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@5d39abdf]
DEBUG: org.mybatis.spring.transaction.SpringManagedTransaction - JDBC Connection [net.sf.log4jdbc.ConnectionSpy@354fd46c] will be managed by Spring
2024-03-04 09:43:39,705  INFO SQL(simplebot)        :  SELECT I.No, I.Main, I.Name, A.answer, I.Account
		FROM Intent I LEFT OUTER JOIN Answer A
		ON I.Answer = A.No
		WHERE I.Account=1636
 and I.Language=1
		ORDER BY I.No
		OFFSET 0 ROWS
		FETCH NEXT 15 ROWS ONLY
DEBUG: org.mybatis.spring.SqlSessionUtils - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@5d39abdf]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@5d39abdf]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@5d39abdf]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@5d39abdf]
DEBUG: first.common.logger.LoggerAspect - ServiceImpl  	:  first.builder.service.BuilderService.getAllIntents()
DEBUG: first.common.logger.LoggerAspect - DAO  		:  first.builder.dao.BuilderDAO.getAllIntents()
DEBUG: first.builder.dao.AbstractDAO - 	 QueryId  	:  builder.getAllIntents
DEBUG: org.mybatis.spring.SqlSessionUtils - Creating a new SqlSession
DEBUG: org.mybatis.spring.SqlSessionUtils - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@8805f04]
DEBUG: org.mybatis.spring.transaction.SpringManagedTransaction - JDBC Connection [net.sf.log4jdbc.ConnectionSpy@52816497] will be managed by Spring
2024-03-04 09:43:39,710  INFO SQL(simplebot)        :  SELECT I.No, I.Main, I.Name,I.Next, I.URL, I.Language
		FROM Intent I
		WHERE I.Account=1636
		ORDER BY I.No
DEBUG: org.mybatis.spring.SqlSessionUtils - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@8805f04]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@8805f04]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@8805f04]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@8805f04]
DEBUG: first.common.logger.LoggerAspect - ServiceImpl  	:  first.builder.service.BuilderService.getAllBertIntents()
DEBUG: first.common.logger.LoggerAspect - DAO  		:  first.builder.dao.BuilderDAO.getAllBertIntents()
DEBUG: first.builder.dao.AbstractDAO - 	 QueryId  	:  builder.getAllBertIntents
DEBUG: org.mybatis.spring.SqlSessionUtils - Creating a new SqlSession
DEBUG: org.mybatis.spring.SqlSessionUtils - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@2707a053]
DEBUG: org.mybatis.spring.transaction.SpringManagedTransaction - JDBC Connection [net.sf.log4jdbc.ConnectionSpy@51092aa8] will be managed by Spring
2024-03-04 09:43:39,714  INFO SQL(simplebot)        :  SELECT B.No, B.Name, B.Language
		FROM BertIntent B LEFT OUTER JOIN BackendInfo BI
		ON B.BertItfId = BI.id
		WHERE BI.host=1636
		ORDER BY B.No
DEBUG: org.mybatis.spring.SqlSessionUtils - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@2707a053]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@2707a053]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@2707a053]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@2707a053]
DEBUG: first.common.logger.LoggerAspect - Controller  	:  first.builder.controller.BuilderController.getTask()
DEBUG: first.common.logger.LoggerAspect - ServiceImpl  	:  first.builder.service.BuilderService.getTaskCount()
DEBUG: first.common.logger.LoggerAspect - DAO  		:  first.builder.dao.BuilderDAO.getTaskCount()
DEBUG: first.builder.dao.AbstractDAO - 	 QueryId  	:  builder.getTaskCount
DEBUG: org.mybatis.spring.SqlSessionUtils - Creating a new SqlSession
DEBUG: org.mybatis.spring.SqlSessionUtils - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@22105510]
DEBUG: org.mybatis.spring.transaction.SpringManagedTransaction - JDBC Connection [net.sf.log4jdbc.ConnectionSpy@7dce2eee] will be managed by Spring
2024-03-04 09:43:39,749  INFO SQL(simplebot)        :  SELECT COUNT(*) FROM Intent WHERE Account=1636
 and Language=1
DEBUG: org.mybatis.spring.SqlSessionUtils - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@22105510]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@22105510]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@22105510]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@22105510]
DEBUG: first.common.logger.LoggerAspect - ServiceImpl  	:  first.builder.service.BuilderService.getAnswerList()
DEBUG: first.common.logger.LoggerAspect - DAO  		:  first.builder.dao.BuilderDAO.getAnswerList()
DEBUG: first.builder.dao.AbstractDAO - 	 QueryId  	:  builder.getAnswerList
DEBUG: org.mybatis.spring.SqlSessionUtils - Creating a new SqlSession
DEBUG: org.mybatis.spring.SqlSessionUtils - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@3491087e]
DEBUG: org.mybatis.spring.transaction.SpringManagedTransaction - JDBC Connection [net.sf.log4jdbc.ConnectionSpy@437919e4] will be managed by Spring
2024-03-04 09:43:39,753  INFO SQL(simplebot)        :  SELECT I.No, I.Main, I.Name, A.answer, I.Account
		FROM Intent I LEFT OUTER JOIN Answer A
		ON I.Answer = A.No
		WHERE I.Account=1636
 and I.Language=1
		ORDER BY I.No
		OFFSET 0 ROWS
		FETCH NEXT 15 ROWS ONLY
DEBUG: org.mybatis.spring.SqlSessionUtils - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@3491087e]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@3491087e]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@3491087e]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@3491087e]
DEBUG: first.common.logger.LoggerAspect - ServiceImpl  	:  first.builder.service.BuilderService.getAllIntents()
DEBUG: first.common.logger.LoggerAspect - DAO  		:  first.builder.dao.BuilderDAO.getAllIntents()
DEBUG: first.builder.dao.AbstractDAO - 	 QueryId  	:  builder.getAllIntents
DEBUG: org.mybatis.spring.SqlSessionUtils - Creating a new SqlSession
DEBUG: org.mybatis.spring.SqlSessionUtils - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1a7bad0c]
DEBUG: org.mybatis.spring.transaction.SpringManagedTransaction - JDBC Connection [net.sf.log4jdbc.ConnectionSpy@32cf7400] will be managed by Spring
2024-03-04 09:43:39,757  INFO SQL(simplebot)        :  SELECT I.No, I.Main, I.Name,I.Next, I.URL, I.Language
		FROM Intent I
		WHERE I.Account=1636
		ORDER BY I.No
DEBUG: org.mybatis.spring.SqlSessionUtils - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1a7bad0c]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1a7bad0c]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1a7bad0c]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1a7bad0c]
DEBUG: first.common.logger.LoggerAspect - ServiceImpl  	:  first.builder.service.BuilderService.getAllBertIntents()
DEBUG: first.common.logger.LoggerAspect - DAO  		:  first.builder.dao.BuilderDAO.getAllBertIntents()
DEBUG: first.builder.dao.AbstractDAO - 	 QueryId  	:  builder.getAllBertIntents
DEBUG: org.mybatis.spring.SqlSessionUtils - Creating a new SqlSession
DEBUG: org.mybatis.spring.SqlSessionUtils - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@61ba3055]
DEBUG: org.mybatis.spring.transaction.SpringManagedTransaction - JDBC Connection [net.sf.log4jdbc.ConnectionSpy@695bbcd0] will be managed by Spring
2024-03-04 09:43:39,761  INFO SQL(simplebot)        :  SELECT B.No, B.Name, B.Language
		FROM BertIntent B LEFT OUTER JOIN BackendInfo BI
		ON B.BertItfId = BI.id
		WHERE BI.host=1636
		ORDER BY B.No
DEBUG: org.mybatis.spring.SqlSessionUtils - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@61ba3055]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@61ba3055]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@61ba3055]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@61ba3055]
DEBUG: first.common.logger.LoggerAspect - Controller  	:  first.builder.controller.BuilderController.getTestPage()
DEBUG: first.common.logger.LoggerAspect - ServiceImpl  	:  first.builder.service.BuilderService.getHostByAccount()
DEBUG: first.common.logger.LoggerAspect - DAO  		:  first.builder.dao.BuilderDAO.getHostByAccount()
DEBUG: first.builder.dao.AbstractDAO - 	 QueryId  	:  builder.getHostByAccount
DEBUG: org.mybatis.spring.SqlSessionUtils - Creating a new SqlSession
DEBUG: org.mybatis.spring.SqlSessionUtils - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@81b46df]
DEBUG: org.mybatis.spring.transaction.SpringManagedTransaction - JDBC Connection [net.sf.log4jdbc.ConnectionSpy@5d6207fa] will be managed by Spring
2024-03-04 09:43:40,842  INFO SQL(simplebot)        :  SELECT Host
		From Account
		Where No=1636
DEBUG: org.mybatis.spring.SqlSessionUtils - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@81b46df]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@81b46df]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@81b46df]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@81b46df]
04-Mar-2024 09:50:11.001 INFO [main] org.apache.catalina.core.StandardServer.await A valid shutdown command was received via the shutdown port. Stopping the Server instance.
04-Mar-2024 09:50:11.002 INFO [main] org.apache.coyote.AbstractProtocol.pause Pausing ProtocolHandler ["http-nio-18090"]
04-Mar-2024 09:50:11.004 INFO [main] org.apache.catalina.core.StandardService.stopInternal Stopping service [Catalina]
04-Mar-2024 09:50:11.016 WARNING [localhost-startStop-3] org.apache.catalina.loader.WebappClassLoaderBase.clearReferencesJdbc The web application [sds-builder] registered the JDBC driver [com.mysql.jdbc.Driver] but failed to unregister it when the web application was stopped. To prevent a memory leak, the JDBC Driver has been forcibly unregistered.
04-Mar-2024 09:50:11.016 WARNING [localhost-startStop-3] org.apache.catalina.loader.WebappClassLoaderBase.clearReferencesJdbc The web application [sds-builder] registered the JDBC driver [net.sf.log4jdbc.DriverSpy] but failed to unregister it when the web application was stopped. To prevent a memory leak, the JDBC Driver has been forcibly unregistered.
04-Mar-2024 09:50:11.016 WARNING [localhost-startStop-3] org.apache.catalina.loader.WebappClassLoaderBase.clearReferencesJdbc The web application [sds-builder] registered the JDBC driver [com.microsoft.sqlserver.jdbc.SQLServerDriver] but failed to unregister it when the web application was stopped. To prevent a memory leak, the JDBC Driver has been forcibly unregistered.
04-Mar-2024 09:50:11.017 WARNING [localhost-startStop-3] org.apache.catalina.loader.WebappClassLoaderBase.clearReferencesThreads The web application [sds-builder] appears to have started a thread named [mysql-cj-abandoned-connection-cleanup] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 java.lang.Object.wait(Native Method)
 java.lang.ref.ReferenceQueue.remove(ReferenceQueue.java:144)
 com.mysql.jdbc.AbandonedConnectionCleanupThread.run(AbandonedConnectionCleanupThread.java:80)
 java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
 java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
 java.lang.Thread.run(Thread.java:750)
04-Mar-2024 09:50:11.033 INFO [main] org.apache.coyote.AbstractProtocol.stop Stopping ProtocolHandler ["http-nio-18090"]
04-Mar-2024 09:50:11.040 INFO [main] org.apache.coyote.AbstractProtocol.destroy Destroying ProtocolHandler ["http-nio-18090"]
04-Mar-2024 10:30:48.579 INFO [main] org.apache.catalina.startup.VersionLoggerListener.log Server version name:   Apache Tomcat/8.5.99
04-Mar-2024 10:30:48.581 INFO [main] org.apache.catalina.startup.VersionLoggerListener.log Server built:          Feb 14 2024 22:52:13 UTC
04-Mar-2024 10:30:48.581 INFO [main] org.apache.catalina.startup.VersionLoggerListener.log Server version number: 8.5.99.0
04-Mar-2024 10:30:48.581 INFO [main] org.apache.catalina.startup.VersionLoggerListener.log OS Name:               Linux
04-Mar-2024 10:30:48.581 INFO [main] org.apache.catalina.startup.VersionLoggerListener.log OS Version:            5.15.0-97-generic
04-Mar-2024 10:30:48.581 INFO [main] org.apache.catalina.startup.VersionLoggerListener.log Architecture:          amd64
04-Mar-2024 10:30:48.581 INFO [main] org.apache.catalina.startup.VersionLoggerListener.log Java Home:             /usr/lib/jvm/java-8-openjdk-amd64/jre
04-Mar-2024 10:30:48.581 INFO [main] org.apache.catalina.startup.VersionLoggerListener.log JVM Version:           1.8.0_392-8u392-ga-1~22.04-b08
04-Mar-2024 10:30:48.581 INFO [main] org.apache.catalina.startup.VersionLoggerListener.log JVM Vendor:            Private Build
04-Mar-2024 10:30:48.581 INFO [main] org.apache.catalina.startup.VersionLoggerListener.log CATALINA_BASE:         /home/minds/maum/sds-builder/apache-tomcat-8.5.99
04-Mar-2024 10:30:48.581 INFO [main] org.apache.catalina.startup.VersionLoggerListener.log CATALINA_HOME:         /home/minds/maum/sds-builder/apache-tomcat-8.5.99
04-Mar-2024 10:30:48.582 INFO [main] org.apache.catalina.startup.VersionLoggerListener.log Command line argument: -Djava.util.logging.config.file=/home/minds/maum/sds-builder/apache-tomcat-8.5.99/conf/logging.properties
04-Mar-2024 10:30:48.582 INFO [main] org.apache.catalina.startup.VersionLoggerListener.log Command line argument: -Djava.util.logging.manager=org.apache.juli.ClassLoaderLogManager
04-Mar-2024 10:30:48.582 INFO [main] org.apache.catalina.startup.VersionLoggerListener.log Command line argument: -Djdk.tls.ephemeralDHKeySize=2048
04-Mar-2024 10:30:48.582 INFO [main] org.apache.catalina.startup.VersionLoggerListener.log Command line argument: -Djava.protocol.handler.pkgs=org.apache.catalina.webresources
04-Mar-2024 10:30:48.582 INFO [main] org.apache.catalina.startup.VersionLoggerListener.log Command line argument: -Dorg.apache.catalina.security.SecurityListener.UMASK=0027
04-Mar-2024 10:30:48.582 INFO [main] org.apache.catalina.startup.VersionLoggerListener.log Command line argument: -Dignore.endorsed.dirs=
04-Mar-2024 10:30:48.582 INFO [main] org.apache.catalina.startup.VersionLoggerListener.log Command line argument: -Dcatalina.base=/home/minds/maum/sds-builder/apache-tomcat-8.5.99
04-Mar-2024 10:30:48.582 INFO [main] org.apache.catalina.startup.VersionLoggerListener.log Command line argument: -Dcatalina.home=/home/minds/maum/sds-builder/apache-tomcat-8.5.99
04-Mar-2024 10:30:48.582 INFO [main] org.apache.catalina.startup.VersionLoggerListener.log Command line argument: -Djava.io.tmpdir=/home/minds/maum/sds-builder/apache-tomcat-8.5.99/temp
04-Mar-2024 10:30:48.583 INFO [main] org.apache.catalina.core.AprLifecycleListener.lifecycleEvent The Apache Tomcat Native library which allows using OpenSSL was not found on the java.library.path: [/usr/java/packages/lib/amd64:/usr/lib/x86_64-linux-gnu/jni:/lib/x86_64-linux-gnu:/usr/lib/x86_64-linux-gnu:/usr/lib/jni:/lib:/usr/lib]
04-Mar-2024 10:30:48.643 INFO [main] org.apache.coyote.AbstractProtocol.init Initializing ProtocolHandler ["http-nio-18090"]
04-Mar-2024 10:30:48.661 INFO [main] org.apache.catalina.startup.Catalina.load Initialization processed in 453 ms
04-Mar-2024 10:30:48.722 INFO [main] org.apache.catalina.core.StandardService.startInternal Starting service [Catalina]
04-Mar-2024 10:30:48.722 INFO [main] org.apache.catalina.core.StandardEngine.startInternal Starting Servlet engine: [Apache Tomcat/8.5.99]
04-Mar-2024 10:30:48.748 INFO [localhost-startStop-1] org.apache.catalina.startup.HostConfig.deployWAR Deploying web application archive [/home/minds/maum/sds-builder/apache-tomcat-8.5.99/webapps/sds-builder.war]
04-Mar-2024 10:30:48.779 INFO [localhost-startStop-1] org.apache.catalina.startup.ExpandWar.expand An expanded directory [/home/minds/maum/sds-builder/apache-tomcat-8.5.99/webapps/sds-builder] was found with a last modified time that did not match the associated WAR. It will be deleted.
04-Mar-2024 10:30:52.067 INFO [localhost-startStop-1] org.apache.jasper.servlet.TldScanner.scanJars At least one JAR was scanned for TLDs yet contained no TLDs. Enable debug logging for this logger for a complete list of JARs that were scanned but no TLDs were found in them. Skipping unneeded JARs during scanning can improve startup time and JSP compilation time.
DEBUG: org.mybatis.spring.SqlSessionFactoryBean - Property 'configuration' or 'configLocation' not specified, using default MyBatis Configuration
DEBUG: org.mybatis.spring.SqlSessionFactoryBean - Parsed mapper file: 'file [/home/minds/maum/sds-builder/apache-tomcat-8.5.99/webapps/sds-builder/WEB-INF/classes/mapper/maria/Chatbot/Builder_SQL.xml]'
DEBUG: org.mybatis.spring.SqlSessionFactoryBean - Parsed mapper file: 'file [/home/minds/maum/sds-builder/apache-tomcat-8.5.99/webapps/sds-builder/WEB-INF/classes/mapper/maria/Chatbot/MaumSDS_SQL.xml]'
DEBUG: org.mybatis.spring.SqlSessionFactoryBean - Property 'configuration' or 'configLocation' not specified, using default MyBatis Configuration
DEBUG: org.mybatis.spring.SqlSessionFactoryBean - Parsed mapper file: 'file [/home/minds/maum/sds-builder/apache-tomcat-8.5.99/webapps/sds-builder/WEB-INF/classes/mapper/maria/HAPPYCALL4/NQA_SQL.xml]'
DEBUG: org.mybatis.spring.SqlSessionFactoryBean - Parsed mapper file: 'file [/home/minds/maum/sds-builder/apache-tomcat-8.5.99/webapps/sds-builder/WEB-INF/classes/mapper/maria/HAPPYCALL4/SimpleBot_SQL.xml]'
SimpleBot Execution Environment : prod
SimpleBot BertIntent itfIP : 0
SimpleBot BertIntent nerIP : 0
SimpleBot BL IP : 125.132.250.244
SimpleBot CM IP : 121.133.247.250
SimpleBot M2U rest address : http://localhost:9990
SimpleBot Style Resources Path : /home/minds/maum/sds-builder/imgUpload
Default Resources Make : chatbot.css
Default Resources Make : chatbot_custom.css
Default Resources Make : chatbot_floating.css
Default Resources Make : IconImg
Default Resources Make : logoImg
Default Resources Make : default
Default Resources Make : mindslab
Default Resources Make : redtie
Default Resource constructed.
DEBUG: first.common.logger.LoggerAspect - ServiceImpl  	:  first.builder.service.BuilderService.getNqaStatusChatbotList()
DEBUG: first.common.logger.LoggerAspect - DAO  		:  first.builder.dao.BuilderDAO.getNqaStatusChatbotList()
DEBUG: first.builder.dao.AbstractDAO - 	 QueryId  	:  builder.getNqaStatusChatbotList
DEBUG: org.mybatis.spring.SqlSessionUtils - Creating a new SqlSession
DEBUG: org.mybatis.spring.SqlSessionUtils - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@32d9b446]
DEBUG: org.mybatis.spring.transaction.SpringManagedTransaction - JDBC Connection [net.sf.log4jdbc.ConnectionSpy@57445ab2] will be managed by Spring
2024-03-04 10:30:54,175  INFO SQL(simplebot)        :  SELECT No as host, Name, 'preparation' as nqaUploadStatus
 from Account
		ORDER BY No
DEBUG: org.mybatis.spring.SqlSessionUtils - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@32d9b446]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@32d9b446]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@32d9b446]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@32d9b446]
04-Mar-2024 10:30:55.512 INFO [localhost-startStop-1] org.apache.catalina.startup.HostConfig.deployWAR Deployment of web application archive [/home/minds/maum/sds-builder/apache-tomcat-8.5.99/webapps/sds-builder.war] has finished in [6,763] ms
04-Mar-2024 10:30:55.513 INFO [localhost-startStop-1] org.apache.catalina.startup.HostConfig.deployDirectory Deploying web application directory [/home/minds/maum/sds-builder/apache-tomcat-8.5.99/webapps/examples]
04-Mar-2024 10:30:55.672 INFO [localhost-startStop-1] org.apache.catalina.startup.HostConfig.deployDirectory Deployment of web application directory [/home/minds/maum/sds-builder/apache-tomcat-8.5.99/webapps/examples] has finished in [158] ms
04-Mar-2024 10:30:55.672 INFO [localhost-startStop-1] org.apache.catalina.startup.HostConfig.deployDirectory Deploying web application directory [/home/minds/maum/sds-builder/apache-tomcat-8.5.99/webapps/manager]
04-Mar-2024 10:30:55.692 INFO [localhost-startStop-1] org.apache.catalina.startup.HostConfig.deployDirectory Deployment of web application directory [/home/minds/maum/sds-builder/apache-tomcat-8.5.99/webapps/manager] has finished in [20] ms
04-Mar-2024 10:30:55.692 INFO [localhost-startStop-1] org.apache.catalina.startup.HostConfig.deployDirectory Deploying web application directory [/home/minds/maum/sds-builder/apache-tomcat-8.5.99/webapps/host-manager]
04-Mar-2024 10:30:55.707 INFO [localhost-startStop-1] org.apache.catalina.startup.HostConfig.deployDirectory Deployment of web application directory [/home/minds/maum/sds-builder/apache-tomcat-8.5.99/webapps/host-manager] has finished in [15] ms
04-Mar-2024 10:30:55.707 INFO [localhost-startStop-1] org.apache.catalina.startup.HostConfig.deployDirectory Deploying web application directory [/home/minds/maum/sds-builder/apache-tomcat-8.5.99/webapps/docs]
04-Mar-2024 10:30:55.719 INFO [localhost-startStop-1] org.apache.catalina.startup.HostConfig.deployDirectory Deployment of web application directory [/home/minds/maum/sds-builder/apache-tomcat-8.5.99/webapps/docs] has finished in [12] ms
04-Mar-2024 10:30:55.723 INFO [main] org.apache.coyote.AbstractProtocol.start Starting ProtocolHandler ["http-nio-18090"]
04-Mar-2024 10:30:55.735 INFO [main] org.apache.catalina.startup.Catalina.start Server startup in 7073 ms
DEBUG: first.common.logger.LoggerAspect - Controller  	:  first.builder.controller.BuilderController.chatbotBuilderCommon()
DEBUG: first.common.logger.LoggerAspect - Controller  	:  first.builder.controller.BuilderController.getChatList()
DEBUG: first.common.logger.LoggerAspect - ServiceImpl  	:  first.builder.service.BuilderService.getChatbotList()
DEBUG: first.common.logger.LoggerAspect - DAO  		:  first.builder.dao.BuilderDAO.getChatbotList()
DEBUG: first.builder.dao.AbstractDAO - 	 QueryId  	:  builder.getChatbotList
DEBUG: org.mybatis.spring.SqlSessionUtils - Creating a new SqlSession
DEBUG: org.mybatis.spring.SqlSessionUtils - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@7a327bf]
DEBUG: org.mybatis.spring.transaction.SpringManagedTransaction - JDBC Connection [net.sf.log4jdbc.ConnectionSpy@4ec14a9f] will be managed by Spring
2024-03-04 10:41:51,909  INFO SQL(simplebot)        :  SELECT  /* No, Name, Host, Language */
			*
		from Account WHERE 1=1
		AND No IN
		 (0) 

		 
		ORDER BY No
DEBUG: org.mybatis.spring.SqlSessionUtils - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@7a327bf]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@7a327bf]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@7a327bf]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@7a327bf]
DEBUG: first.common.logger.LoggerAspect - Controller  	:  first.builder.controller.BuilderController.chatbotBuilderCommon()
DEBUG: first.common.logger.LoggerAspect - Controller  	:  first.builder.controller.BuilderController.getChatList()
DEBUG: first.common.logger.LoggerAspect - ServiceImpl  	:  first.builder.service.BuilderService.getChatbotList()
DEBUG: first.common.logger.LoggerAspect - DAO  		:  first.builder.dao.BuilderDAO.getChatbotList()
DEBUG: first.builder.dao.AbstractDAO - 	 QueryId  	:  builder.getChatbotList
DEBUG: org.mybatis.spring.SqlSessionUtils - Creating a new SqlSession
DEBUG: org.mybatis.spring.SqlSessionUtils - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@3d15308c]
DEBUG: org.mybatis.spring.transaction.SpringManagedTransaction - JDBC Connection [net.sf.log4jdbc.ConnectionSpy@6cfce708] will be managed by Spring
2024-03-04 10:42:39,393  INFO SQL(simplebot)        :  SELECT  /* No, Name, Host, Language */
			*
		from Account WHERE 1=1
		AND No IN
		 (0) 

		 
		ORDER BY No
DEBUG: org.mybatis.spring.SqlSessionUtils - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@3d15308c]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@3d15308c]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@3d15308c]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@3d15308c]
DEBUG: first.common.logger.LoggerAspect - Controller  	:  first.builder.controller.BuilderController.builderContentsNewChatbot()
DEBUG: first.common.logger.LoggerAspect - Controller  	:  first.builder.controller.BuilderController.builderBottomnewChatbot()
DEBUG: first.common.logger.LoggerAspect - ServiceImpl  	:  first.builder.service.BuilderService.getDomain()
DEBUG: first.common.logger.LoggerAspect - DAO  		:  first.builder.dao.BuilderDAO.getDomain()
DEBUG: first.builder.dao.AbstractDAO - 	 QueryId  	:  builder.getDomain
DEBUG: org.mybatis.spring.SqlSessionUtils - Creating a new SqlSession
DEBUG: org.mybatis.spring.SqlSessionUtils - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@679724a2]
DEBUG: org.mybatis.spring.transaction.SpringManagedTransaction - JDBC Connection [net.sf.log4jdbc.ConnectionSpy@56baa30c] will be managed by Spring
2024-03-04 10:42:45,363  INFO SQL(simplebot)        :  SELECT Name, DefaultHost
		From Domain
DEBUG: org.mybatis.spring.SqlSessionUtils - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@679724a2]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@679724a2]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@679724a2]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@679724a2]
DEBUG: first.common.logger.LoggerAspect - Controller  	:  first.builder.controller.BuilderController.checkNewHostname()
DEBUG: first.common.logger.LoggerAspect - ServiceImpl  	:  first.builder.service.BuilderService.getNewHostName()
DEBUG: first.common.logger.LoggerAspect - DAO  		:  first.builder.dao.BuilderDAO.getNewHostName()
DEBUG: first.builder.dao.AbstractDAO - 	 QueryId  	:  builder.getNewHostName
DEBUG: org.mybatis.spring.SqlSessionUtils - Creating a new SqlSession
DEBUG: org.mybatis.spring.SqlSessionUtils - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@b440fa2]
DEBUG: org.mybatis.spring.transaction.SpringManagedTransaction - JDBC Connection [net.sf.log4jdbc.ConnectionSpy@529a77b8] will be managed by Spring
2024-03-04 10:42:52,144  INFO SQL(simplebot)        :  SELECT No, Host
		From Account
		Where Host='init'
DEBUG: org.mybatis.spring.SqlSessionUtils - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@b440fa2]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@b440fa2]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@b440fa2]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@b440fa2]
DEBUG: first.common.logger.LoggerAspect - Controller  	:  first.builder.controller.BuilderController.addNewChatbot()
DEBUG: first.common.logger.LoggerAspect - ServiceImpl  	:  first.builder.service.BuilderService.addChatbot()
DEBUG: first.common.logger.LoggerAspect - DAO  		:  first.builder.dao.BuilderDAO.addChatbot()
DEBUG: first.builder.dao.AbstractDAO - 	 QueryId  	:  builder.addChatbot
DEBUG: org.mybatis.spring.SqlSessionUtils - Creating a new SqlSession
DEBUG: org.mybatis.spring.SqlSessionUtils - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@2e8ad75b] was not registered for synchronization because synchronization is not active
DEBUG: org.mybatis.spring.transaction.SpringManagedTransaction - JDBC Connection [net.sf.log4jdbc.ConnectionSpy@3b892431] will not be managed by Spring
2024-03-04 10:42:52,165  INFO SQL(simplebot)        :  insert into Account (Name, Email, Host, Description,Language)
		values ('init','','init', '', '1')
DEBUG: org.mybatis.spring.SqlSessionUtils - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@2e8ad75b]
DEBUG: first.common.logger.LoggerAspect - ServiceImpl  	:  first.builder.service.BuilderService.getBackendInfo()
DEBUG: first.common.logger.LoggerAspect - DAO  		:  first.builder.dao.BuilderDAO.getBackendInfo()
DEBUG: first.builder.dao.AbstractDAO - 	 QueryId  	:  builder.getBackendInfo
DEBUG: org.mybatis.spring.SqlSessionUtils - Creating a new SqlSession
DEBUG: org.mybatis.spring.SqlSessionUtils - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@44d6230c]
DEBUG: org.mybatis.spring.transaction.SpringManagedTransaction - JDBC Connection [net.sf.log4jdbc.ConnectionSpy@4cb9ae9] will be managed by Spring
2024-03-04 10:42:52,179  INFO SQL(simplebot)        :  SELECT *
		From BackendInfo
		WHERE host=1
DEBUG: org.mybatis.spring.SqlSessionUtils - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@44d6230c]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@44d6230c]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@44d6230c]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@44d6230c]
DEBUG: first.common.logger.LoggerAspect - ServiceImpl  	:  first.builder.service.BuilderService.insertBackendInfos()
DEBUG: first.common.logger.LoggerAspect - DAO  		:  first.builder.dao.BuilderDAO.insertBackendInfos()
DEBUG: first.builder.dao.AbstractDAO - 	 QueryId  	:  builder.insertBackendInfos
DEBUG: org.mybatis.spring.SqlSessionUtils - Creating a new SqlSession
DEBUG: org.mybatis.spring.SqlSessionUtils - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1cd530ff] was not registered for synchronization because synchronization is not active
DEBUG: org.mybatis.spring.transaction.SpringManagedTransaction - JDBC Connection [net.sf.log4jdbc.ConnectionSpy@726562f1] will not be managed by Spring
2024-03-04 10:42:52,184  INFO SQL(simplebot)        :  insert into BackendInfo
		(host, service, ip, port)
		values(1636,'ITF',NULL, NULL)
DEBUG: org.mybatis.spring.SqlSessionUtils - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1cd530ff]
DEBUG: first.common.logger.LoggerAspect - ServiceImpl  	:  first.builder.service.BuilderService.insertBackendInfos()
DEBUG: first.common.logger.LoggerAspect - DAO  		:  first.builder.dao.BuilderDAO.insertBackendInfos()
DEBUG: first.builder.dao.AbstractDAO - 	 QueryId  	:  builder.insertBackendInfos
DEBUG: org.mybatis.spring.SqlSessionUtils - Creating a new SqlSession
DEBUG: org.mybatis.spring.SqlSessionUtils - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@7c84fd40] was not registered for synchronization because synchronization is not active
DEBUG: org.mybatis.spring.transaction.SpringManagedTransaction - JDBC Connection [net.sf.log4jdbc.ConnectionSpy@2fa18719] will not be managed by Spring
2024-03-04 10:42:52,188  INFO SQL(simplebot)        :  insert into BackendInfo
		(host, service, ip, port)
		values(1636,'NER',NULL, NULL)
DEBUG: org.mybatis.spring.SqlSessionUtils - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@7c84fd40]
DEBUG: first.common.logger.LoggerAspect - ServiceImpl  	:  first.builder.service.BuilderService.getIntentAnswer()
DEBUG: first.common.logger.LoggerAspect - DAO  		:  first.builder.dao.BuilderDAO.getIntentAnswer()
DEBUG: first.builder.dao.AbstractDAO - 	 QueryId  	:  builder.getIntentAnswer
DEBUG: org.mybatis.spring.SqlSessionUtils - Creating a new SqlSession
DEBUG: org.mybatis.spring.SqlSessionUtils - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@3eb3106a]
DEBUG: org.mybatis.spring.transaction.SpringManagedTransaction - JDBC Connection [net.sf.log4jdbc.ConnectionSpy@5543132d] will be managed by Spring
2024-03-04 10:42:52,195  INFO SQL(simplebot)        :  SELECT I.No as I_No, I.Language as I_Language, I.Answer as I_Answer, I.Account as I_Account, I.TmpNo as I_TmpNo, A.No as A_NO, A.Answer as A_Answer, A.Account as A_Account, A.TmpNo as A_TmpNo, A.Language as A_Language,
				I.Main as Main, I.Name as Name, I.Entity as Entity, I.Next as Next, I.URL as URL, I.Description as Description, I.greetyn as greetyn, I.greet as greet, I.TmpNextIntent as TmpNextIntent
		FROM Intent I LEFT OUTER JOIN Answer A
		ON I.Answer = A.No
		WHERE I.Account=1 AND(I.Language=1 )
DEBUG: org.mybatis.spring.SqlSessionUtils - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@3eb3106a]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@3eb3106a]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@3eb3106a]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@3eb3106a]
DEBUG: first.common.logger.LoggerAspect - ServiceImpl  	:  first.builder.service.BuilderService.getIntentRelByAll()
DEBUG: first.common.logger.LoggerAspect - DAO  		:  first.builder.dao.BuilderDAO.getIntentRelByAll()
DEBUG: first.builder.dao.AbstractDAO - 	 QueryId  	:  builder.getIntentRelByAll
DEBUG: org.mybatis.spring.SqlSessionUtils - Creating a new SqlSession
DEBUG: org.mybatis.spring.SqlSessionUtils - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@21ad21bf]
DEBUG: org.mybatis.spring.transaction.SpringManagedTransaction - JDBC Connection [net.sf.log4jdbc.ConnectionSpy@260cadf5] will be managed by Spring
2024-03-04 10:42:52,214  INFO SQL(simplebot)        :  SELECT *
		From IntentRel
		WHERE SrcIntent = 1 or DestIntent = 1
DEBUG: org.mybatis.spring.SqlSessionUtils - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@21ad21bf]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@21ad21bf]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@21ad21bf]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@21ad21bf]
DEBUG: first.common.logger.LoggerAspect - ServiceImpl  	:  first.builder.service.BuilderService.getBertIntentByNo()
DEBUG: first.common.logger.LoggerAspect - DAO  		:  first.builder.dao.BuilderDAO.getBertIntentByNo()
DEBUG: first.builder.dao.AbstractDAO - 	 QueryId  	:  builder.getBertIntentByNo
DEBUG: org.mybatis.spring.SqlSessionUtils - Creating a new SqlSession
DEBUG: org.mybatis.spring.SqlSessionUtils - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@a9265d8]
DEBUG: org.mybatis.spring.transaction.SpringManagedTransaction - JDBC Connection [net.sf.log4jdbc.ConnectionSpy@753981c2] will be managed by Spring
2024-03-04 10:42:52,220  INFO SQL(simplebot)        :  select *
		from BertIntent
		where (BertItfId = 1 or BertItfId = 2) AND (Language=1 )
DEBUG: org.mybatis.spring.SqlSessionUtils - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@a9265d8]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@a9265d8]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@a9265d8]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@a9265d8]
DEBUG: first.common.logger.LoggerAspect - ServiceImpl  	:  first.builder.service.BuilderService.insertAnswerByAll()
DEBUG: first.common.logger.LoggerAspect - DAO  		:  first.builder.dao.BuilderDAO.insertAnswerByAll()
DEBUG: first.builder.dao.AbstractDAO - 	 QueryId  	:  builder.insertAnswerByAll
DEBUG: org.mybatis.spring.SqlSessionUtils - Creating a new SqlSession
DEBUG: org.mybatis.spring.SqlSessionUtils - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@45e00f0e] was not registered for synchronization because synchronization is not active
DEBUG: org.mybatis.spring.transaction.SpringManagedTransaction - JDBC Connection [net.sf.log4jdbc.ConnectionSpy@51abc492] will not be managed by Spring
2024-03-04 10:42:52,225  INFO SQL(simplebot)        :  insert into Answer (Answer, Account, Language,TmpNo)
		values ('안녕하세요',1636,1,NULL)
DEBUG: org.mybatis.spring.SqlSessionUtils - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@45e00f0e]
DEBUG: first.common.logger.LoggerAspect - ServiceImpl  	:  first.builder.service.BuilderService.insertIntentNewAll()
DEBUG: first.common.logger.LoggerAspect - DAO  		:  first.builder.dao.BuilderDAO.insertIntentNewAll()
DEBUG: first.builder.dao.AbstractDAO - 	 QueryId  	:  builder.insertIntentNewAll
DEBUG: org.mybatis.spring.SqlSessionUtils - Creating a new SqlSession
DEBUG: org.mybatis.spring.SqlSessionUtils - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@7be1ae8d] was not registered for synchronization because synchronization is not active
DEBUG: org.mybatis.spring.transaction.SpringManagedTransaction - JDBC Connection [net.sf.log4jdbc.ConnectionSpy@27ab7819] will not be managed by Spring
2024-03-04 10:42:52,230  INFO SQL(simplebot)        :  insert into Intent
		(Language, Main, Name, Answer, Next, URL, Description, Account, Entity, greetyn, TmpNo, TmpNextIntent, ResponseOrder)
		values(1, '처음으로', '처음으로', 1031641, NULL, NULL, NULL, 1636, 'N', '', NULL, NULL, '0,1,2')
DEBUG: org.mybatis.spring.SqlSessionUtils - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@7be1ae8d]
DEBUG: first.common.logger.LoggerAspect - ServiceImpl  	:  first.builder.service.BuilderService.insertBertIntentNew()
DEBUG: first.common.logger.LoggerAspect - DAO  		:  first.builder.dao.BuilderDAO.insertBertIntentNew()
DEBUG: first.builder.dao.AbstractDAO - 	 QueryId  	:  builder.insertBertIntentNew
DEBUG: org.mybatis.spring.SqlSessionUtils - Creating a new SqlSession
DEBUG: org.mybatis.spring.SqlSessionUtils - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@2c45be06] was not registered for synchronization because synchronization is not active
DEBUG: org.mybatis.spring.transaction.SpringManagedTransaction - JDBC Connection [net.sf.log4jdbc.ConnectionSpy@54b67c34] will not be managed by Spring
2024-03-04 10:42:52,235  INFO SQL(simplebot)        :  insert into BertIntent
		(Name, Language, BertItfId)
		values('base',1,3145)
DEBUG: org.mybatis.spring.SqlSessionUtils - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@2c45be06]
DEBUG: first.common.logger.LoggerAspect - ServiceImpl  	:  first.builder.service.BuilderService.selectReplaceDict()
DEBUG: first.common.logger.LoggerAspect - DAO  		:  first.builder.dao.BuilderDAO.selectReplaceDict()
DEBUG: first.builder.dao.AbstractDAO - 	 QueryId  	:  builder.selectReplaceDict
DEBUG: org.mybatis.spring.SqlSessionUtils - Creating a new SqlSession
DEBUG: org.mybatis.spring.SqlSessionUtils - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@69398193]
DEBUG: org.mybatis.spring.transaction.SpringManagedTransaction - JDBC Connection [net.sf.log4jdbc.ConnectionSpy@21288802] will be managed by Spring
2024-03-04 10:42:52,240  INFO SQL(simplebot)        :  SELECT *
		FROM ReplaceDict
		WHERE Host = 1
		ORDER BY Length(RTRIM(`Before`)) desc
DEBUG: org.mybatis.spring.SqlSessionUtils - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@69398193]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@69398193]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@69398193]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@69398193]
DEBUG: first.common.logger.LoggerAspect - Controller  	:  first.builder.controller.BuilderController.startSaveSetting()
DEBUG: first.common.logger.LoggerAspect - ServiceImpl  	:  first.builder.service.BuilderService.getStyleCSS()
DEBUG: first.common.logger.LoggerAspect - DAO  		:  first.builder.dao.BuilderDAO.getStyleCSS()
DEBUG: first.builder.dao.AbstractDAO - 	 QueryId  	:  builder.getStyleCSS
DEBUG: org.mybatis.spring.SqlSessionUtils - Creating a new SqlSession
DEBUG: org.mybatis.spring.SqlSessionUtils - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@273991ec]
DEBUG: org.mybatis.spring.transaction.SpringManagedTransaction - JDBC Connection [net.sf.log4jdbc.ConnectionSpy@25636a8b] will be managed by Spring
2024-03-04 10:42:52,328  INFO SQL(simplebot)        :  SELECT *
		FROM style_css SC
		WHERE host='1636'
DEBUG: org.mybatis.spring.SqlSessionUtils - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@273991ec]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@273991ec]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@273991ec]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@273991ec]
파일삭제 성공
파일삭제 성공
파일삭제 성공
DEBUG: first.common.logger.LoggerAspect - ServiceImpl  	:  first.builder.service.BuilderService.getStyleCSS()
DEBUG: first.common.logger.LoggerAspect - DAO  		:  first.builder.dao.BuilderDAO.getStyleCSS()
DEBUG: first.builder.dao.AbstractDAO - 	 QueryId  	:  builder.getStyleCSS
DEBUG: org.mybatis.spring.SqlSessionUtils - Creating a new SqlSession
DEBUG: org.mybatis.spring.SqlSessionUtils - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@3969d5b8]
DEBUG: org.mybatis.spring.transaction.SpringManagedTransaction - JDBC Connection [net.sf.log4jdbc.ConnectionSpy@3da1742f] will be managed by Spring
2024-03-04 10:42:52,364  INFO SQL(simplebot)        :  SELECT *
		FROM style_css SC
		WHERE host='1636'
DEBUG: org.mybatis.spring.SqlSessionUtils - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@3969d5b8]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@3969d5b8]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@3969d5b8]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@3969d5b8]
DEBUG: first.common.logger.LoggerAspect - ServiceImpl  	:  first.builder.service.BuilderService.insertStyleCSS()
DEBUG: first.common.logger.LoggerAspect - DAO  		:  first.builder.dao.BuilderDAO.insertStyleCSS()
DEBUG: first.builder.dao.AbstractDAO - 	 QueryId  	:  builder.insertStyleCSS
DEBUG: org.mybatis.spring.SqlSessionUtils - Creating a new SqlSession
DEBUG: org.mybatis.spring.SqlSessionUtils - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@452615c4] was not registered for synchronization because synchronization is not active
DEBUG: org.mybatis.spring.transaction.SpringManagedTransaction - JDBC Connection [net.sf.log4jdbc.ConnectionSpy@1fd99a80] will not be managed by Spring
2024-03-04 10:42:52,366  INFO SQL(simplebot)        :  insert into style_css
		(host, textColor, mainColor, logoSize, posX, posY)
		values('1636', '255,255,255', '84,84,84', '34', '-1', '-1')
DEBUG: org.mybatis.spring.SqlSessionUtils - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@452615c4]
DEBUG: first.common.logger.LoggerAspect - Controller  	:  first.builder.controller.BuilderController.saveSetting()
DEBUG: first.common.logger.LoggerAspect - ServiceImpl  	:  first.builder.service.BuilderService.updateAccount()
DEBUG: first.common.logger.LoggerAspect - DAO  		:  first.builder.dao.BuilderDAO.updateAccount()
DEBUG: first.builder.dao.AbstractDAO - 	 QueryId  	:  builder.updateAccountSetting
DEBUG: org.mybatis.spring.SqlSessionUtils - Creating a new SqlSession
DEBUG: org.mybatis.spring.SqlSessionUtils - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@31f1adfc] was not registered for synchronization because synchronization is not active
DEBUG: org.mybatis.spring.transaction.SpringManagedTransaction - JDBC Connection [net.sf.log4jdbc.ConnectionSpy@60f46279] will not be managed by Spring
2024-03-04 10:42:52,385  INFO SQL(simplebot)        :  update Account
		set Name = 'init' , Email = '', Host='init', Description=''
		WHERE No = '1636'
DEBUG: org.mybatis.spring.SqlSessionUtils - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@31f1adfc]
DEBUG: first.common.logger.LoggerAspect - Controller  	:  first.builder.controller.BuilderController.getChatList()
DEBUG: first.common.logger.LoggerAspect - ServiceImpl  	:  first.builder.service.BuilderService.getChatbotList()
DEBUG: first.common.logger.LoggerAspect - DAO  		:  first.builder.dao.BuilderDAO.getChatbotList()
DEBUG: first.builder.dao.AbstractDAO - 	 QueryId  	:  builder.getChatbotList
DEBUG: org.mybatis.spring.SqlSessionUtils - Creating a new SqlSession
DEBUG: org.mybatis.spring.SqlSessionUtils - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@d8978c2]
DEBUG: org.mybatis.spring.transaction.SpringManagedTransaction - JDBC Connection [net.sf.log4jdbc.ConnectionSpy@c4c2797] will be managed by Spring
2024-03-04 10:42:52,456  INFO SQL(simplebot)        :  SELECT  /* No, Name, Host, Language */
			*
		from Account WHERE 1=1
		AND No IN
		 
				 (  
					'1636'
				 ) 
			 

		 
		ORDER BY No
DEBUG: org.mybatis.spring.SqlSessionUtils - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@d8978c2]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@d8978c2]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@d8978c2]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@d8978c2]
DEBUG: first.common.logger.LoggerAspect - Controller  	:  first.builder.controller.BuilderController.builderBottomAnswer()
DEBUG: first.common.logger.LoggerAspect - Controller  	:  first.builder.controller.BuilderController.builderContentsAnswer()
DEBUG: first.common.logger.LoggerAspect - Controller  	:  first.builder.controller.BuilderController.getTask()
DEBUG: first.common.logger.LoggerAspect - ServiceImpl  	:  first.builder.service.BuilderService.getTaskCount()
DEBUG: first.common.logger.LoggerAspect - DAO  		:  first.builder.dao.BuilderDAO.getTaskCount()
DEBUG: first.builder.dao.AbstractDAO - 	 QueryId  	:  builder.getTaskCount
DEBUG: org.mybatis.spring.SqlSessionUtils - Creating a new SqlSession
DEBUG: org.mybatis.spring.SqlSessionUtils - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@3d2f89ed]
DEBUG: org.mybatis.spring.transaction.SpringManagedTransaction - JDBC Connection [net.sf.log4jdbc.ConnectionSpy@4faa58fe] will be managed by Spring
2024-03-04 10:42:52,567  INFO SQL(simplebot)        :  SELECT COUNT(*) FROM Intent WHERE Account=1636
 and Language=1
DEBUG: org.mybatis.spring.SqlSessionUtils - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@3d2f89ed]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@3d2f89ed]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@3d2f89ed]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@3d2f89ed]
DEBUG: first.common.logger.LoggerAspect - ServiceImpl  	:  first.builder.service.BuilderService.getAnswerList()
DEBUG: first.common.logger.LoggerAspect - DAO  		:  first.builder.dao.BuilderDAO.getAnswerList()
DEBUG: first.builder.dao.AbstractDAO - 	 QueryId  	:  builder.getAnswerList
DEBUG: org.mybatis.spring.SqlSessionUtils - Creating a new SqlSession
DEBUG: org.mybatis.spring.SqlSessionUtils - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@167aa9da]
DEBUG: org.mybatis.spring.transaction.SpringManagedTransaction - JDBC Connection [net.sf.log4jdbc.ConnectionSpy@7288775a] will be managed by Spring
2024-03-04 10:42:52,572  INFO SQL(simplebot)        :  SELECT I.No, I.Main, I.Name, A.answer, I.Account
		FROM Intent I LEFT OUTER JOIN Answer A
		ON I.Answer = A.No
		WHERE I.Account=1636
 and I.Language=1
		ORDER BY I.No
		OFFSET 0 ROWS
		FETCH NEXT 15 ROWS ONLY
DEBUG: org.mybatis.spring.SqlSessionUtils - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@167aa9da]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@167aa9da]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@167aa9da]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@167aa9da]
DEBUG: first.common.logger.LoggerAspect - ServiceImpl  	:  first.builder.service.BuilderService.getAllIntents()
DEBUG: first.common.logger.LoggerAspect - DAO  		:  first.builder.dao.BuilderDAO.getAllIntents()
DEBUG: first.builder.dao.AbstractDAO - 	 QueryId  	:  builder.getAllIntents
DEBUG: org.mybatis.spring.SqlSessionUtils - Creating a new SqlSession
DEBUG: org.mybatis.spring.SqlSessionUtils - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@678f83d0]
DEBUG: org.mybatis.spring.transaction.SpringManagedTransaction - JDBC Connection [net.sf.log4jdbc.ConnectionSpy@31489db9] will be managed by Spring
2024-03-04 10:42:52,576  INFO SQL(simplebot)        :  SELECT I.No, I.Main, I.Name,I.Next, I.URL, I.Language
		FROM Intent I
		WHERE I.Account=1636
		ORDER BY I.No
DEBUG: org.mybatis.spring.SqlSessionUtils - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@678f83d0]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@678f83d0]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@678f83d0]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@678f83d0]
DEBUG: first.common.logger.LoggerAspect - ServiceImpl  	:  first.builder.service.BuilderService.getAllBertIntents()
DEBUG: first.common.logger.LoggerAspect - DAO  		:  first.builder.dao.BuilderDAO.getAllBertIntents()
DEBUG: first.builder.dao.AbstractDAO - 	 QueryId  	:  builder.getAllBertIntents
DEBUG: org.mybatis.spring.SqlSessionUtils - Creating a new SqlSession
DEBUG: org.mybatis.spring.SqlSessionUtils - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@32e787d2]
DEBUG: org.mybatis.spring.transaction.SpringManagedTransaction - JDBC Connection [net.sf.log4jdbc.ConnectionSpy@74fab044] will be managed by Spring
2024-03-04 10:42:52,580  INFO SQL(simplebot)        :  SELECT B.No, B.Name, B.Language
		FROM BertIntent B LEFT OUTER JOIN BackendInfo BI
		ON B.BertItfId = BI.id
		WHERE BI.host=1636
		ORDER BY B.No
DEBUG: org.mybatis.spring.SqlSessionUtils - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@32e787d2]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@32e787d2]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@32e787d2]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@32e787d2]
DEBUG: first.common.logger.LoggerAspect - Controller  	:  first.builder.controller.BuilderController.getTask()
DEBUG: first.common.logger.LoggerAspect - ServiceImpl  	:  first.builder.service.BuilderService.getTaskCount()
DEBUG: first.common.logger.LoggerAspect - DAO  		:  first.builder.dao.BuilderDAO.getTaskCount()
DEBUG: first.builder.dao.AbstractDAO - 	 QueryId  	:  builder.getTaskCount
DEBUG: org.mybatis.spring.SqlSessionUtils - Creating a new SqlSession
DEBUG: org.mybatis.spring.SqlSessionUtils - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@783af334]
DEBUG: org.mybatis.spring.transaction.SpringManagedTransaction - JDBC Connection [net.sf.log4jdbc.ConnectionSpy@17667d7f] will be managed by Spring
2024-03-04 10:42:52,617  INFO SQL(simplebot)        :  SELECT COUNT(*) FROM Intent WHERE Account=1636
 and Language=1
DEBUG: org.mybatis.spring.SqlSessionUtils - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@783af334]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@783af334]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@783af334]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@783af334]
DEBUG: first.common.logger.LoggerAspect - ServiceImpl  	:  first.builder.service.BuilderService.getAnswerList()
DEBUG: first.common.logger.LoggerAspect - DAO  		:  first.builder.dao.BuilderDAO.getAnswerList()
DEBUG: first.builder.dao.AbstractDAO - 	 QueryId  	:  builder.getAnswerList
DEBUG: org.mybatis.spring.SqlSessionUtils - Creating a new SqlSession
DEBUG: org.mybatis.spring.SqlSessionUtils - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@18fb42c8]
DEBUG: org.mybatis.spring.transaction.SpringManagedTransaction - JDBC Connection [net.sf.log4jdbc.ConnectionSpy@7d30a8db] will be managed by Spring
2024-03-04 10:42:52,621  INFO SQL(simplebot)        :  SELECT I.No, I.Main, I.Name, A.answer, I.Account
		FROM Intent I LEFT OUTER JOIN Answer A
		ON I.Answer = A.No
		WHERE I.Account=1636
 and I.Language=1
		ORDER BY I.No
		OFFSET 0 ROWS
		FETCH NEXT 15 ROWS ONLY
DEBUG: org.mybatis.spring.SqlSessionUtils - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@18fb42c8]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@18fb42c8]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@18fb42c8]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@18fb42c8]
DEBUG: first.common.logger.LoggerAspect - ServiceImpl  	:  first.builder.service.BuilderService.getAllIntents()
DEBUG: first.common.logger.LoggerAspect - DAO  		:  first.builder.dao.BuilderDAO.getAllIntents()
DEBUG: first.builder.dao.AbstractDAO - 	 QueryId  	:  builder.getAllIntents
DEBUG: org.mybatis.spring.SqlSessionUtils - Creating a new SqlSession
DEBUG: org.mybatis.spring.SqlSessionUtils - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@10afed2c]
DEBUG: org.mybatis.spring.transaction.SpringManagedTransaction - JDBC Connection [net.sf.log4jdbc.ConnectionSpy@689b93] will be managed by Spring
2024-03-04 10:42:52,626  INFO SQL(simplebot)        :  SELECT I.No, I.Main, I.Name,I.Next, I.URL, I.Language
		FROM Intent I
		WHERE I.Account=1636
		ORDER BY I.No
DEBUG: org.mybatis.spring.SqlSessionUtils - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@10afed2c]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@10afed2c]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@10afed2c]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@10afed2c]
DEBUG: first.common.logger.LoggerAspect - ServiceImpl  	:  first.builder.service.BuilderService.getAllBertIntents()
DEBUG: first.common.logger.LoggerAspect - DAO  		:  first.builder.dao.BuilderDAO.getAllBertIntents()
DEBUG: first.builder.dao.AbstractDAO - 	 QueryId  	:  builder.getAllBertIntents
DEBUG: org.mybatis.spring.SqlSessionUtils - Creating a new SqlSession
DEBUG: org.mybatis.spring.SqlSessionUtils - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@10018bf9]
DEBUG: org.mybatis.spring.transaction.SpringManagedTransaction - JDBC Connection [net.sf.log4jdbc.ConnectionSpy@7a65e449] will be managed by Spring
2024-03-04 10:42:52,630  INFO SQL(simplebot)        :  SELECT B.No, B.Name, B.Language
		FROM BertIntent B LEFT OUTER JOIN BackendInfo BI
		ON B.BertItfId = BI.id
		WHERE BI.host=1636
		ORDER BY B.No
DEBUG: org.mybatis.spring.SqlSessionUtils - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@10018bf9]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@10018bf9]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@10018bf9]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@10018bf9]
DEBUG: first.common.logger.LoggerAspect - Controller  	:  first.builder.controller.BuilderController.getTestPage()
DEBUG: first.common.logger.LoggerAspect - ServiceImpl  	:  first.builder.service.BuilderService.getHostByAccount()
DEBUG: first.common.logger.LoggerAspect - DAO  		:  first.builder.dao.BuilderDAO.getHostByAccount()
DEBUG: first.builder.dao.AbstractDAO - 	 QueryId  	:  builder.getHostByAccount
DEBUG: org.mybatis.spring.SqlSessionUtils - Creating a new SqlSession
DEBUG: org.mybatis.spring.SqlSessionUtils - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@34a6396b]
DEBUG: org.mybatis.spring.transaction.SpringManagedTransaction - JDBC Connection [net.sf.log4jdbc.ConnectionSpy@5a3e390e] will be managed by Spring
2024-03-04 10:42:56,091  INFO SQL(simplebot)        :  SELECT Host
		From Account
		Where No=1636
DEBUG: org.mybatis.spring.SqlSessionUtils - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@34a6396b]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@34a6396b]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@34a6396b]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@34a6396b]
04-Mar-2024 11:13:56.077 INFO [ContainerBackgroundProcessor[StandardEngine[Catalina]]] org.apache.catalina.startup.HostConfig.undeploy Undeploying context [/sds-builder]
04-Mar-2024 11:13:56.098 WARNING [ContainerBackgroundProcessor[StandardEngine[Catalina]]] org.apache.catalina.loader.WebappClassLoaderBase.clearReferencesJdbc The web application [sds-builder] registered the JDBC driver [com.mysql.jdbc.Driver] but failed to unregister it when the web application was stopped. To prevent a memory leak, the JDBC Driver has been forcibly unregistered.
04-Mar-2024 11:13:56.098 WARNING [ContainerBackgroundProcessor[StandardEngine[Catalina]]] org.apache.catalina.loader.WebappClassLoaderBase.clearReferencesJdbc The web application [sds-builder] registered the JDBC driver [net.sf.log4jdbc.DriverSpy] but failed to unregister it when the web application was stopped. To prevent a memory leak, the JDBC Driver has been forcibly unregistered.
04-Mar-2024 11:13:56.099 WARNING [ContainerBackgroundProcessor[StandardEngine[Catalina]]] org.apache.catalina.loader.WebappClassLoaderBase.clearReferencesJdbc The web application [sds-builder] registered the JDBC driver [com.microsoft.sqlserver.jdbc.SQLServerDriver] but failed to unregister it when the web application was stopped. To prevent a memory leak, the JDBC Driver has been forcibly unregistered.
04-Mar-2024 11:13:56.099 WARNING [ContainerBackgroundProcessor[StandardEngine[Catalina]]] org.apache.catalina.loader.WebappClassLoaderBase.clearReferencesThreads The web application [sds-builder] appears to have started a thread named [mysql-cj-abandoned-connection-cleanup] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 java.lang.Object.wait(Native Method)
 java.lang.ref.ReferenceQueue.remove(ReferenceQueue.java:144)
 com.mysql.jdbc.AbandonedConnectionCleanupThread.run(AbandonedConnectionCleanupThread.java:80)
 java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
 java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
 java.lang.Thread.run(Thread.java:750)
04-Mar-2024 11:13:56.166 INFO [localhost-startStop-2] org.apache.catalina.startup.HostConfig.deployWAR Deploying web application archive [/home/minds/maum/sds-builder/apache-tomcat-8.5.99/webapps/sds-builder.war]
04-Mar-2024 11:13:57.304 INFO [mysql-cj-abandoned-connection-cleanup] org.apache.catalina.loader.WebappClassLoaderBase.checkStateForResourceLoading Illegal access: this web application instance has been stopped already. Could not load []. The following stack trace is thrown for debugging purposes as well as to attempt to terminate the thread which caused the illegal access.
	java.lang.IllegalStateException: Illegal access: this web application instance has been stopped already. Could not load []. The following stack trace is thrown for debugging purposes as well as to attempt to terminate the thread which caused the illegal access.
		at org.apache.catalina.loader.WebappClassLoaderBase.checkStateForResourceLoading(WebappClassLoaderBase.java:1358)
		at org.apache.catalina.loader.WebappClassLoaderBase.getResource(WebappClassLoaderBase.java:990)
		at com.mysql.jdbc.AbandonedConnectionCleanupThread.checkThreadContextClassLoader(AbandonedConnectionCleanupThread.java:112)
		at com.mysql.jdbc.AbandonedConnectionCleanupThread.run(AbandonedConnectionCleanupThread.java:79)
		at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
		at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
		at java.lang.Thread.run(Thread.java:750)
04-Mar-2024 11:13:57.306 INFO [mysql-cj-abandoned-connection-cleanup] org.apache.catalina.loader.WebappClassLoaderBase.checkStateForResourceLoading Illegal access: this web application instance has been stopped already. Could not load []. The following stack trace is thrown for debugging purposes as well as to attempt to terminate the thread which caused the illegal access.
	java.lang.IllegalStateException: Illegal access: this web application instance has been stopped already. Could not load []. The following stack trace is thrown for debugging purposes as well as to attempt to terminate the thread which caused the illegal access.
		at org.apache.catalina.loader.WebappClassLoaderBase.checkStateForResourceLoading(WebappClassLoaderBase.java:1358)
		at org.apache.catalina.loader.WebappClassLoaderBase.getResource(WebappClassLoaderBase.java:990)
		at com.mysql.jdbc.AbandonedConnectionCleanupThread.checkThreadContextClassLoader(AbandonedConnectionCleanupThread.java:112)
		at com.mysql.jdbc.AbandonedConnectionCleanupThread.run(AbandonedConnectionCleanupThread.java:79)
		at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
		at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
		at java.lang.Thread.run(Thread.java:750)
04-Mar-2024 11:13:57.306 INFO [mysql-cj-abandoned-connection-cleanup] org.apache.catalina.loader.WebappClassLoaderBase.checkStateForResourceLoading Illegal access: this web application instance has been stopped already. Could not load []. The following stack trace is thrown for debugging purposes as well as to attempt to terminate the thread which caused the illegal access.
	java.lang.IllegalStateException: Illegal access: this web application instance has been stopped already. Could not load []. The following stack trace is thrown for debugging purposes as well as to attempt to terminate the thread which caused the illegal access.
		at org.apache.catalina.loader.WebappClassLoaderBase.checkStateForResourceLoading(WebappClassLoaderBase.java:1358)
		at org.apache.catalina.loader.WebappClassLoaderBase.getResource(WebappClassLoaderBase.java:990)
		at com.mysql.jdbc.AbandonedConnectionCleanupThread.checkThreadContextClassLoader(AbandonedConnectionCleanupThread.java:112)
		at com.mysql.jdbc.AbandonedConnectionCleanupThread.run(AbandonedConnectionCleanupThread.java:79)
		at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
		at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
		at java.lang.Thread.run(Thread.java:750)
04-Mar-2024 11:13:58.594 INFO [localhost-startStop-2] org.apache.jasper.servlet.TldScanner.scanJars At least one JAR was scanned for TLDs yet contained no TLDs. Enable debug logging for this logger for a complete list of JARs that were scanned but no TLDs were found in them. Skipping unneeded JARs during scanning can improve startup time and JSP compilation time.
DEBUG: org.mybatis.spring.SqlSessionFactoryBean - Property 'configuration' or 'configLocation' not specified, using default MyBatis Configuration
DEBUG: org.mybatis.spring.SqlSessionFactoryBean - Parsed mapper file: 'file [/home/minds/maum/sds-builder/apache-tomcat-8.5.99/webapps/sds-builder/WEB-INF/classes/mapper/maria/Chatbot/Builder_SQL.xml]'
DEBUG: org.mybatis.spring.SqlSessionFactoryBean - Parsed mapper file: 'file [/home/minds/maum/sds-builder/apache-tomcat-8.5.99/webapps/sds-builder/WEB-INF/classes/mapper/maria/Chatbot/MaumSDS_SQL.xml]'
DEBUG: org.mybatis.spring.SqlSessionFactoryBean - Property 'configuration' or 'configLocation' not specified, using default MyBatis Configuration
DEBUG: org.mybatis.spring.SqlSessionFactoryBean - Parsed mapper file: 'file [/home/minds/maum/sds-builder/apache-tomcat-8.5.99/webapps/sds-builder/WEB-INF/classes/mapper/maria/HAPPYCALL4/NQA_SQL.xml]'
DEBUG: org.mybatis.spring.SqlSessionFactoryBean - Parsed mapper file: 'file [/home/minds/maum/sds-builder/apache-tomcat-8.5.99/webapps/sds-builder/WEB-INF/classes/mapper/maria/HAPPYCALL4/SimpleBot_SQL.xml]'
SimpleBot Execution Environment : prod
SimpleBot BertIntent itfIP : 0
SimpleBot BertIntent nerIP : 0
SimpleBot BL IP : 125.132.250.244
SimpleBot CM IP : 121.133.247.250
SimpleBot M2U rest address : http://localhost:9990
SimpleBot Style Resources Path : /home/minds/maum/sds-builder/imgUpload
Default Resources Make : chatbot.css
Default Resources Make : chatbot_custom.css
Default Resources Make : chatbot_floating.css
Default Resources Make : IconImg
Default Resources Make : logoImg
Default Resources Make : default
Default Resources Make : mindslab
Default Resources Make : redtie
Default Resource constructed.
DEBUG: first.common.logger.LoggerAspect - ServiceImpl  	:  first.builder.service.BuilderService.getNqaStatusChatbotList()
DEBUG: first.common.logger.LoggerAspect - DAO  		:  first.builder.dao.BuilderDAO.getNqaStatusChatbotList()
DEBUG: first.builder.dao.AbstractDAO - 	 QueryId  	:  builder.getNqaStatusChatbotList
DEBUG: org.mybatis.spring.SqlSessionUtils - Creating a new SqlSession
DEBUG: org.mybatis.spring.SqlSessionUtils - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@4bc4e7e4]
DEBUG: org.mybatis.spring.transaction.SpringManagedTransaction - JDBC Connection [net.sf.log4jdbc.ConnectionSpy@4e7faaae] will be managed by Spring
2024-03-04 11:14:00,302  INFO SQL(simplebot)        :  SELECT No as host, Name, 'preparation' as nqaUploadStatus
 from Account
		ORDER BY No
DEBUG: org.mybatis.spring.SqlSessionUtils - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@4bc4e7e4]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@4bc4e7e4]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@4bc4e7e4]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@4bc4e7e4]
04-Mar-2024 11:14:01.275 INFO [localhost-startStop-2] org.apache.catalina.startup.HostConfig.deployWAR Deployment of web application archive [/home/minds/maum/sds-builder/apache-tomcat-8.5.99/webapps/sds-builder.war] has finished in [5,109] ms
DEBUG: first.common.logger.LoggerAspect - Controller  	:  first.builder.controller.BuilderController.chatbotBuilderCommon()
DEBUG: first.common.logger.LoggerAspect - Controller  	:  first.builder.controller.BuilderController.getChatList()
DEBUG: first.common.logger.LoggerAspect - ServiceImpl  	:  first.builder.service.BuilderService.getChatbotList()
DEBUG: first.common.logger.LoggerAspect - DAO  		:  first.builder.dao.BuilderDAO.getChatbotList()
DEBUG: first.builder.dao.AbstractDAO - 	 QueryId  	:  builder.getChatbotList
DEBUG: org.mybatis.spring.SqlSessionUtils - Creating a new SqlSession
DEBUG: org.mybatis.spring.SqlSessionUtils - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@4d34ec0]
DEBUG: org.mybatis.spring.transaction.SpringManagedTransaction - JDBC Connection [net.sf.log4jdbc.ConnectionSpy@731f143c] will be managed by Spring
2024-03-04 11:15:47,601  INFO SQL(simplebot)        :  SELECT  /* No, Name, Host, Language */
			*
		from Account WHERE 1=1
		AND No IN
		 
				 (  
					'1636'
				 ) 
			 

		 
		ORDER BY No
DEBUG: org.mybatis.spring.SqlSessionUtils - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@4d34ec0]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@4d34ec0]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@4d34ec0]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@4d34ec0]
DEBUG: first.common.logger.LoggerAspect - Controller  	:  first.builder.controller.BuilderController.builderBottomAnswer()
DEBUG: first.common.logger.LoggerAspect - Controller  	:  first.builder.controller.BuilderController.builderContentsAnswer()
DEBUG: first.common.logger.LoggerAspect - Controller  	:  first.builder.controller.BuilderController.getTask()
DEBUG: first.common.logger.LoggerAspect - ServiceImpl  	:  first.builder.service.BuilderService.getTaskCount()
DEBUG: first.common.logger.LoggerAspect - DAO  		:  first.builder.dao.BuilderDAO.getTaskCount()
DEBUG: first.builder.dao.AbstractDAO - 	 QueryId  	:  builder.getTaskCount
DEBUG: org.mybatis.spring.SqlSessionUtils - Creating a new SqlSession
DEBUG: org.mybatis.spring.SqlSessionUtils - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@469d39db]
DEBUG: org.mybatis.spring.transaction.SpringManagedTransaction - JDBC Connection [net.sf.log4jdbc.ConnectionSpy@574f8857] will be managed by Spring
2024-03-04 11:15:47,816  INFO SQL(simplebot)        :  SELECT COUNT(*) FROM Intent WHERE Account=1636
 and Language=1
DEBUG: org.mybatis.spring.SqlSessionUtils - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@469d39db]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@469d39db]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@469d39db]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@469d39db]
DEBUG: first.common.logger.LoggerAspect - ServiceImpl  	:  first.builder.service.BuilderService.getAnswerList()
DEBUG: first.common.logger.LoggerAspect - DAO  		:  first.builder.dao.BuilderDAO.getAnswerList()
DEBUG: first.builder.dao.AbstractDAO - 	 QueryId  	:  builder.getAnswerList
DEBUG: org.mybatis.spring.SqlSessionUtils - Creating a new SqlSession
DEBUG: org.mybatis.spring.SqlSessionUtils - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@dae4beb]
DEBUG: org.mybatis.spring.transaction.SpringManagedTransaction - JDBC Connection [net.sf.log4jdbc.ConnectionSpy@6516459b] will be managed by Spring
2024-03-04 11:15:47,823  INFO SQL(simplebot)        :  SELECT I.No, I.Main, I.Name, A.answer, I.Account
		FROM Intent I LEFT OUTER JOIN Answer A
		ON I.Answer = A.No
		WHERE I.Account=1636
 and I.Language=1
		ORDER BY I.No
		OFFSET 0 ROWS
		FETCH NEXT 15 ROWS ONLY
DEBUG: org.mybatis.spring.SqlSessionUtils - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@dae4beb]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@dae4beb]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@dae4beb]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@dae4beb]
DEBUG: first.common.logger.LoggerAspect - ServiceImpl  	:  first.builder.service.BuilderService.getAllIntents()
DEBUG: first.common.logger.LoggerAspect - DAO  		:  first.builder.dao.BuilderDAO.getAllIntents()
DEBUG: first.builder.dao.AbstractDAO - 	 QueryId  	:  builder.getAllIntents
DEBUG: org.mybatis.spring.SqlSessionUtils - Creating a new SqlSession
DEBUG: org.mybatis.spring.SqlSessionUtils - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@173deb47]
DEBUG: org.mybatis.spring.transaction.SpringManagedTransaction - JDBC Connection [net.sf.log4jdbc.ConnectionSpy@6a32dd0] will be managed by Spring
2024-03-04 11:15:47,834  INFO SQL(simplebot)        :  SELECT I.No, I.Main, I.Name,I.Next, I.URL, I.Language
		FROM Intent I
		WHERE I.Account=1636
		ORDER BY I.No
DEBUG: org.mybatis.spring.SqlSessionUtils - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@173deb47]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@173deb47]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@173deb47]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@173deb47]
DEBUG: first.common.logger.LoggerAspect - ServiceImpl  	:  first.builder.service.BuilderService.getAllBertIntents()
DEBUG: first.common.logger.LoggerAspect - DAO  		:  first.builder.dao.BuilderDAO.getAllBertIntents()
DEBUG: first.builder.dao.AbstractDAO - 	 QueryId  	:  builder.getAllBertIntents
DEBUG: org.mybatis.spring.SqlSessionUtils - Creating a new SqlSession
DEBUG: org.mybatis.spring.SqlSessionUtils - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@6b8d985e]
DEBUG: org.mybatis.spring.transaction.SpringManagedTransaction - JDBC Connection [net.sf.log4jdbc.ConnectionSpy@1dcfde4e] will be managed by Spring
2024-03-04 11:15:47,840  INFO SQL(simplebot)        :  SELECT B.No, B.Name, B.Language
		FROM BertIntent B LEFT OUTER JOIN BackendInfo BI
		ON B.BertItfId = BI.id
		WHERE BI.host=1636
		ORDER BY B.No
DEBUG: org.mybatis.spring.SqlSessionUtils - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@6b8d985e]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@6b8d985e]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@6b8d985e]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@6b8d985e]
DEBUG: first.common.logger.LoggerAspect - Controller  	:  first.builder.controller.BuilderController.getTask()
DEBUG: first.common.logger.LoggerAspect - ServiceImpl  	:  first.builder.service.BuilderService.getTaskCount()
DEBUG: first.common.logger.LoggerAspect - DAO  		:  first.builder.dao.BuilderDAO.getTaskCount()
DEBUG: first.builder.dao.AbstractDAO - 	 QueryId  	:  builder.getTaskCount
DEBUG: org.mybatis.spring.SqlSessionUtils - Creating a new SqlSession
DEBUG: org.mybatis.spring.SqlSessionUtils - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@88a72ef]
DEBUG: org.mybatis.spring.transaction.SpringManagedTransaction - JDBC Connection [net.sf.log4jdbc.ConnectionSpy@2d69e894] will be managed by Spring
2024-03-04 11:15:47,855  INFO SQL(simplebot)        :  SELECT COUNT(*) FROM Intent WHERE Account=1636
 and Language=1
DEBUG: org.mybatis.spring.SqlSessionUtils - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@88a72ef]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@88a72ef]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@88a72ef]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@88a72ef]
DEBUG: first.common.logger.LoggerAspect - ServiceImpl  	:  first.builder.service.BuilderService.getAnswerList()
DEBUG: first.common.logger.LoggerAspect - DAO  		:  first.builder.dao.BuilderDAO.getAnswerList()
DEBUG: first.builder.dao.AbstractDAO - 	 QueryId  	:  builder.getAnswerList
DEBUG: org.mybatis.spring.SqlSessionUtils - Creating a new SqlSession
DEBUG: org.mybatis.spring.SqlSessionUtils - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@aad3d45]
DEBUG: org.mybatis.spring.transaction.SpringManagedTransaction - JDBC Connection [net.sf.log4jdbc.ConnectionSpy@412d87bc] will be managed by Spring
2024-03-04 11:15:47,860  INFO SQL(simplebot)        :  SELECT I.No, I.Main, I.Name, A.answer, I.Account
		FROM Intent I LEFT OUTER JOIN Answer A
		ON I.Answer = A.No
		WHERE I.Account=1636
 and I.Language=1
		ORDER BY I.No
		OFFSET 0 ROWS
		FETCH NEXT 15 ROWS ONLY
DEBUG: org.mybatis.spring.SqlSessionUtils - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@aad3d45]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@aad3d45]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@aad3d45]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@aad3d45]
DEBUG: first.common.logger.LoggerAspect - ServiceImpl  	:  first.builder.service.BuilderService.getAllIntents()
DEBUG: first.common.logger.LoggerAspect - DAO  		:  first.builder.dao.BuilderDAO.getAllIntents()
DEBUG: first.builder.dao.AbstractDAO - 	 QueryId  	:  builder.getAllIntents
DEBUG: org.mybatis.spring.SqlSessionUtils - Creating a new SqlSession
DEBUG: org.mybatis.spring.SqlSessionUtils - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@5249aad1]
DEBUG: org.mybatis.spring.transaction.SpringManagedTransaction - JDBC Connection [net.sf.log4jdbc.ConnectionSpy@6cfabfe1] will be managed by Spring
2024-03-04 11:15:47,865  INFO SQL(simplebot)        :  SELECT I.No, I.Main, I.Name,I.Next, I.URL, I.Language
		FROM Intent I
		WHERE I.Account=1636
		ORDER BY I.No
DEBUG: org.mybatis.spring.SqlSessionUtils - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@5249aad1]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@5249aad1]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@5249aad1]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@5249aad1]
DEBUG: first.common.logger.LoggerAspect - ServiceImpl  	:  first.builder.service.BuilderService.getAllBertIntents()
DEBUG: first.common.logger.LoggerAspect - DAO  		:  first.builder.dao.BuilderDAO.getAllBertIntents()
DEBUG: first.builder.dao.AbstractDAO - 	 QueryId  	:  builder.getAllBertIntents
DEBUG: org.mybatis.spring.SqlSessionUtils - Creating a new SqlSession
DEBUG: org.mybatis.spring.SqlSessionUtils - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@6bf1a476]
DEBUG: org.mybatis.spring.transaction.SpringManagedTransaction - JDBC Connection [net.sf.log4jdbc.ConnectionSpy@6c0fc060] will be managed by Spring
2024-03-04 11:15:47,870  INFO SQL(simplebot)        :  SELECT B.No, B.Name, B.Language
		FROM BertIntent B LEFT OUTER JOIN BackendInfo BI
		ON B.BertItfId = BI.id
		WHERE BI.host=1636
		ORDER BY B.No
DEBUG: org.mybatis.spring.SqlSessionUtils - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@6bf1a476]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@6bf1a476]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@6bf1a476]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@6bf1a476]
DEBUG: first.common.logger.LoggerAspect - Controller  	:  first.builder.controller.BuilderController.getTestPage()
DEBUG: first.common.logger.LoggerAspect - ServiceImpl  	:  first.builder.service.BuilderService.getHostByAccount()
DEBUG: first.common.logger.LoggerAspect - DAO  		:  first.builder.dao.BuilderDAO.getHostByAccount()
DEBUG: first.builder.dao.AbstractDAO - 	 QueryId  	:  builder.getHostByAccount
DEBUG: org.mybatis.spring.SqlSessionUtils - Creating a new SqlSession
DEBUG: org.mybatis.spring.SqlSessionUtils - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@4e136d80]
DEBUG: org.mybatis.spring.transaction.SpringManagedTransaction - JDBC Connection [net.sf.log4jdbc.ConnectionSpy@7196cc67] will be managed by Spring
2024-03-04 11:15:50,059  INFO SQL(simplebot)        :  SELECT Host
		From Account
		Where No=1636
DEBUG: org.mybatis.spring.SqlSessionUtils - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@4e136d80]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@4e136d80]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@4e136d80]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@4e136d80]
DEBUG: first.common.logger.LoggerAspect - Controller  	:  first.builder.controller.BuilderController.chatbotBuilderCommon()
DEBUG: first.common.logger.LoggerAspect - Controller  	:  first.builder.controller.BuilderController.getChatList()
DEBUG: first.common.logger.LoggerAspect - ServiceImpl  	:  first.builder.service.BuilderService.getChatbotList()
DEBUG: first.common.logger.LoggerAspect - DAO  		:  first.builder.dao.BuilderDAO.getChatbotList()
DEBUG: first.builder.dao.AbstractDAO - 	 QueryId  	:  builder.getChatbotList
DEBUG: org.mybatis.spring.SqlSessionUtils - Creating a new SqlSession
DEBUG: org.mybatis.spring.SqlSessionUtils - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@64b7c285]
DEBUG: org.mybatis.spring.transaction.SpringManagedTransaction - JDBC Connection [net.sf.log4jdbc.ConnectionSpy@1fb56dc5] will be managed by Spring
2024-03-04 11:26:45,426  INFO SQL(simplebot)        :  SELECT  /* No, Name, Host, Language */
			*
		from Account WHERE 1=1
		AND No IN
		 
				 (  
					'1636'
				 ) 
			 

		 
		ORDER BY No
DEBUG: org.mybatis.spring.SqlSessionUtils - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@64b7c285]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@64b7c285]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@64b7c285]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@64b7c285]
DEBUG: first.common.logger.LoggerAspect - Controller  	:  first.builder.controller.BuilderController.builderContentsAnswer()
DEBUG: first.common.logger.LoggerAspect - Controller  	:  first.builder.controller.BuilderController.builderBottomAnswer()
DEBUG: first.common.logger.LoggerAspect - Controller  	:  first.builder.controller.BuilderController.getTask()
DEBUG: first.common.logger.LoggerAspect - ServiceImpl  	:  first.builder.service.BuilderService.getTaskCount()
DEBUG: first.common.logger.LoggerAspect - DAO  		:  first.builder.dao.BuilderDAO.getTaskCount()
DEBUG: first.builder.dao.AbstractDAO - 	 QueryId  	:  builder.getTaskCount
DEBUG: org.mybatis.spring.SqlSessionUtils - Creating a new SqlSession
DEBUG: org.mybatis.spring.SqlSessionUtils - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@37d7105]
DEBUG: org.mybatis.spring.transaction.SpringManagedTransaction - JDBC Connection [net.sf.log4jdbc.ConnectionSpy@7a177111] will be managed by Spring
2024-03-04 11:26:45,595  INFO SQL(simplebot)        :  SELECT COUNT(*) FROM Intent WHERE Account=1636
 and Language=1
DEBUG: org.mybatis.spring.SqlSessionUtils - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@37d7105]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@37d7105]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@37d7105]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@37d7105]
DEBUG: first.common.logger.LoggerAspect - ServiceImpl  	:  first.builder.service.BuilderService.getAnswerList()
DEBUG: first.common.logger.LoggerAspect - DAO  		:  first.builder.dao.BuilderDAO.getAnswerList()
DEBUG: first.builder.dao.AbstractDAO - 	 QueryId  	:  builder.getAnswerList
DEBUG: org.mybatis.spring.SqlSessionUtils - Creating a new SqlSession
DEBUG: org.mybatis.spring.SqlSessionUtils - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@14262f83]
DEBUG: org.mybatis.spring.transaction.SpringManagedTransaction - JDBC Connection [net.sf.log4jdbc.ConnectionSpy@4fab33f9] will be managed by Spring
2024-03-04 11:26:45,599  INFO SQL(simplebot)        :  SELECT I.No, I.Main, I.Name, A.answer, I.Account
		FROM Intent I LEFT OUTER JOIN Answer A
		ON I.Answer = A.No
		WHERE I.Account=1636
 and I.Language=1
		ORDER BY I.No
		OFFSET 0 ROWS
		FETCH NEXT 15 ROWS ONLY
DEBUG: org.mybatis.spring.SqlSessionUtils - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@14262f83]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@14262f83]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@14262f83]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@14262f83]
DEBUG: first.common.logger.LoggerAspect - ServiceImpl  	:  first.builder.service.BuilderService.getAllIntents()
DEBUG: first.common.logger.LoggerAspect - DAO  		:  first.builder.dao.BuilderDAO.getAllIntents()
DEBUG: first.builder.dao.AbstractDAO - 	 QueryId  	:  builder.getAllIntents
DEBUG: org.mybatis.spring.SqlSessionUtils - Creating a new SqlSession
DEBUG: org.mybatis.spring.SqlSessionUtils - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@7e539389]
DEBUG: org.mybatis.spring.transaction.SpringManagedTransaction - JDBC Connection [net.sf.log4jdbc.ConnectionSpy@6ca52765] will be managed by Spring
2024-03-04 11:26:45,603  INFO SQL(simplebot)        :  SELECT I.No, I.Main, I.Name,I.Next, I.URL, I.Language
		FROM Intent I
		WHERE I.Account=1636
		ORDER BY I.No
DEBUG: org.mybatis.spring.SqlSessionUtils - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@7e539389]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@7e539389]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@7e539389]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@7e539389]
DEBUG: first.common.logger.LoggerAspect - ServiceImpl  	:  first.builder.service.BuilderService.getAllBertIntents()
DEBUG: first.common.logger.LoggerAspect - DAO  		:  first.builder.dao.BuilderDAO.getAllBertIntents()
DEBUG: first.builder.dao.AbstractDAO - 	 QueryId  	:  builder.getAllBertIntents
DEBUG: org.mybatis.spring.SqlSessionUtils - Creating a new SqlSession
DEBUG: org.mybatis.spring.SqlSessionUtils - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@ad79e5b]
DEBUG: org.mybatis.spring.transaction.SpringManagedTransaction - JDBC Connection [net.sf.log4jdbc.ConnectionSpy@39e6420a] will be managed by Spring
2024-03-04 11:26:45,608  INFO SQL(simplebot)        :  SELECT B.No, B.Name, B.Language
		FROM BertIntent B LEFT OUTER JOIN BackendInfo BI
		ON B.BertItfId = BI.id
		WHERE BI.host=1636
		ORDER BY B.No
DEBUG: org.mybatis.spring.SqlSessionUtils - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@ad79e5b]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@ad79e5b]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@ad79e5b]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@ad79e5b]
DEBUG: first.common.logger.LoggerAspect - Controller  	:  first.builder.controller.BuilderController.getTask()
DEBUG: first.common.logger.LoggerAspect - ServiceImpl  	:  first.builder.service.BuilderService.getTaskCount()
DEBUG: first.common.logger.LoggerAspect - DAO  		:  first.builder.dao.BuilderDAO.getTaskCount()
DEBUG: first.builder.dao.AbstractDAO - 	 QueryId  	:  builder.getTaskCount
DEBUG: org.mybatis.spring.SqlSessionUtils - Creating a new SqlSession
DEBUG: org.mybatis.spring.SqlSessionUtils - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@35693be6]
DEBUG: org.mybatis.spring.transaction.SpringManagedTransaction - JDBC Connection [net.sf.log4jdbc.ConnectionSpy@6fba23e5] will be managed by Spring
2024-03-04 11:26:45,696  INFO SQL(simplebot)        :  SELECT COUNT(*) FROM Intent WHERE Account=1636
 and Language=1
DEBUG: org.mybatis.spring.SqlSessionUtils - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@35693be6]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@35693be6]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@35693be6]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@35693be6]
DEBUG: first.common.logger.LoggerAspect - ServiceImpl  	:  first.builder.service.BuilderService.getAnswerList()
DEBUG: first.common.logger.LoggerAspect - DAO  		:  first.builder.dao.BuilderDAO.getAnswerList()
DEBUG: first.builder.dao.AbstractDAO - 	 QueryId  	:  builder.getAnswerList
DEBUG: org.mybatis.spring.SqlSessionUtils - Creating a new SqlSession
DEBUG: org.mybatis.spring.SqlSessionUtils - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@787f2cee]
DEBUG: org.mybatis.spring.transaction.SpringManagedTransaction - JDBC Connection [net.sf.log4jdbc.ConnectionSpy@5814d8d3] will be managed by Spring
2024-03-04 11:26:45,702  INFO SQL(simplebot)        :  SELECT I.No, I.Main, I.Name, A.answer, I.Account
		FROM Intent I LEFT OUTER JOIN Answer A
		ON I.Answer = A.No
		WHERE I.Account=1636
 and I.Language=1
		ORDER BY I.No
		OFFSET 0 ROWS
		FETCH NEXT 15 ROWS ONLY
DEBUG: org.mybatis.spring.SqlSessionUtils - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@787f2cee]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@787f2cee]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@787f2cee]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@787f2cee]
DEBUG: first.common.logger.LoggerAspect - ServiceImpl  	:  first.builder.service.BuilderService.getAllIntents()
DEBUG: first.common.logger.LoggerAspect - DAO  		:  first.builder.dao.BuilderDAO.getAllIntents()
DEBUG: first.builder.dao.AbstractDAO - 	 QueryId  	:  builder.getAllIntents
DEBUG: org.mybatis.spring.SqlSessionUtils - Creating a new SqlSession
DEBUG: org.mybatis.spring.SqlSessionUtils - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@270d469e]
DEBUG: org.mybatis.spring.transaction.SpringManagedTransaction - JDBC Connection [net.sf.log4jdbc.ConnectionSpy@6b5c1122] will be managed by Spring
2024-03-04 11:26:45,707  INFO SQL(simplebot)        :  SELECT I.No, I.Main, I.Name,I.Next, I.URL, I.Language
		FROM Intent I
		WHERE I.Account=1636
		ORDER BY I.No
DEBUG: org.mybatis.spring.SqlSessionUtils - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@270d469e]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@270d469e]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@270d469e]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@270d469e]
DEBUG: first.common.logger.LoggerAspect - ServiceImpl  	:  first.builder.service.BuilderService.getAllBertIntents()
DEBUG: first.common.logger.LoggerAspect - DAO  		:  first.builder.dao.BuilderDAO.getAllBertIntents()
DEBUG: first.builder.dao.AbstractDAO - 	 QueryId  	:  builder.getAllBertIntents
DEBUG: org.mybatis.spring.SqlSessionUtils - Creating a new SqlSession
DEBUG: org.mybatis.spring.SqlSessionUtils - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@46b8c6f0]
DEBUG: org.mybatis.spring.transaction.SpringManagedTransaction - JDBC Connection [net.sf.log4jdbc.ConnectionSpy@654be87e] will be managed by Spring
2024-03-04 11:26:45,712  INFO SQL(simplebot)        :  SELECT B.No, B.Name, B.Language
		FROM BertIntent B LEFT OUTER JOIN BackendInfo BI
		ON B.BertItfId = BI.id
		WHERE BI.host=1636
		ORDER BY B.No
DEBUG: org.mybatis.spring.SqlSessionUtils - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@46b8c6f0]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@46b8c6f0]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@46b8c6f0]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@46b8c6f0]
DEBUG: first.common.logger.LoggerAspect - Controller  	:  first.builder.controller.BuilderController.excelSampleDown()
DEBUG: first.common.logger.LoggerAspect - ServiceImpl  	:  first.builder.service.BuilderService.getChatLang()
DEBUG: first.common.logger.LoggerAspect - DAO  		:  first.builder.dao.BuilderDAO.getChatLang()
DEBUG: first.builder.dao.AbstractDAO - 	 QueryId  	:  builder.getChatLang
DEBUG: org.mybatis.spring.SqlSessionUtils - Creating a new SqlSession
DEBUG: org.mybatis.spring.SqlSessionUtils - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@291c9682]
DEBUG: org.mybatis.spring.transaction.SpringManagedTransaction - JDBC Connection [net.sf.log4jdbc.ConnectionSpy@749f38da] will be managed by Spring
2024-03-04 11:26:48,722  INFO SQL(simplebot)        :  SELECT Language FROM Account WHERE No = '1636'
DEBUG: org.mybatis.spring.SqlSessionUtils - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@291c9682]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@291c9682]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@291c9682]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@291c9682]
04-Mar-2024 11:26:48.811 WARNING [http-nio-18090-exec-16] org.apache.coyote.http11.Http11Processor.prepareResponse The HTTP response header [Content-Disposition] with value [attachment;filename=[chatbot] TASK_ANSWER_샘플데이터.xlsx] has been removed from the response because it is invalid
	java.lang.IllegalArgumentException: The Unicode character [샘] at code point [49,368] cannot be encoded as it is outside the permitted range of 0 to 255
		at org.apache.tomcat.util.buf.MessageBytes.toBytesSimple(MessageBytes.java:310)
		at org.apache.tomcat.util.buf.MessageBytes.toBytes(MessageBytes.java:283)
		at org.apache.coyote.http11.Http11OutputBuffer.write(Http11OutputBuffer.java:438)
		at org.apache.coyote.http11.Http11OutputBuffer.sendHeader(Http11OutputBuffer.java:417)
		at org.apache.coyote.http11.Http11Processor.prepareResponse(Http11Processor.java:1269)
		at org.apache.coyote.AbstractProcessor.action(AbstractProcessor.java:380)
		at org.apache.coyote.Response.action(Response.java:206)
		at org.apache.coyote.Response.sendHeaders(Response.java:415)
		at org.apache.catalina.connector.OutputBuffer.doFlush(OutputBuffer.java:309)
		at org.apache.catalina.connector.OutputBuffer.flush(OutputBuffer.java:289)
		at org.apache.catalina.connector.CoyoteOutputStream.flush(CoyoteOutputStream.java:120)
		at org.apache.commons.compress.archivers.zip.ZipArchiveOutputStream.flush(ZipArchiveOutputStream.java:979)
		at java.io.FilterOutputStream.flush(FilterOutputStream.java:140)
		at com.sun.org.apache.xml.internal.serializer.WriterToUTF8Buffered.flush(WriterToUTF8Buffered.java:472)
		at com.sun.org.apache.xml.internal.serializer.ToStream.flushWriter(ToStream.java:290)
		at com.sun.org.apache.xml.internal.serializer.ToXMLStream.endDocument(ToXMLStream.java:213)
		at com.sun.org.apache.xml.internal.serializer.ToUnknownStream.endDocument(ToUnknownStream.java:829)
		at com.sun.org.apache.xalan.internal.xsltc.trax.DOM2TO.parse(DOM2TO.java:137)
		at com.sun.org.apache.xalan.internal.xsltc.trax.DOM2TO.parse(DOM2TO.java:96)
		at com.sun.org.apache.xalan.internal.xsltc.trax.TransformerImpl.transformIdentity(TransformerImpl.java:686)
		at com.sun.org.apache.xalan.internal.xsltc.trax.TransformerImpl.transform(TransformerImpl.java:730)
		at com.sun.org.apache.xalan.internal.xsltc.trax.TransformerImpl.transform(TransformerImpl.java:345)
		at org.apache.poi.openxml4j.opc.StreamHelper.saveXmlInStream(StreamHelper.java:84)
		at org.apache.poi.openxml4j.opc.internal.ZipContentTypeManager.saveImpl(ZipContentTypeManager.java:69)
		at org.apache.poi.openxml4j.opc.internal.ContentTypeManager.save(ContentTypeManager.java:449)
		at org.apache.poi.openxml4j.opc.ZipPackage.saveImpl(ZipPackage.java:518)
		at org.apache.poi.openxml4j.opc.OPCPackage.save(OPCPackage.java:1489)
		at org.apache.poi.ooxml.POIXMLDocument.write(POIXMLDocument.java:242)
		at first.builder.controller.BuilderController.excelSampleDown(BuilderController.java:1362)
		at first.builder.controller.BuilderController$$FastClassBySpringCGLIB$$c1e54596.invoke(<generated>)
		at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
		at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:736)
		at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:157)
		at org.springframework.aop.aspectj.MethodInvocationProceedingJoinPoint.proceed(MethodInvocationProceedingJoinPoint.java:84)
		at first.common.logger.LoggerAspect.logPrint(LoggerAspect.java:29)
		at sun.reflect.GeneratedMethodAccessor102.invoke(Unknown Source)
		at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
		at java.lang.reflect.Method.invoke(Method.java:498)
		at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:627)
		at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:616)
		at org.springframework.aop.aspectj.AspectJAroundAdvice.invoke(AspectJAroundAdvice.java:70)
		at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
		at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:92)
		at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
		at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:671)
		at first.builder.controller.BuilderController$$EnhancerBySpringCGLIB$$1693fd48.excelSampleDown(<generated>)
		at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
		at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
		at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
		at java.lang.reflect.Method.invoke(Method.java:498)
		at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:205)
		at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:133)
		at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:97)
		at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:849)
		at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:760)
		at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:85)
		at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:967)
		at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:901)
		at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:970)
		at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:861)
		at javax.servlet.http.HttpServlet.service(HttpServlet.java:489)
		at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:846)
		at javax.servlet.http.HttpServlet.service(HttpServlet.java:583)
		at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:212)
		at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:156)
		at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
		at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:181)
		at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:156)
		at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:197)
		at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
		at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:181)
		at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:156)
		at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:168)
		at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
		at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:483)
		at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:130)
		at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
		at org.apache.catalina.valves.AbstractAccessLogValve.invoke(AbstractAccessLogValve.java:679)
		at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
		at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:346)
		at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:617)
		at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
		at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:934)
		at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1698)
		at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
		at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
		at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
		at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
		at java.lang.Thread.run(Thread.java:750)
DEBUG: first.common.logger.LoggerAspect - Controller  	:  first.builder.controller.BuilderController.chatbotBuilderCommon()
DEBUG: first.common.logger.LoggerAspect - Controller  	:  first.builder.controller.BuilderController.getChatList()
DEBUG: first.common.logger.LoggerAspect - ServiceImpl  	:  first.builder.service.BuilderService.getChatbotList()
DEBUG: first.common.logger.LoggerAspect - DAO  		:  first.builder.dao.BuilderDAO.getChatbotList()
DEBUG: first.builder.dao.AbstractDAO - 	 QueryId  	:  builder.getChatbotList
DEBUG: org.mybatis.spring.SqlSessionUtils - Creating a new SqlSession
DEBUG: org.mybatis.spring.SqlSessionUtils - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@63d4b99c]
DEBUG: org.mybatis.spring.transaction.SpringManagedTransaction - JDBC Connection [net.sf.log4jdbc.ConnectionSpy@173a2c7a] will be managed by Spring
2024-03-04 11:28:19,109  INFO SQL(simplebot)        :  SELECT  /* No, Name, Host, Language */
			*
		from Account WHERE 1=1
		AND No IN
		 
				 (  
					'1636'
				 ) 
			 

		 
		ORDER BY No
DEBUG: org.mybatis.spring.SqlSessionUtils - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@63d4b99c]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@63d4b99c]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@63d4b99c]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@63d4b99c]
DEBUG: first.common.logger.LoggerAspect - Controller  	:  first.builder.controller.BuilderController.builderContentsAnswer()
DEBUG: first.common.logger.LoggerAspect - Controller  	:  first.builder.controller.BuilderController.builderBottomAnswer()
DEBUG: first.common.logger.LoggerAspect - Controller  	:  first.builder.controller.BuilderController.getTask()
DEBUG: first.common.logger.LoggerAspect - ServiceImpl  	:  first.builder.service.BuilderService.getTaskCount()
DEBUG: first.common.logger.LoggerAspect - DAO  		:  first.builder.dao.BuilderDAO.getTaskCount()
DEBUG: first.builder.dao.AbstractDAO - 	 QueryId  	:  builder.getTaskCount
DEBUG: org.mybatis.spring.SqlSessionUtils - Creating a new SqlSession
DEBUG: org.mybatis.spring.SqlSessionUtils - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@2352674d]
DEBUG: org.mybatis.spring.transaction.SpringManagedTransaction - JDBC Connection [net.sf.log4jdbc.ConnectionSpy@7e2a6235] will be managed by Spring
2024-03-04 11:28:19,185  INFO SQL(simplebot)        :  SELECT COUNT(*) FROM Intent WHERE Account=1636
 and Language=1
DEBUG: org.mybatis.spring.SqlSessionUtils - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@2352674d]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@2352674d]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@2352674d]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@2352674d]
DEBUG: first.common.logger.LoggerAspect - ServiceImpl  	:  first.builder.service.BuilderService.getAnswerList()
DEBUG: first.common.logger.LoggerAspect - DAO  		:  first.builder.dao.BuilderDAO.getAnswerList()
DEBUG: first.builder.dao.AbstractDAO - 	 QueryId  	:  builder.getAnswerList
DEBUG: org.mybatis.spring.SqlSessionUtils - Creating a new SqlSession
DEBUG: org.mybatis.spring.SqlSessionUtils - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@c1492af]
DEBUG: org.mybatis.spring.transaction.SpringManagedTransaction - JDBC Connection [net.sf.log4jdbc.ConnectionSpy@224d5e2f] will be managed by Spring
2024-03-04 11:28:19,189  INFO SQL(simplebot)        :  SELECT I.No, I.Main, I.Name, A.answer, I.Account
		FROM Intent I LEFT OUTER JOIN Answer A
		ON I.Answer = A.No
		WHERE I.Account=1636
 and I.Language=1
		ORDER BY I.No
		OFFSET 0 ROWS
		FETCH NEXT 15 ROWS ONLY
DEBUG: org.mybatis.spring.SqlSessionUtils - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@c1492af]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@c1492af]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@c1492af]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@c1492af]
DEBUG: first.common.logger.LoggerAspect - ServiceImpl  	:  first.builder.service.BuilderService.getAllIntents()
DEBUG: first.common.logger.LoggerAspect - DAO  		:  first.builder.dao.BuilderDAO.getAllIntents()
DEBUG: first.builder.dao.AbstractDAO - 	 QueryId  	:  builder.getAllIntents
DEBUG: org.mybatis.spring.SqlSessionUtils - Creating a new SqlSession
DEBUG: org.mybatis.spring.SqlSessionUtils - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@713f8dd6]
DEBUG: org.mybatis.spring.transaction.SpringManagedTransaction - JDBC Connection [net.sf.log4jdbc.ConnectionSpy@10a57952] will be managed by Spring
2024-03-04 11:28:19,195  INFO SQL(simplebot)        :  SELECT I.No, I.Main, I.Name,I.Next, I.URL, I.Language
		FROM Intent I
		WHERE I.Account=1636
		ORDER BY I.No
DEBUG: org.mybatis.spring.SqlSessionUtils - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@713f8dd6]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@713f8dd6]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@713f8dd6]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@713f8dd6]
DEBUG: first.common.logger.LoggerAspect - ServiceImpl  	:  first.builder.service.BuilderService.getAllBertIntents()
DEBUG: first.common.logger.LoggerAspect - DAO  		:  first.builder.dao.BuilderDAO.getAllBertIntents()
DEBUG: first.builder.dao.AbstractDAO - 	 QueryId  	:  builder.getAllBertIntents
DEBUG: org.mybatis.spring.SqlSessionUtils - Creating a new SqlSession
DEBUG: org.mybatis.spring.SqlSessionUtils - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@45d80371]
DEBUG: org.mybatis.spring.transaction.SpringManagedTransaction - JDBC Connection [net.sf.log4jdbc.ConnectionSpy@d7b3f26] will be managed by Spring
2024-03-04 11:28:19,199  INFO SQL(simplebot)        :  SELECT B.No, B.Name, B.Language
		FROM BertIntent B LEFT OUTER JOIN BackendInfo BI
		ON B.BertItfId = BI.id
		WHERE BI.host=1636
		ORDER BY B.No
DEBUG: org.mybatis.spring.SqlSessionUtils - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@45d80371]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@45d80371]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@45d80371]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@45d80371]
DEBUG: first.common.logger.LoggerAspect - Controller  	:  first.builder.controller.BuilderController.getTask()
DEBUG: first.common.logger.LoggerAspect - ServiceImpl  	:  first.builder.service.BuilderService.getTaskCount()
DEBUG: first.common.logger.LoggerAspect - DAO  		:  first.builder.dao.BuilderDAO.getTaskCount()
DEBUG: first.builder.dao.AbstractDAO - 	 QueryId  	:  builder.getTaskCount
DEBUG: org.mybatis.spring.SqlSessionUtils - Creating a new SqlSession
DEBUG: org.mybatis.spring.SqlSessionUtils - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@60e15c7]
DEBUG: org.mybatis.spring.transaction.SpringManagedTransaction - JDBC Connection [net.sf.log4jdbc.ConnectionSpy@63d91cb1] will be managed by Spring
2024-03-04 11:28:19,297  INFO SQL(simplebot)        :  SELECT COUNT(*) FROM Intent WHERE Account=1636
 and Language=1
DEBUG: org.mybatis.spring.SqlSessionUtils - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@60e15c7]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@60e15c7]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@60e15c7]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@60e15c7]
DEBUG: first.common.logger.LoggerAspect - ServiceImpl  	:  first.builder.service.BuilderService.getAnswerList()
DEBUG: first.common.logger.LoggerAspect - DAO  		:  first.builder.dao.BuilderDAO.getAnswerList()
DEBUG: first.builder.dao.AbstractDAO - 	 QueryId  	:  builder.getAnswerList
DEBUG: org.mybatis.spring.SqlSessionUtils - Creating a new SqlSession
DEBUG: org.mybatis.spring.SqlSessionUtils - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@7258f486]
DEBUG: org.mybatis.spring.transaction.SpringManagedTransaction - JDBC Connection [net.sf.log4jdbc.ConnectionSpy@5239e1c5] will be managed by Spring
2024-03-04 11:28:19,302  INFO SQL(simplebot)        :  SELECT I.No, I.Main, I.Name, A.answer, I.Account
		FROM Intent I LEFT OUTER JOIN Answer A
		ON I.Answer = A.No
		WHERE I.Account=1636
 and I.Language=1
		ORDER BY I.No
		OFFSET 0 ROWS
		FETCH NEXT 15 ROWS ONLY
DEBUG: org.mybatis.spring.SqlSessionUtils - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@7258f486]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@7258f486]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@7258f486]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@7258f486]
DEBUG: first.common.logger.LoggerAspect - ServiceImpl  	:  first.builder.service.BuilderService.getAllIntents()
DEBUG: first.common.logger.LoggerAspect - DAO  		:  first.builder.dao.BuilderDAO.getAllIntents()
DEBUG: first.builder.dao.AbstractDAO - 	 QueryId  	:  builder.getAllIntents
DEBUG: org.mybatis.spring.SqlSessionUtils - Creating a new SqlSession
DEBUG: org.mybatis.spring.SqlSessionUtils - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@2e80584]
DEBUG: org.mybatis.spring.transaction.SpringManagedTransaction - JDBC Connection [net.sf.log4jdbc.ConnectionSpy@6073a286] will be managed by Spring
2024-03-04 11:28:19,306  INFO SQL(simplebot)        :  SELECT I.No, I.Main, I.Name,I.Next, I.URL, I.Language
		FROM Intent I
		WHERE I.Account=1636
		ORDER BY I.No
DEBUG: org.mybatis.spring.SqlSessionUtils - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@2e80584]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@2e80584]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@2e80584]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@2e80584]
DEBUG: first.common.logger.LoggerAspect - ServiceImpl  	:  first.builder.service.BuilderService.getAllBertIntents()
DEBUG: first.common.logger.LoggerAspect - DAO  		:  first.builder.dao.BuilderDAO.getAllBertIntents()
DEBUG: first.builder.dao.AbstractDAO - 	 QueryId  	:  builder.getAllBertIntents
DEBUG: org.mybatis.spring.SqlSessionUtils - Creating a new SqlSession
DEBUG: org.mybatis.spring.SqlSessionUtils - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@cf1c798]
DEBUG: org.mybatis.spring.transaction.SpringManagedTransaction - JDBC Connection [net.sf.log4jdbc.ConnectionSpy@2fbbf427] will be managed by Spring
2024-03-04 11:28:19,310  INFO SQL(simplebot)        :  SELECT B.No, B.Name, B.Language
		FROM BertIntent B LEFT OUTER JOIN BackendInfo BI
		ON B.BertItfId = BI.id
		WHERE BI.host=1636
		ORDER BY B.No
DEBUG: org.mybatis.spring.SqlSessionUtils - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@cf1c798]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@cf1c798]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@cf1c798]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@cf1c798]
DEBUG: first.common.logger.LoggerAspect - Controller  	:  first.builder.controller.BuilderController.excelSampleDown()
DEBUG: first.common.logger.LoggerAspect - ServiceImpl  	:  first.builder.service.BuilderService.getChatLang()
DEBUG: first.common.logger.LoggerAspect - DAO  		:  first.builder.dao.BuilderDAO.getChatLang()
DEBUG: first.builder.dao.AbstractDAO - 	 QueryId  	:  builder.getChatLang
DEBUG: org.mybatis.spring.SqlSessionUtils - Creating a new SqlSession
DEBUG: org.mybatis.spring.SqlSessionUtils - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@31e125e7]
DEBUG: org.mybatis.spring.transaction.SpringManagedTransaction - JDBC Connection [net.sf.log4jdbc.ConnectionSpy@173319f2] will be managed by Spring
2024-03-04 11:28:21,745  INFO SQL(simplebot)        :  SELECT Language FROM Account WHERE No = '1636'
DEBUG: org.mybatis.spring.SqlSessionUtils - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@31e125e7]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@31e125e7]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@31e125e7]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@31e125e7]
04-Mar-2024 11:28:21.772 WARNING [http-nio-18090-exec-11] org.apache.coyote.http11.Http11Processor.prepareResponse The HTTP response header [Content-Disposition] with value [attachment;filename=[chatbot] TASK_ANSWER_샘플데이터.xlsx] has been removed from the response because it is invalid
	java.lang.IllegalArgumentException: The Unicode character [샘] at code point [49,368] cannot be encoded as it is outside the permitted range of 0 to 255
		at org.apache.tomcat.util.buf.MessageBytes.toBytesSimple(MessageBytes.java:310)
		at org.apache.tomcat.util.buf.MessageBytes.toBytes(MessageBytes.java:283)
		at org.apache.coyote.http11.Http11OutputBuffer.write(Http11OutputBuffer.java:438)
		at org.apache.coyote.http11.Http11OutputBuffer.sendHeader(Http11OutputBuffer.java:417)
		at org.apache.coyote.http11.Http11Processor.prepareResponse(Http11Processor.java:1269)
		at org.apache.coyote.AbstractProcessor.action(AbstractProcessor.java:380)
		at org.apache.coyote.Response.action(Response.java:206)
		at org.apache.coyote.Response.sendHeaders(Response.java:415)
		at org.apache.catalina.connector.OutputBuffer.doFlush(OutputBuffer.java:309)
		at org.apache.catalina.connector.OutputBuffer.flush(OutputBuffer.java:289)
		at org.apache.catalina.connector.CoyoteOutputStream.flush(CoyoteOutputStream.java:120)
		at org.apache.commons.compress.archivers.zip.ZipArchiveOutputStream.flush(ZipArchiveOutputStream.java:979)
		at java.io.FilterOutputStream.flush(FilterOutputStream.java:140)
		at com.sun.org.apache.xml.internal.serializer.WriterToUTF8Buffered.flush(WriterToUTF8Buffered.java:472)
		at com.sun.org.apache.xml.internal.serializer.ToStream.flushWriter(ToStream.java:290)
		at com.sun.org.apache.xml.internal.serializer.ToXMLStream.endDocument(ToXMLStream.java:213)
		at com.sun.org.apache.xml.internal.serializer.ToUnknownStream.endDocument(ToUnknownStream.java:829)
		at com.sun.org.apache.xalan.internal.xsltc.trax.DOM2TO.parse(DOM2TO.java:137)
		at com.sun.org.apache.xalan.internal.xsltc.trax.DOM2TO.parse(DOM2TO.java:96)
		at com.sun.org.apache.xalan.internal.xsltc.trax.TransformerImpl.transformIdentity(TransformerImpl.java:686)
		at com.sun.org.apache.xalan.internal.xsltc.trax.TransformerImpl.transform(TransformerImpl.java:730)
		at com.sun.org.apache.xalan.internal.xsltc.trax.TransformerImpl.transform(TransformerImpl.java:345)
		at org.apache.poi.openxml4j.opc.StreamHelper.saveXmlInStream(StreamHelper.java:84)
		at org.apache.poi.openxml4j.opc.internal.ZipContentTypeManager.saveImpl(ZipContentTypeManager.java:69)
		at org.apache.poi.openxml4j.opc.internal.ContentTypeManager.save(ContentTypeManager.java:449)
		at org.apache.poi.openxml4j.opc.ZipPackage.saveImpl(ZipPackage.java:518)
		at org.apache.poi.openxml4j.opc.OPCPackage.save(OPCPackage.java:1489)
		at org.apache.poi.ooxml.POIXMLDocument.write(POIXMLDocument.java:242)
		at first.builder.controller.BuilderController.excelSampleDown(BuilderController.java:1362)
		at first.builder.controller.BuilderController$$FastClassBySpringCGLIB$$c1e54596.invoke(<generated>)
		at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
		at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:736)
		at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:157)
		at org.springframework.aop.aspectj.MethodInvocationProceedingJoinPoint.proceed(MethodInvocationProceedingJoinPoint.java:84)
		at first.common.logger.LoggerAspect.logPrint(LoggerAspect.java:29)
		at sun.reflect.GeneratedMethodAccessor102.invoke(Unknown Source)
		at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
		at java.lang.reflect.Method.invoke(Method.java:498)
		at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:627)
		at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:616)
		at org.springframework.aop.aspectj.AspectJAroundAdvice.invoke(AspectJAroundAdvice.java:70)
		at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
		at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:92)
		at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
		at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:671)
		at first.builder.controller.BuilderController$$EnhancerBySpringCGLIB$$1693fd48.excelSampleDown(<generated>)
		at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
		at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
		at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
		at java.lang.reflect.Method.invoke(Method.java:498)
		at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:205)
		at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:133)
		at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:97)
		at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:849)
		at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:760)
		at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:85)
		at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:967)
		at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:901)
		at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:970)
		at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:861)
		at javax.servlet.http.HttpServlet.service(HttpServlet.java:489)
		at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:846)
		at javax.servlet.http.HttpServlet.service(HttpServlet.java:583)
		at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:212)
		at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:156)
		at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
		at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:181)
		at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:156)
		at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:197)
		at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
		at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:181)
		at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:156)
		at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:168)
		at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
		at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:483)
		at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:130)
		at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
		at org.apache.catalina.valves.AbstractAccessLogValve.invoke(AbstractAccessLogValve.java:679)
		at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
		at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:346)
		at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:617)
		at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
		at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:934)
		at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1698)
		at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
		at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
		at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
		at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
		at java.lang.Thread.run(Thread.java:750)
DEBUG: first.common.logger.LoggerAspect - Controller  	:  first.builder.controller.BuilderController.chatbotBuilderCommon()
DEBUG: first.common.logger.LoggerAspect - Controller  	:  first.builder.controller.BuilderController.getChatList()
DEBUG: first.common.logger.LoggerAspect - ServiceImpl  	:  first.builder.service.BuilderService.getChatbotList()
DEBUG: first.common.logger.LoggerAspect - DAO  		:  first.builder.dao.BuilderDAO.getChatbotList()
DEBUG: first.builder.dao.AbstractDAO - 	 QueryId  	:  builder.getChatbotList
DEBUG: org.mybatis.spring.SqlSessionUtils - Creating a new SqlSession
DEBUG: org.mybatis.spring.SqlSessionUtils - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@467a8ddc]
DEBUG: org.mybatis.spring.transaction.SpringManagedTransaction - JDBC Connection [net.sf.log4jdbc.ConnectionSpy@7c0c4fd5] will be managed by Spring
2024-03-04 11:34:43,444  INFO SQL(simplebot)        :  SELECT  /* No, Name, Host, Language */
			*
		from Account WHERE 1=1
		AND No IN
		 
				 (  
					'1636'
				 ) 
			 

		 
		ORDER BY No
DEBUG: org.mybatis.spring.SqlSessionUtils - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@467a8ddc]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@467a8ddc]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@467a8ddc]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@467a8ddc]
DEBUG: first.common.logger.LoggerAspect - Controller  	:  first.builder.controller.BuilderController.builderContentsAnswer()
DEBUG: first.common.logger.LoggerAspect - Controller  	:  first.builder.controller.BuilderController.builderBottomAnswer()
DEBUG: first.common.logger.LoggerAspect - Controller  	:  first.builder.controller.BuilderController.getTask()
DEBUG: first.common.logger.LoggerAspect - ServiceImpl  	:  first.builder.service.BuilderService.getTaskCount()
DEBUG: first.common.logger.LoggerAspect - DAO  		:  first.builder.dao.BuilderDAO.getTaskCount()
DEBUG: first.builder.dao.AbstractDAO - 	 QueryId  	:  builder.getTaskCount
DEBUG: org.mybatis.spring.SqlSessionUtils - Creating a new SqlSession
DEBUG: org.mybatis.spring.SqlSessionUtils - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@30789818]
DEBUG: org.mybatis.spring.transaction.SpringManagedTransaction - JDBC Connection [net.sf.log4jdbc.ConnectionSpy@2f243da9] will be managed by Spring
2024-03-04 11:34:43,484  INFO SQL(simplebot)        :  SELECT COUNT(*) FROM Intent WHERE Account=1636
 and Language=1
DEBUG: org.mybatis.spring.SqlSessionUtils - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@30789818]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@30789818]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@30789818]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@30789818]
DEBUG: first.common.logger.LoggerAspect - ServiceImpl  	:  first.builder.service.BuilderService.getAnswerList()
DEBUG: first.common.logger.LoggerAspect - DAO  		:  first.builder.dao.BuilderDAO.getAnswerList()
DEBUG: first.builder.dao.AbstractDAO - 	 QueryId  	:  builder.getAnswerList
DEBUG: org.mybatis.spring.SqlSessionUtils - Creating a new SqlSession
DEBUG: org.mybatis.spring.SqlSessionUtils - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@66485786]
DEBUG: org.mybatis.spring.transaction.SpringManagedTransaction - JDBC Connection [net.sf.log4jdbc.ConnectionSpy@1092e21] will be managed by Spring
2024-03-04 11:34:43,489  INFO SQL(simplebot)        :  SELECT I.No, I.Main, I.Name, A.answer, I.Account
		FROM Intent I LEFT OUTER JOIN Answer A
		ON I.Answer = A.No
		WHERE I.Account=1636
 and I.Language=1
		ORDER BY I.No
		OFFSET 0 ROWS
		FETCH NEXT 15 ROWS ONLY
DEBUG: org.mybatis.spring.SqlSessionUtils - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@66485786]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@66485786]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@66485786]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@66485786]
DEBUG: first.common.logger.LoggerAspect - ServiceImpl  	:  first.builder.service.BuilderService.getAllIntents()
DEBUG: first.common.logger.LoggerAspect - DAO  		:  first.builder.dao.BuilderDAO.getAllIntents()
DEBUG: first.builder.dao.AbstractDAO - 	 QueryId  	:  builder.getAllIntents
DEBUG: org.mybatis.spring.SqlSessionUtils - Creating a new SqlSession
DEBUG: org.mybatis.spring.SqlSessionUtils - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@3995e3af]
DEBUG: org.mybatis.spring.transaction.SpringManagedTransaction - JDBC Connection [net.sf.log4jdbc.ConnectionSpy@67c32d44] will be managed by Spring
2024-03-04 11:34:43,493  INFO SQL(simplebot)        :  SELECT I.No, I.Main, I.Name,I.Next, I.URL, I.Language
		FROM Intent I
		WHERE I.Account=1636
		ORDER BY I.No
DEBUG: org.mybatis.spring.SqlSessionUtils - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@3995e3af]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@3995e3af]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@3995e3af]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@3995e3af]
DEBUG: first.common.logger.LoggerAspect - ServiceImpl  	:  first.builder.service.BuilderService.getAllBertIntents()
DEBUG: first.common.logger.LoggerAspect - DAO  		:  first.builder.dao.BuilderDAO.getAllBertIntents()
DEBUG: first.builder.dao.AbstractDAO - 	 QueryId  	:  builder.getAllBertIntents
DEBUG: org.mybatis.spring.SqlSessionUtils - Creating a new SqlSession
DEBUG: org.mybatis.spring.SqlSessionUtils - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@3ea2f853]
DEBUG: org.mybatis.spring.transaction.SpringManagedTransaction - JDBC Connection [net.sf.log4jdbc.ConnectionSpy@51256b74] will be managed by Spring
2024-03-04 11:34:43,497  INFO SQL(simplebot)        :  SELECT B.No, B.Name, B.Language
		FROM BertIntent B LEFT OUTER JOIN BackendInfo BI
		ON B.BertItfId = BI.id
		WHERE BI.host=1636
		ORDER BY B.No
DEBUG: org.mybatis.spring.SqlSessionUtils - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@3ea2f853]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@3ea2f853]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@3ea2f853]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@3ea2f853]
DEBUG: first.common.logger.LoggerAspect - Controller  	:  first.builder.controller.BuilderController.getTask()
DEBUG: first.common.logger.LoggerAspect - ServiceImpl  	:  first.builder.service.BuilderService.getTaskCount()
DEBUG: first.common.logger.LoggerAspect - DAO  		:  first.builder.dao.BuilderDAO.getTaskCount()
DEBUG: first.builder.dao.AbstractDAO - 	 QueryId  	:  builder.getTaskCount
DEBUG: org.mybatis.spring.SqlSessionUtils - Creating a new SqlSession
DEBUG: org.mybatis.spring.SqlSessionUtils - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@3abc3d93]
DEBUG: org.mybatis.spring.transaction.SpringManagedTransaction - JDBC Connection [net.sf.log4jdbc.ConnectionSpy@2bb8fd64] will be managed by Spring
2024-03-04 11:34:43,545  INFO SQL(simplebot)        :  SELECT COUNT(*) FROM Intent WHERE Account=1636
 and Language=1
DEBUG: org.mybatis.spring.SqlSessionUtils - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@3abc3d93]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@3abc3d93]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@3abc3d93]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@3abc3d93]
DEBUG: first.common.logger.LoggerAspect - ServiceImpl  	:  first.builder.service.BuilderService.getAnswerList()
DEBUG: first.common.logger.LoggerAspect - DAO  		:  first.builder.dao.BuilderDAO.getAnswerList()
DEBUG: first.builder.dao.AbstractDAO - 	 QueryId  	:  builder.getAnswerList
DEBUG: org.mybatis.spring.SqlSessionUtils - Creating a new SqlSession
DEBUG: org.mybatis.spring.SqlSessionUtils - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@510f109f]
DEBUG: org.mybatis.spring.transaction.SpringManagedTransaction - JDBC Connection [net.sf.log4jdbc.ConnectionSpy@73192dad] will be managed by Spring
2024-03-04 11:34:43,549  INFO SQL(simplebot)        :  SELECT I.No, I.Main, I.Name, A.answer, I.Account
		FROM Intent I LEFT OUTER JOIN Answer A
		ON I.Answer = A.No
		WHERE I.Account=1636
 and I.Language=1
		ORDER BY I.No
		OFFSET 0 ROWS
		FETCH NEXT 15 ROWS ONLY
DEBUG: org.mybatis.spring.SqlSessionUtils - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@510f109f]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@510f109f]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@510f109f]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@510f109f]
DEBUG: first.common.logger.LoggerAspect - ServiceImpl  	:  first.builder.service.BuilderService.getAllIntents()
DEBUG: first.common.logger.LoggerAspect - DAO  		:  first.builder.dao.BuilderDAO.getAllIntents()
DEBUG: first.builder.dao.AbstractDAO - 	 QueryId  	:  builder.getAllIntents
DEBUG: org.mybatis.spring.SqlSessionUtils - Creating a new SqlSession
DEBUG: org.mybatis.spring.SqlSessionUtils - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@292008dc]
DEBUG: org.mybatis.spring.transaction.SpringManagedTransaction - JDBC Connection [net.sf.log4jdbc.ConnectionSpy@7f4acc3c] will be managed by Spring
2024-03-04 11:34:43,554  INFO SQL(simplebot)        :  SELECT I.No, I.Main, I.Name,I.Next, I.URL, I.Language
		FROM Intent I
		WHERE I.Account=1636
		ORDER BY I.No
DEBUG: org.mybatis.spring.SqlSessionUtils - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@292008dc]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@292008dc]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@292008dc]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@292008dc]
DEBUG: first.common.logger.LoggerAspect - ServiceImpl  	:  first.builder.service.BuilderService.getAllBertIntents()
DEBUG: first.common.logger.LoggerAspect - DAO  		:  first.builder.dao.BuilderDAO.getAllBertIntents()
DEBUG: first.builder.dao.AbstractDAO - 	 QueryId  	:  builder.getAllBertIntents
DEBUG: org.mybatis.spring.SqlSessionUtils - Creating a new SqlSession
DEBUG: org.mybatis.spring.SqlSessionUtils - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@9321dce]
DEBUG: org.mybatis.spring.transaction.SpringManagedTransaction - JDBC Connection [net.sf.log4jdbc.ConnectionSpy@7fed96ed] will be managed by Spring
2024-03-04 11:34:43,558  INFO SQL(simplebot)        :  SELECT B.No, B.Name, B.Language
		FROM BertIntent B LEFT OUTER JOIN BackendInfo BI
		ON B.BertItfId = BI.id
		WHERE BI.host=1636
		ORDER BY B.No
DEBUG: org.mybatis.spring.SqlSessionUtils - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@9321dce]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@9321dce]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@9321dce]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@9321dce]
DEBUG: first.common.logger.LoggerAspect - Controller  	:  first.builder.controller.BuilderController.excelSampleDown()
DEBUG: first.common.logger.LoggerAspect - ServiceImpl  	:  first.builder.service.BuilderService.getChatLang()
DEBUG: first.common.logger.LoggerAspect - DAO  		:  first.builder.dao.BuilderDAO.getChatLang()
DEBUG: first.builder.dao.AbstractDAO - 	 QueryId  	:  builder.getChatLang
DEBUG: org.mybatis.spring.SqlSessionUtils - Creating a new SqlSession
DEBUG: org.mybatis.spring.SqlSessionUtils - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@45e0735d]
DEBUG: org.mybatis.spring.transaction.SpringManagedTransaction - JDBC Connection [net.sf.log4jdbc.ConnectionSpy@c0bc484] will be managed by Spring
2024-03-04 11:34:45,849  INFO SQL(simplebot)        :  SELECT Language FROM Account WHERE No = '1636'
DEBUG: org.mybatis.spring.SqlSessionUtils - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@45e0735d]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@45e0735d]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@45e0735d]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@45e0735d]
04-Mar-2024 11:34:45.879 WARNING [http-nio-18090-exec-19] org.apache.coyote.http11.Http11Processor.prepareResponse The HTTP response header [Content-Disposition] with value [attachment;filename=[chatbot] TASK_ANSWER_샘플데이터.xlsx] has been removed from the response because it is invalid
	java.lang.IllegalArgumentException: The Unicode character [샘] at code point [49,368] cannot be encoded as it is outside the permitted range of 0 to 255
		at org.apache.tomcat.util.buf.MessageBytes.toBytesSimple(MessageBytes.java:310)
		at org.apache.tomcat.util.buf.MessageBytes.toBytes(MessageBytes.java:283)
		at org.apache.coyote.http11.Http11OutputBuffer.write(Http11OutputBuffer.java:438)
		at org.apache.coyote.http11.Http11OutputBuffer.sendHeader(Http11OutputBuffer.java:417)
		at org.apache.coyote.http11.Http11Processor.prepareResponse(Http11Processor.java:1269)
		at org.apache.coyote.AbstractProcessor.action(AbstractProcessor.java:380)
		at org.apache.coyote.Response.action(Response.java:206)
		at org.apache.coyote.Response.sendHeaders(Response.java:415)
		at org.apache.catalina.connector.OutputBuffer.doFlush(OutputBuffer.java:309)
		at org.apache.catalina.connector.OutputBuffer.flush(OutputBuffer.java:289)
		at org.apache.catalina.connector.CoyoteOutputStream.flush(CoyoteOutputStream.java:120)
		at org.apache.commons.compress.archivers.zip.ZipArchiveOutputStream.flush(ZipArchiveOutputStream.java:979)
		at java.io.FilterOutputStream.flush(FilterOutputStream.java:140)
		at com.sun.org.apache.xml.internal.serializer.WriterToUTF8Buffered.flush(WriterToUTF8Buffered.java:472)
		at com.sun.org.apache.xml.internal.serializer.ToStream.flushWriter(ToStream.java:290)
		at com.sun.org.apache.xml.internal.serializer.ToXMLStream.endDocument(ToXMLStream.java:213)
		at com.sun.org.apache.xml.internal.serializer.ToUnknownStream.endDocument(ToUnknownStream.java:829)
		at com.sun.org.apache.xalan.internal.xsltc.trax.DOM2TO.parse(DOM2TO.java:137)
		at com.sun.org.apache.xalan.internal.xsltc.trax.DOM2TO.parse(DOM2TO.java:96)
		at com.sun.org.apache.xalan.internal.xsltc.trax.TransformerImpl.transformIdentity(TransformerImpl.java:686)
		at com.sun.org.apache.xalan.internal.xsltc.trax.TransformerImpl.transform(TransformerImpl.java:730)
		at com.sun.org.apache.xalan.internal.xsltc.trax.TransformerImpl.transform(TransformerImpl.java:345)
		at org.apache.poi.openxml4j.opc.StreamHelper.saveXmlInStream(StreamHelper.java:84)
		at org.apache.poi.openxml4j.opc.internal.ZipContentTypeManager.saveImpl(ZipContentTypeManager.java:69)
		at org.apache.poi.openxml4j.opc.internal.ContentTypeManager.save(ContentTypeManager.java:449)
		at org.apache.poi.openxml4j.opc.ZipPackage.saveImpl(ZipPackage.java:518)
		at org.apache.poi.openxml4j.opc.OPCPackage.save(OPCPackage.java:1489)
		at org.apache.poi.ooxml.POIXMLDocument.write(POIXMLDocument.java:242)
		at first.builder.controller.BuilderController.excelSampleDown(BuilderController.java:1362)
		at first.builder.controller.BuilderController$$FastClassBySpringCGLIB$$c1e54596.invoke(<generated>)
		at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
		at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:736)
		at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:157)
		at org.springframework.aop.aspectj.MethodInvocationProceedingJoinPoint.proceed(MethodInvocationProceedingJoinPoint.java:84)
		at first.common.logger.LoggerAspect.logPrint(LoggerAspect.java:29)
		at sun.reflect.GeneratedMethodAccessor102.invoke(Unknown Source)
		at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
		at java.lang.reflect.Method.invoke(Method.java:498)
		at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:627)
		at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:616)
		at org.springframework.aop.aspectj.AspectJAroundAdvice.invoke(AspectJAroundAdvice.java:70)
		at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
		at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:92)
		at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
		at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:671)
		at first.builder.controller.BuilderController$$EnhancerBySpringCGLIB$$1693fd48.excelSampleDown(<generated>)
		at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
		at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
		at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
		at java.lang.reflect.Method.invoke(Method.java:498)
		at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:205)
		at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:133)
		at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:97)
		at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:849)
		at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:760)
		at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:85)
		at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:967)
		at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:901)
		at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:970)
		at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:861)
		at javax.servlet.http.HttpServlet.service(HttpServlet.java:489)
		at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:846)
		at javax.servlet.http.HttpServlet.service(HttpServlet.java:583)
		at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:212)
		at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:156)
		at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
		at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:181)
		at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:156)
		at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:197)
		at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
		at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:181)
		at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:156)
		at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:168)
		at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
		at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:483)
		at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:130)
		at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
		at org.apache.catalina.valves.AbstractAccessLogValve.invoke(AbstractAccessLogValve.java:679)
		at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
		at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:346)
		at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:617)
		at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
		at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:934)
		at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1698)
		at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
		at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
		at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
		at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
		at java.lang.Thread.run(Thread.java:750)
DEBUG: first.common.logger.LoggerAspect - Controller  	:  first.builder.controller.BuilderController.excelSampleDown()
DEBUG: first.common.logger.LoggerAspect - ServiceImpl  	:  first.builder.service.BuilderService.getChatLang()
DEBUG: first.common.logger.LoggerAspect - DAO  		:  first.builder.dao.BuilderDAO.getChatLang()
DEBUG: first.builder.dao.AbstractDAO - 	 QueryId  	:  builder.getChatLang
DEBUG: org.mybatis.spring.SqlSessionUtils - Creating a new SqlSession
DEBUG: org.mybatis.spring.SqlSessionUtils - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@771535c9]
DEBUG: org.mybatis.spring.transaction.SpringManagedTransaction - JDBC Connection [net.sf.log4jdbc.ConnectionSpy@19ab4e1e] will be managed by Spring
2024-03-04 11:35:30,816  INFO SQL(simplebot)        :  SELECT Language FROM Account WHERE No = '1636'
DEBUG: org.mybatis.spring.SqlSessionUtils - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@771535c9]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@771535c9]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@771535c9]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@771535c9]
04-Mar-2024 11:35:30.841 WARNING [http-nio-18090-exec-20] org.apache.coyote.http11.Http11Processor.prepareResponse The HTTP response header [Content-Disposition] with value [attachment;filename=[chatbot] TASK_ANSWER_샘플데이터.xlsx] has been removed from the response because it is invalid
	java.lang.IllegalArgumentException: The Unicode character [샘] at code point [49,368] cannot be encoded as it is outside the permitted range of 0 to 255
		at org.apache.tomcat.util.buf.MessageBytes.toBytesSimple(MessageBytes.java:310)
		at org.apache.tomcat.util.buf.MessageBytes.toBytes(MessageBytes.java:283)
		at org.apache.coyote.http11.Http11OutputBuffer.write(Http11OutputBuffer.java:438)
		at org.apache.coyote.http11.Http11OutputBuffer.sendHeader(Http11OutputBuffer.java:417)
		at org.apache.coyote.http11.Http11Processor.prepareResponse(Http11Processor.java:1269)
		at org.apache.coyote.AbstractProcessor.action(AbstractProcessor.java:380)
		at org.apache.coyote.Response.action(Response.java:206)
		at org.apache.coyote.Response.sendHeaders(Response.java:415)
		at org.apache.catalina.connector.OutputBuffer.doFlush(OutputBuffer.java:309)
		at org.apache.catalina.connector.OutputBuffer.flush(OutputBuffer.java:289)
		at org.apache.catalina.connector.CoyoteOutputStream.flush(CoyoteOutputStream.java:120)
		at org.apache.commons.compress.archivers.zip.ZipArchiveOutputStream.flush(ZipArchiveOutputStream.java:979)
		at java.io.FilterOutputStream.flush(FilterOutputStream.java:140)
		at com.sun.org.apache.xml.internal.serializer.WriterToUTF8Buffered.flush(WriterToUTF8Buffered.java:472)
		at com.sun.org.apache.xml.internal.serializer.ToStream.flushWriter(ToStream.java:290)
		at com.sun.org.apache.xml.internal.serializer.ToXMLStream.endDocument(ToXMLStream.java:213)
		at com.sun.org.apache.xml.internal.serializer.ToUnknownStream.endDocument(ToUnknownStream.java:829)
		at com.sun.org.apache.xalan.internal.xsltc.trax.DOM2TO.parse(DOM2TO.java:137)
		at com.sun.org.apache.xalan.internal.xsltc.trax.DOM2TO.parse(DOM2TO.java:96)
		at com.sun.org.apache.xalan.internal.xsltc.trax.TransformerImpl.transformIdentity(TransformerImpl.java:686)
		at com.sun.org.apache.xalan.internal.xsltc.trax.TransformerImpl.transform(TransformerImpl.java:730)
		at com.sun.org.apache.xalan.internal.xsltc.trax.TransformerImpl.transform(TransformerImpl.java:345)
		at org.apache.poi.openxml4j.opc.StreamHelper.saveXmlInStream(StreamHelper.java:84)
		at org.apache.poi.openxml4j.opc.internal.ZipContentTypeManager.saveImpl(ZipContentTypeManager.java:69)
		at org.apache.poi.openxml4j.opc.internal.ContentTypeManager.save(ContentTypeManager.java:449)
		at org.apache.poi.openxml4j.opc.ZipPackage.saveImpl(ZipPackage.java:518)
		at org.apache.poi.openxml4j.opc.OPCPackage.save(OPCPackage.java:1489)
		at org.apache.poi.ooxml.POIXMLDocument.write(POIXMLDocument.java:242)
		at first.builder.controller.BuilderController.excelSampleDown(BuilderController.java:1362)
		at first.builder.controller.BuilderController$$FastClassBySpringCGLIB$$c1e54596.invoke(<generated>)
		at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
		at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:736)
		at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:157)
		at org.springframework.aop.aspectj.MethodInvocationProceedingJoinPoint.proceed(MethodInvocationProceedingJoinPoint.java:84)
		at first.common.logger.LoggerAspect.logPrint(LoggerAspect.java:29)
		at sun.reflect.GeneratedMethodAccessor102.invoke(Unknown Source)
		at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
		at java.lang.reflect.Method.invoke(Method.java:498)
		at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:627)
		at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:616)
		at org.springframework.aop.aspectj.AspectJAroundAdvice.invoke(AspectJAroundAdvice.java:70)
		at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
		at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:92)
		at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
		at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:671)
		at first.builder.controller.BuilderController$$EnhancerBySpringCGLIB$$1693fd48.excelSampleDown(<generated>)
		at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
		at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
		at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
		at java.lang.reflect.Method.invoke(Method.java:498)
		at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:205)
		at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:133)
		at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:97)
		at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:849)
		at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:760)
		at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:85)
		at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:967)
		at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:901)
		at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:970)
		at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:861)
		at javax.servlet.http.HttpServlet.service(HttpServlet.java:489)
		at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:846)
		at javax.servlet.http.HttpServlet.service(HttpServlet.java:583)
		at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:212)
		at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:156)
		at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
		at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:181)
		at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:156)
		at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:197)
		at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
		at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:181)
		at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:156)
		at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:168)
		at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
		at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:483)
		at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:130)
		at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
		at org.apache.catalina.valves.AbstractAccessLogValve.invoke(AbstractAccessLogValve.java:679)
		at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
		at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:346)
		at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:617)
		at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
		at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:934)
		at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1698)
		at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
		at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
		at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
		at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
		at java.lang.Thread.run(Thread.java:750)
DEBUG: first.common.logger.LoggerAspect - Controller  	:  first.builder.controller.BuilderController.getTestPage()
DEBUG: first.common.logger.LoggerAspect - ServiceImpl  	:  first.builder.service.BuilderService.getHostByAccount()
DEBUG: first.common.logger.LoggerAspect - DAO  		:  first.builder.dao.BuilderDAO.getHostByAccount()
DEBUG: first.builder.dao.AbstractDAO - 	 QueryId  	:  builder.getHostByAccount
DEBUG: org.mybatis.spring.SqlSessionUtils - Creating a new SqlSession
DEBUG: org.mybatis.spring.SqlSessionUtils - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@41dcd821]
DEBUG: org.mybatis.spring.transaction.SpringManagedTransaction - JDBC Connection [net.sf.log4jdbc.ConnectionSpy@5f3b27e0] will be managed by Spring
2024-03-04 11:36:52,569  INFO SQL(simplebot)        :  SELECT Host
		From Account
		Where No=1636
DEBUG: org.mybatis.spring.SqlSessionUtils - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@41dcd821]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@41dcd821]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@41dcd821]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@41dcd821]
DEBUG: first.common.logger.LoggerAspect - Controller  	:  first.builder.controller.BuilderController.getTestPage()
DEBUG: first.common.logger.LoggerAspect - ServiceImpl  	:  first.builder.service.BuilderService.getHostByAccount()
DEBUG: first.common.logger.LoggerAspect - DAO  		:  first.builder.dao.BuilderDAO.getHostByAccount()
DEBUG: first.builder.dao.AbstractDAO - 	 QueryId  	:  builder.getHostByAccount
DEBUG: org.mybatis.spring.SqlSessionUtils - Creating a new SqlSession
DEBUG: org.mybatis.spring.SqlSessionUtils - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1e3777e8]
DEBUG: org.mybatis.spring.transaction.SpringManagedTransaction - JDBC Connection [net.sf.log4jdbc.ConnectionSpy@fd64cc2] will be managed by Spring
2024-03-04 11:37:03,995  INFO SQL(simplebot)        :  SELECT Host
		From Account
		Where No=1636
DEBUG: org.mybatis.spring.SqlSessionUtils - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1e3777e8]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1e3777e8]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1e3777e8]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1e3777e8]
DEBUG: first.common.logger.LoggerAspect - Controller  	:  first.builder.controller.BuilderController.getTestPage()
DEBUG: first.common.logger.LoggerAspect - ServiceImpl  	:  first.builder.service.BuilderService.getHostByAccount()
DEBUG: first.common.logger.LoggerAspect - DAO  		:  first.builder.dao.BuilderDAO.getHostByAccount()
DEBUG: first.builder.dao.AbstractDAO - 	 QueryId  	:  builder.getHostByAccount
DEBUG: org.mybatis.spring.SqlSessionUtils - Creating a new SqlSession
DEBUG: org.mybatis.spring.SqlSessionUtils - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@a8d72e0]
DEBUG: org.mybatis.spring.transaction.SpringManagedTransaction - JDBC Connection [net.sf.log4jdbc.ConnectionSpy@3a9d3a73] will be managed by Spring
2024-03-04 11:37:11,189  INFO SQL(simplebot)        :  SELECT Host
		From Account
		Where No=1636
DEBUG: org.mybatis.spring.SqlSessionUtils - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@a8d72e0]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@a8d72e0]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@a8d72e0]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@a8d72e0]
DEBUG: first.common.logger.LoggerAspect - Controller  	:  first.builder.controller.BuilderController.getTestPage()
DEBUG: first.common.logger.LoggerAspect - ServiceImpl  	:  first.builder.service.BuilderService.getHostByAccount()
DEBUG: first.common.logger.LoggerAspect - DAO  		:  first.builder.dao.BuilderDAO.getHostByAccount()
DEBUG: first.builder.dao.AbstractDAO - 	 QueryId  	:  builder.getHostByAccount
DEBUG: org.mybatis.spring.SqlSessionUtils - Creating a new SqlSession
DEBUG: org.mybatis.spring.SqlSessionUtils - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@2e9a9939]
DEBUG: org.mybatis.spring.transaction.SpringManagedTransaction - JDBC Connection [net.sf.log4jdbc.ConnectionSpy@1132292e] will be managed by Spring
2024-03-04 11:37:27,787  INFO SQL(simplebot)        :  SELECT Host
		From Account
		Where No=1636
DEBUG: org.mybatis.spring.SqlSessionUtils - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@2e9a9939]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@2e9a9939]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@2e9a9939]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@2e9a9939]
DEBUG: first.common.logger.LoggerAspect - Controller  	:  first.builder.controller.BuilderController.getTestPage()
DEBUG: first.common.logger.LoggerAspect - ServiceImpl  	:  first.builder.service.BuilderService.getHostByAccount()
DEBUG: first.common.logger.LoggerAspect - DAO  		:  first.builder.dao.BuilderDAO.getHostByAccount()
DEBUG: first.builder.dao.AbstractDAO - 	 QueryId  	:  builder.getHostByAccount
DEBUG: org.mybatis.spring.SqlSessionUtils - Creating a new SqlSession
DEBUG: org.mybatis.spring.SqlSessionUtils - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@65ac7ce5]
DEBUG: org.mybatis.spring.transaction.SpringManagedTransaction - JDBC Connection [net.sf.log4jdbc.ConnectionSpy@799cf1f9] will be managed by Spring
2024-03-04 11:38:44,572  INFO SQL(simplebot)        :  SELECT Host
		From Account
		Where No=1636
DEBUG: org.mybatis.spring.SqlSessionUtils - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@65ac7ce5]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@65ac7ce5]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@65ac7ce5]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@65ac7ce5]
04-Mar-2024 11:42:51.463 INFO [ContainerBackgroundProcessor[StandardEngine[Catalina]]] org.apache.catalina.startup.HostConfig.undeploy Undeploying context [/sds-builder]
04-Mar-2024 11:42:51.479 WARNING [ContainerBackgroundProcessor[StandardEngine[Catalina]]] org.apache.catalina.loader.WebappClassLoaderBase.clearReferencesJdbc The web application [sds-builder] registered the JDBC driver [com.mysql.jdbc.Driver] but failed to unregister it when the web application was stopped. To prevent a memory leak, the JDBC Driver has been forcibly unregistered.
04-Mar-2024 11:42:51.480 WARNING [ContainerBackgroundProcessor[StandardEngine[Catalina]]] org.apache.catalina.loader.WebappClassLoaderBase.clearReferencesJdbc The web application [sds-builder] registered the JDBC driver [net.sf.log4jdbc.DriverSpy] but failed to unregister it when the web application was stopped. To prevent a memory leak, the JDBC Driver has been forcibly unregistered.
04-Mar-2024 11:42:51.480 WARNING [ContainerBackgroundProcessor[StandardEngine[Catalina]]] org.apache.catalina.loader.WebappClassLoaderBase.clearReferencesJdbc The web application [sds-builder] registered the JDBC driver [com.microsoft.sqlserver.jdbc.SQLServerDriver] but failed to unregister it when the web application was stopped. To prevent a memory leak, the JDBC Driver has been forcibly unregistered.
04-Mar-2024 11:42:51.481 WARNING [ContainerBackgroundProcessor[StandardEngine[Catalina]]] org.apache.catalina.loader.WebappClassLoaderBase.clearReferencesThreads The web application [sds-builder] appears to have started a thread named [mysql-cj-abandoned-connection-cleanup] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 java.lang.Object.wait(Native Method)
 java.lang.ref.ReferenceQueue.remove(ReferenceQueue.java:144)
 com.mysql.jdbc.AbandonedConnectionCleanupThread.run(AbandonedConnectionCleanupThread.java:80)
 java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
 java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
 java.lang.Thread.run(Thread.java:750)
04-Mar-2024 11:42:51.550 INFO [localhost-startStop-3] org.apache.catalina.startup.HostConfig.deployWAR Deploying web application archive [/home/minds/maum/sds-builder/apache-tomcat-8.5.99/webapps/sds-builder.war]
04-Mar-2024 11:42:53.296 INFO [mysql-cj-abandoned-connection-cleanup] org.apache.catalina.loader.WebappClassLoaderBase.checkStateForResourceLoading Illegal access: this web application instance has been stopped already. Could not load []. The following stack trace is thrown for debugging purposes as well as to attempt to terminate the thread which caused the illegal access.
	java.lang.IllegalStateException: Illegal access: this web application instance has been stopped already. Could not load []. The following stack trace is thrown for debugging purposes as well as to attempt to terminate the thread which caused the illegal access.
		at org.apache.catalina.loader.WebappClassLoaderBase.checkStateForResourceLoading(WebappClassLoaderBase.java:1358)
		at org.apache.catalina.loader.WebappClassLoaderBase.getResource(WebappClassLoaderBase.java:990)
		at com.mysql.jdbc.AbandonedConnectionCleanupThread.checkThreadContextClassLoader(AbandonedConnectionCleanupThread.java:112)
		at com.mysql.jdbc.AbandonedConnectionCleanupThread.run(AbandonedConnectionCleanupThread.java:79)
		at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
		at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
		at java.lang.Thread.run(Thread.java:750)
04-Mar-2024 11:42:53.296 INFO [mysql-cj-abandoned-connection-cleanup] org.apache.catalina.loader.WebappClassLoaderBase.checkStateForResourceLoading Illegal access: this web application instance has been stopped already. Could not load []. The following stack trace is thrown for debugging purposes as well as to attempt to terminate the thread which caused the illegal access.
	java.lang.IllegalStateException: Illegal access: this web application instance has been stopped already. Could not load []. The following stack trace is thrown for debugging purposes as well as to attempt to terminate the thread which caused the illegal access.
		at org.apache.catalina.loader.WebappClassLoaderBase.checkStateForResourceLoading(WebappClassLoaderBase.java:1358)
		at org.apache.catalina.loader.WebappClassLoaderBase.getResource(WebappClassLoaderBase.java:990)
		at com.mysql.jdbc.AbandonedConnectionCleanupThread.checkThreadContextClassLoader(AbandonedConnectionCleanupThread.java:112)
		at com.mysql.jdbc.AbandonedConnectionCleanupThread.run(AbandonedConnectionCleanupThread.java:79)
		at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
		at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
		at java.lang.Thread.run(Thread.java:750)
04-Mar-2024 11:42:53.297 INFO [mysql-cj-abandoned-connection-cleanup] org.apache.catalina.loader.WebappClassLoaderBase.checkStateForResourceLoading Illegal access: this web application instance has been stopped already. Could not load []. The following stack trace is thrown for debugging purposes as well as to attempt to terminate the thread which caused the illegal access.
	java.lang.IllegalStateException: Illegal access: this web application instance has been stopped already. Could not load []. The following stack trace is thrown for debugging purposes as well as to attempt to terminate the thread which caused the illegal access.
		at org.apache.catalina.loader.WebappClassLoaderBase.checkStateForResourceLoading(WebappClassLoaderBase.java:1358)
		at org.apache.catalina.loader.WebappClassLoaderBase.getResource(WebappClassLoaderBase.java:990)
		at com.mysql.jdbc.AbandonedConnectionCleanupThread.checkThreadContextClassLoader(AbandonedConnectionCleanupThread.java:112)
		at com.mysql.jdbc.AbandonedConnectionCleanupThread.run(AbandonedConnectionCleanupThread.java:79)
		at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
		at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
		at java.lang.Thread.run(Thread.java:750)
04-Mar-2024 11:42:53.297 INFO [mysql-cj-abandoned-connection-cleanup] org.apache.catalina.loader.WebappClassLoaderBase.checkStateForResourceLoading Illegal access: this web application instance has been stopped already. Could not load []. The following stack trace is thrown for debugging purposes as well as to attempt to terminate the thread which caused the illegal access.
	java.lang.IllegalStateException: Illegal access: this web application instance has been stopped already. Could not load []. The following stack trace is thrown for debugging purposes as well as to attempt to terminate the thread which caused the illegal access.
		at org.apache.catalina.loader.WebappClassLoaderBase.checkStateForResourceLoading(WebappClassLoaderBase.java:1358)
		at org.apache.catalina.loader.WebappClassLoaderBase.getResource(WebappClassLoaderBase.java:990)
		at com.mysql.jdbc.AbandonedConnectionCleanupThread.checkThreadContextClassLoader(AbandonedConnectionCleanupThread.java:112)
		at com.mysql.jdbc.AbandonedConnectionCleanupThread.run(AbandonedConnectionCleanupThread.java:79)
		at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
		at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
		at java.lang.Thread.run(Thread.java:750)
04-Mar-2024 11:42:53.944 INFO [localhost-startStop-3] org.apache.jasper.servlet.TldScanner.scanJars At least one JAR was scanned for TLDs yet contained no TLDs. Enable debug logging for this logger for a complete list of JARs that were scanned but no TLDs were found in them. Skipping unneeded JARs during scanning can improve startup time and JSP compilation time.
DEBUG: org.mybatis.spring.SqlSessionFactoryBean - Property 'configuration' or 'configLocation' not specified, using default MyBatis Configuration
DEBUG: org.mybatis.spring.SqlSessionFactoryBean - Parsed mapper file: 'file [/home/minds/maum/sds-builder/apache-tomcat-8.5.99/webapps/sds-builder/WEB-INF/classes/mapper/maria/Chatbot/Builder_SQL.xml]'
DEBUG: org.mybatis.spring.SqlSessionFactoryBean - Parsed mapper file: 'file [/home/minds/maum/sds-builder/apache-tomcat-8.5.99/webapps/sds-builder/WEB-INF/classes/mapper/maria/Chatbot/MaumSDS_SQL.xml]'
DEBUG: org.mybatis.spring.SqlSessionFactoryBean - Property 'configuration' or 'configLocation' not specified, using default MyBatis Configuration
DEBUG: org.mybatis.spring.SqlSessionFactoryBean - Parsed mapper file: 'file [/home/minds/maum/sds-builder/apache-tomcat-8.5.99/webapps/sds-builder/WEB-INF/classes/mapper/maria/HAPPYCALL4/NQA_SQL.xml]'
DEBUG: org.mybatis.spring.SqlSessionFactoryBean - Parsed mapper file: 'file [/home/minds/maum/sds-builder/apache-tomcat-8.5.99/webapps/sds-builder/WEB-INF/classes/mapper/maria/HAPPYCALL4/SimpleBot_SQL.xml]'
SimpleBot Execution Environment : prod
SimpleBot BertIntent itfIP : 0
SimpleBot BertIntent nerIP : 0
SimpleBot BL IP : 125.132.250.244
SimpleBot CM IP : 121.133.247.250
SimpleBot M2U rest address : http://localhost:9990
SimpleBot Style Resources Path : /home/minds/maum/sds-builder/imgUpload
Default Resources Make : chatbot.css
Default Resources Make : chatbot_custom.css
Default Resources Make : chatbot_floating.css
Default Resources Make : IconImg
Default Resources Make : logoImg
Default Resources Make : default
Default Resources Make : mindslab
Default Resources Make : redtie
Default Resource constructed.
DEBUG: first.common.logger.LoggerAspect - ServiceImpl  	:  first.builder.service.BuilderService.getNqaStatusChatbotList()
DEBUG: first.common.logger.LoggerAspect - DAO  		:  first.builder.dao.BuilderDAO.getNqaStatusChatbotList()
DEBUG: first.builder.dao.AbstractDAO - 	 QueryId  	:  builder.getNqaStatusChatbotList
DEBUG: org.mybatis.spring.SqlSessionUtils - Creating a new SqlSession
DEBUG: org.mybatis.spring.SqlSessionUtils - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@364b506b]
DEBUG: org.mybatis.spring.transaction.SpringManagedTransaction - JDBC Connection [net.sf.log4jdbc.ConnectionSpy@601580d4] will be managed by Spring
2024-03-04 11:42:55,394  INFO SQL(simplebot)        :  SELECT No as host, Name, 'preparation' as nqaUploadStatus
 from Account
		ORDER BY No
DEBUG: org.mybatis.spring.SqlSessionUtils - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@364b506b]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@364b506b]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@364b506b]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@364b506b]
04-Mar-2024 11:42:56.513 INFO [localhost-startStop-3] org.apache.catalina.startup.HostConfig.deployWAR Deployment of web application archive [/home/minds/maum/sds-builder/apache-tomcat-8.5.99/webapps/sds-builder.war] has finished in [4,963] ms
DEBUG: first.common.logger.LoggerAspect - Controller  	:  first.builder.controller.BuilderController.chatbotBuilderCommon()
DEBUG: first.common.logger.LoggerAspect - Controller  	:  first.builder.controller.BuilderController.getChatList()
DEBUG: first.common.logger.LoggerAspect - ServiceImpl  	:  first.builder.service.BuilderService.getChatbotList()
DEBUG: first.common.logger.LoggerAspect - DAO  		:  first.builder.dao.BuilderDAO.getChatbotList()
DEBUG: first.builder.dao.AbstractDAO - 	 QueryId  	:  builder.getChatbotList
DEBUG: org.mybatis.spring.SqlSessionUtils - Creating a new SqlSession
DEBUG: org.mybatis.spring.SqlSessionUtils - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@5a3796cd]
DEBUG: org.mybatis.spring.transaction.SpringManagedTransaction - JDBC Connection [net.sf.log4jdbc.ConnectionSpy@65e19045] will be managed by Spring
2024-03-04 11:43:20,629  INFO SQL(simplebot)        :  SELECT  /* No, Name, Host, Language */
			*
		from Account WHERE 1=1
		AND No IN
		 
				 (  
					'1636'
				 ) 
			 

		 
		ORDER BY No
DEBUG: org.mybatis.spring.SqlSessionUtils - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@5a3796cd]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@5a3796cd]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@5a3796cd]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@5a3796cd]
DEBUG: first.common.logger.LoggerAspect - Controller  	:  first.builder.controller.BuilderController.builderContentsAnswer()
DEBUG: first.common.logger.LoggerAspect - Controller  	:  first.builder.controller.BuilderController.builderBottomAnswer()
DEBUG: first.common.logger.LoggerAspect - Controller  	:  first.builder.controller.BuilderController.getTask()
DEBUG: first.common.logger.LoggerAspect - ServiceImpl  	:  first.builder.service.BuilderService.getTaskCount()
DEBUG: first.common.logger.LoggerAspect - DAO  		:  first.builder.dao.BuilderDAO.getTaskCount()
DEBUG: first.builder.dao.AbstractDAO - 	 QueryId  	:  builder.getTaskCount
DEBUG: org.mybatis.spring.SqlSessionUtils - Creating a new SqlSession
DEBUG: org.mybatis.spring.SqlSessionUtils - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@748e15da]
DEBUG: org.mybatis.spring.transaction.SpringManagedTransaction - JDBC Connection [net.sf.log4jdbc.ConnectionSpy@750a371f] will be managed by Spring
2024-03-04 11:43:20,822  INFO SQL(simplebot)        :  SELECT COUNT(*) FROM Intent WHERE Account=1636
 and Language=1
DEBUG: org.mybatis.spring.SqlSessionUtils - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@748e15da]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@748e15da]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@748e15da]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@748e15da]
DEBUG: first.common.logger.LoggerAspect - ServiceImpl  	:  first.builder.service.BuilderService.getAnswerList()
DEBUG: first.common.logger.LoggerAspect - DAO  		:  first.builder.dao.BuilderDAO.getAnswerList()
DEBUG: first.builder.dao.AbstractDAO - 	 QueryId  	:  builder.getAnswerList
DEBUG: org.mybatis.spring.SqlSessionUtils - Creating a new SqlSession
DEBUG: org.mybatis.spring.SqlSessionUtils - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@513d6cc9]
DEBUG: org.mybatis.spring.transaction.SpringManagedTransaction - JDBC Connection [net.sf.log4jdbc.ConnectionSpy@6a6fc508] will be managed by Spring
2024-03-04 11:43:20,828  INFO SQL(simplebot)        :  SELECT I.No, I.Main, I.Name, A.answer, I.Account
		FROM Intent I LEFT OUTER JOIN Answer A
		ON I.Answer = A.No
		WHERE I.Account=1636
 and I.Language=1
		ORDER BY I.No
		OFFSET 0 ROWS
		FETCH NEXT 15 ROWS ONLY
DEBUG: org.mybatis.spring.SqlSessionUtils - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@513d6cc9]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@513d6cc9]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@513d6cc9]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@513d6cc9]
DEBUG: first.common.logger.LoggerAspect - ServiceImpl  	:  first.builder.service.BuilderService.getAllIntents()
DEBUG: first.common.logger.LoggerAspect - DAO  		:  first.builder.dao.BuilderDAO.getAllIntents()
DEBUG: first.builder.dao.AbstractDAO - 	 QueryId  	:  builder.getAllIntents
DEBUG: org.mybatis.spring.SqlSessionUtils - Creating a new SqlSession
DEBUG: org.mybatis.spring.SqlSessionUtils - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@2d8823ed]
DEBUG: org.mybatis.spring.transaction.SpringManagedTransaction - JDBC Connection [net.sf.log4jdbc.ConnectionSpy@d0ecd24] will be managed by Spring
2024-03-04 11:43:20,840  INFO SQL(simplebot)        :  SELECT I.No, I.Main, I.Name,I.Next, I.URL, I.Language
		FROM Intent I
		WHERE I.Account=1636
		ORDER BY I.No
DEBUG: org.mybatis.spring.SqlSessionUtils - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@2d8823ed]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@2d8823ed]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@2d8823ed]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@2d8823ed]
DEBUG: first.common.logger.LoggerAspect - ServiceImpl  	:  first.builder.service.BuilderService.getAllBertIntents()
DEBUG: first.common.logger.LoggerAspect - DAO  		:  first.builder.dao.BuilderDAO.getAllBertIntents()
DEBUG: first.builder.dao.AbstractDAO - 	 QueryId  	:  builder.getAllBertIntents
DEBUG: org.mybatis.spring.SqlSessionUtils - Creating a new SqlSession
DEBUG: org.mybatis.spring.SqlSessionUtils - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@3d97befb]
DEBUG: org.mybatis.spring.transaction.SpringManagedTransaction - JDBC Connection [net.sf.log4jdbc.ConnectionSpy@1ecf6ac5] will be managed by Spring
2024-03-04 11:43:20,847  INFO SQL(simplebot)        :  SELECT B.No, B.Name, B.Language
		FROM BertIntent B LEFT OUTER JOIN BackendInfo BI
		ON B.BertItfId = BI.id
		WHERE BI.host=1636
		ORDER BY B.No
DEBUG: org.mybatis.spring.SqlSessionUtils - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@3d97befb]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@3d97befb]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@3d97befb]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@3d97befb]
DEBUG: first.common.logger.LoggerAspect - Controller  	:  first.builder.controller.BuilderController.getTask()
DEBUG: first.common.logger.LoggerAspect - ServiceImpl  	:  first.builder.service.BuilderService.getTaskCount()
DEBUG: first.common.logger.LoggerAspect - DAO  		:  first.builder.dao.BuilderDAO.getTaskCount()
DEBUG: first.builder.dao.AbstractDAO - 	 QueryId  	:  builder.getTaskCount
DEBUG: org.mybatis.spring.SqlSessionUtils - Creating a new SqlSession
DEBUG: org.mybatis.spring.SqlSessionUtils - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@49cc43a5]
DEBUG: org.mybatis.spring.transaction.SpringManagedTransaction - JDBC Connection [net.sf.log4jdbc.ConnectionSpy@6ede3734] will be managed by Spring
2024-03-04 11:43:20,883  INFO SQL(simplebot)        :  SELECT COUNT(*) FROM Intent WHERE Account=1636
 and Language=1
DEBUG: org.mybatis.spring.SqlSessionUtils - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@49cc43a5]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@49cc43a5]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@49cc43a5]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@49cc43a5]
DEBUG: first.common.logger.LoggerAspect - ServiceImpl  	:  first.builder.service.BuilderService.getAnswerList()
DEBUG: first.common.logger.LoggerAspect - DAO  		:  first.builder.dao.BuilderDAO.getAnswerList()
DEBUG: first.builder.dao.AbstractDAO - 	 QueryId  	:  builder.getAnswerList
DEBUG: org.mybatis.spring.SqlSessionUtils - Creating a new SqlSession
DEBUG: org.mybatis.spring.SqlSessionUtils - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@68afa3ff]
DEBUG: org.mybatis.spring.transaction.SpringManagedTransaction - JDBC Connection [net.sf.log4jdbc.ConnectionSpy@5d227c0d] will be managed by Spring
2024-03-04 11:43:20,889  INFO SQL(simplebot)        :  SELECT I.No, I.Main, I.Name, A.answer, I.Account
		FROM Intent I LEFT OUTER JOIN Answer A
		ON I.Answer = A.No
		WHERE I.Account=1636
 and I.Language=1
		ORDER BY I.No
		OFFSET 0 ROWS
		FETCH NEXT 15 ROWS ONLY
DEBUG: org.mybatis.spring.SqlSessionUtils - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@68afa3ff]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@68afa3ff]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@68afa3ff]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@68afa3ff]
DEBUG: first.common.logger.LoggerAspect - ServiceImpl  	:  first.builder.service.BuilderService.getAllIntents()
DEBUG: first.common.logger.LoggerAspect - DAO  		:  first.builder.dao.BuilderDAO.getAllIntents()
DEBUG: first.builder.dao.AbstractDAO - 	 QueryId  	:  builder.getAllIntents
DEBUG: org.mybatis.spring.SqlSessionUtils - Creating a new SqlSession
DEBUG: org.mybatis.spring.SqlSessionUtils - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@f8f792]
DEBUG: org.mybatis.spring.transaction.SpringManagedTransaction - JDBC Connection [net.sf.log4jdbc.ConnectionSpy@21385e71] will be managed by Spring
2024-03-04 11:43:20,894  INFO SQL(simplebot)        :  SELECT I.No, I.Main, I.Name,I.Next, I.URL, I.Language
		FROM Intent I
		WHERE I.Account=1636
		ORDER BY I.No
DEBUG: org.mybatis.spring.SqlSessionUtils - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@f8f792]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@f8f792]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@f8f792]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@f8f792]
DEBUG: first.common.logger.LoggerAspect - ServiceImpl  	:  first.builder.service.BuilderService.getAllBertIntents()
DEBUG: first.common.logger.LoggerAspect - DAO  		:  first.builder.dao.BuilderDAO.getAllBertIntents()
DEBUG: first.builder.dao.AbstractDAO - 	 QueryId  	:  builder.getAllBertIntents
DEBUG: org.mybatis.spring.SqlSessionUtils - Creating a new SqlSession
DEBUG: org.mybatis.spring.SqlSessionUtils - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@68be69b0]
DEBUG: org.mybatis.spring.transaction.SpringManagedTransaction - JDBC Connection [net.sf.log4jdbc.ConnectionSpy@4c1ad54b] will be managed by Spring
2024-03-04 11:43:20,899  INFO SQL(simplebot)        :  SELECT B.No, B.Name, B.Language
		FROM BertIntent B LEFT OUTER JOIN BackendInfo BI
		ON B.BertItfId = BI.id
		WHERE BI.host=1636
		ORDER BY B.No
DEBUG: org.mybatis.spring.SqlSessionUtils - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@68be69b0]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@68be69b0]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@68be69b0]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@68be69b0]
DEBUG: first.common.logger.LoggerAspect - Controller  	:  first.builder.controller.BuilderController.getTestPage()
DEBUG: first.common.logger.LoggerAspect - ServiceImpl  	:  first.builder.service.BuilderService.getHostByAccount()
DEBUG: first.common.logger.LoggerAspect - DAO  		:  first.builder.dao.BuilderDAO.getHostByAccount()
DEBUG: first.builder.dao.AbstractDAO - 	 QueryId  	:  builder.getHostByAccount
DEBUG: org.mybatis.spring.SqlSessionUtils - Creating a new SqlSession
DEBUG: org.mybatis.spring.SqlSessionUtils - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1c348ba4]
DEBUG: org.mybatis.spring.transaction.SpringManagedTransaction - JDBC Connection [net.sf.log4jdbc.ConnectionSpy@37b1130b] will be managed by Spring
2024-03-04 11:43:24,625  INFO SQL(simplebot)        :  SELECT Host
		From Account
		Where No=1636
DEBUG: org.mybatis.spring.SqlSessionUtils - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1c348ba4]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1c348ba4]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1c348ba4]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1c348ba4]
DEBUG: first.common.logger.LoggerAspect - Controller  	:  first.builder.controller.BuilderController.builderContentsSetting()
DEBUG: first.common.logger.LoggerAspect - Controller  	:  first.builder.controller.BuilderController.builderBottomSetting()
DEBUG: first.common.logger.LoggerAspect - Controller  	:  first.builder.controller.BuilderController.getSetting()
DEBUG: first.common.logger.LoggerAspect - ServiceImpl  	:  first.builder.service.BuilderService.getSettingVal()
DEBUG: first.common.logger.LoggerAspect - DAO  		:  first.builder.dao.BuilderDAO.getSettingVal()
DEBUG: first.builder.dao.AbstractDAO - 	 QueryId  	:  builder.getSettingVal
DEBUG: org.mybatis.spring.SqlSessionUtils - Creating a new SqlSession
DEBUG: org.mybatis.spring.SqlSessionUtils - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@4a5a8f7c]
DEBUG: org.mybatis.spring.transaction.SpringManagedTransaction - JDBC Connection [net.sf.log4jdbc.ConnectionSpy@1a5e3dde] will be managed by Spring
2024-03-04 11:43:52,347  INFO SQL(simplebot)        :  SELECT AC.Name, AC.Email, AC.HOST, AC.Description
		FROM Account AC
		WHERE No=1636
DEBUG: org.mybatis.spring.SqlSessionUtils - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@4a5a8f7c]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@4a5a8f7c]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@4a5a8f7c]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@4a5a8f7c]
DEBUG: first.common.logger.LoggerAspect - ServiceImpl  	:  first.builder.service.BuilderService.getStyleCSS()
DEBUG: first.common.logger.LoggerAspect - DAO  		:  first.builder.dao.BuilderDAO.getStyleCSS()
DEBUG: first.builder.dao.AbstractDAO - 	 QueryId  	:  builder.getStyleCSS
DEBUG: org.mybatis.spring.SqlSessionUtils - Creating a new SqlSession
DEBUG: org.mybatis.spring.SqlSessionUtils - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1f7508a7]
DEBUG: org.mybatis.spring.transaction.SpringManagedTransaction - JDBC Connection [net.sf.log4jdbc.ConnectionSpy@17b2f7a8] will be managed by Spring
2024-03-04 11:43:52,351  INFO SQL(simplebot)        :  SELECT *
		FROM style_css SC
		WHERE host=1636
DEBUG: org.mybatis.spring.SqlSessionUtils - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1f7508a7]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1f7508a7]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1f7508a7]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1f7508a7]
DEBUG: first.common.logger.LoggerAspect - Controller  	:  first.builder.controller.BuilderController.settingFile()
java.io.FileNotFoundException: /home/minds/maum/sds-builder/imgUpload/1636/IconImg (No such file or directory)
DEBUG: first.common.logger.LoggerAspect - Controller  	:  first.builder.controller.BuilderController.settingFile()
java.io.FileNotFoundException: /home/minds/maum/sds-builder/imgUpload/1636/logoImg (No such file or directory)
DEBUG: first.common.logger.LoggerAspect - Controller  	:  first.builder.controller.BuilderController.settingFile()
java.io.FileNotFoundException: /home/minds/maum/sds-builder/imgUpload/1636/IconImg (No such file or directory)
DEBUG: first.common.logger.LoggerAspect - Controller  	:  first.builder.controller.BuilderController.settingFile()
java.io.FileNotFoundException: /home/minds/maum/sds-builder/imgUpload/1636/logoImg (No such file or directory)
DEBUG: first.common.logger.LoggerAspect - Controller  	:  first.builder.controller.BuilderController.chatbotBuilderCommon()
DEBUG: first.common.logger.LoggerAspect - Controller  	:  first.builder.controller.BuilderController.getChatList()
DEBUG: first.common.logger.LoggerAspect - ServiceImpl  	:  first.builder.service.BuilderService.getChatbotList()
DEBUG: first.common.logger.LoggerAspect - DAO  		:  first.builder.dao.BuilderDAO.getChatbotList()
DEBUG: first.builder.dao.AbstractDAO - 	 QueryId  	:  builder.getChatbotList
DEBUG: org.mybatis.spring.SqlSessionUtils - Creating a new SqlSession
DEBUG: org.mybatis.spring.SqlSessionUtils - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@4edb1e91]
DEBUG: org.mybatis.spring.transaction.SpringManagedTransaction - JDBC Connection [net.sf.log4jdbc.ConnectionSpy@540a69c9] will be managed by Spring
2024-03-04 11:53:03,928  INFO SQL(simplebot)        :  SELECT  /* No, Name, Host, Language */
			*
		from Account WHERE 1=1
		AND No IN
		 
				 (  
					'1636'
				 ) 
			 

		 
		ORDER BY No
DEBUG: org.mybatis.spring.SqlSessionUtils - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@4edb1e91]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@4edb1e91]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@4edb1e91]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@4edb1e91]
DEBUG: first.common.logger.LoggerAspect - Controller  	:  first.builder.controller.BuilderController.builderContentsAnswer()
DEBUG: first.common.logger.LoggerAspect - Controller  	:  first.builder.controller.BuilderController.builderBottomAnswer()
DEBUG: first.common.logger.LoggerAspect - Controller  	:  first.builder.controller.BuilderController.getTask()
DEBUG: first.common.logger.LoggerAspect - ServiceImpl  	:  first.builder.service.BuilderService.getTaskCount()
DEBUG: first.common.logger.LoggerAspect - DAO  		:  first.builder.dao.BuilderDAO.getTaskCount()
DEBUG: first.builder.dao.AbstractDAO - 	 QueryId  	:  builder.getTaskCount
DEBUG: org.mybatis.spring.SqlSessionUtils - Creating a new SqlSession
DEBUG: org.mybatis.spring.SqlSessionUtils - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@62c6b292]
DEBUG: org.mybatis.spring.transaction.SpringManagedTransaction - JDBC Connection [net.sf.log4jdbc.ConnectionSpy@392b0c7d] will be managed by Spring
2024-03-04 11:53:03,970  INFO SQL(simplebot)        :  SELECT COUNT(*) FROM Intent WHERE Account=1636
 and Language=1
DEBUG: org.mybatis.spring.SqlSessionUtils - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@62c6b292]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@62c6b292]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@62c6b292]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@62c6b292]
DEBUG: first.common.logger.LoggerAspect - ServiceImpl  	:  first.builder.service.BuilderService.getAnswerList()
DEBUG: first.common.logger.LoggerAspect - DAO  		:  first.builder.dao.BuilderDAO.getAnswerList()
DEBUG: first.builder.dao.AbstractDAO - 	 QueryId  	:  builder.getAnswerList
DEBUG: org.mybatis.spring.SqlSessionUtils - Creating a new SqlSession
DEBUG: org.mybatis.spring.SqlSessionUtils - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@43a574a3]
DEBUG: org.mybatis.spring.transaction.SpringManagedTransaction - JDBC Connection [net.sf.log4jdbc.ConnectionSpy@1ab227d6] will be managed by Spring
2024-03-04 11:53:03,975  INFO SQL(simplebot)        :  SELECT I.No, I.Main, I.Name, A.answer, I.Account
		FROM Intent I LEFT OUTER JOIN Answer A
		ON I.Answer = A.No
		WHERE I.Account=1636
 and I.Language=1
		ORDER BY I.No
		OFFSET 0 ROWS
		FETCH NEXT 15 ROWS ONLY
DEBUG: org.mybatis.spring.SqlSessionUtils - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@43a574a3]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@43a574a3]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@43a574a3]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@43a574a3]
DEBUG: first.common.logger.LoggerAspect - ServiceImpl  	:  first.builder.service.BuilderService.getAllIntents()
DEBUG: first.common.logger.LoggerAspect - DAO  		:  first.builder.dao.BuilderDAO.getAllIntents()
DEBUG: first.builder.dao.AbstractDAO - 	 QueryId  	:  builder.getAllIntents
DEBUG: org.mybatis.spring.SqlSessionUtils - Creating a new SqlSession
DEBUG: org.mybatis.spring.SqlSessionUtils - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@14810274]
DEBUG: org.mybatis.spring.transaction.SpringManagedTransaction - JDBC Connection [net.sf.log4jdbc.ConnectionSpy@d330a1b] will be managed by Spring
2024-03-04 11:53:03,980  INFO SQL(simplebot)        :  SELECT I.No, I.Main, I.Name,I.Next, I.URL, I.Language
		FROM Intent I
		WHERE I.Account=1636
		ORDER BY I.No
DEBUG: org.mybatis.spring.SqlSessionUtils - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@14810274]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@14810274]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@14810274]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@14810274]
DEBUG: first.common.logger.LoggerAspect - ServiceImpl  	:  first.builder.service.BuilderService.getAllBertIntents()
DEBUG: first.common.logger.LoggerAspect - DAO  		:  first.builder.dao.BuilderDAO.getAllBertIntents()
DEBUG: first.builder.dao.AbstractDAO - 	 QueryId  	:  builder.getAllBertIntents
DEBUG: org.mybatis.spring.SqlSessionUtils - Creating a new SqlSession
DEBUG: org.mybatis.spring.SqlSessionUtils - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@3e1ac34b]
DEBUG: org.mybatis.spring.transaction.SpringManagedTransaction - JDBC Connection [net.sf.log4jdbc.ConnectionSpy@12e5cf29] will be managed by Spring
2024-03-04 11:53:03,984  INFO SQL(simplebot)        :  SELECT B.No, B.Name, B.Language
		FROM BertIntent B LEFT OUTER JOIN BackendInfo BI
		ON B.BertItfId = BI.id
		WHERE BI.host=1636
		ORDER BY B.No
DEBUG: org.mybatis.spring.SqlSessionUtils - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@3e1ac34b]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@3e1ac34b]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@3e1ac34b]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@3e1ac34b]
DEBUG: first.common.logger.LoggerAspect - Controller  	:  first.builder.controller.BuilderController.getTask()
DEBUG: first.common.logger.LoggerAspect - ServiceImpl  	:  first.builder.service.BuilderService.getTaskCount()
DEBUG: first.common.logger.LoggerAspect - DAO  		:  first.builder.dao.BuilderDAO.getTaskCount()
DEBUG: first.builder.dao.AbstractDAO - 	 QueryId  	:  builder.getTaskCount
DEBUG: org.mybatis.spring.SqlSessionUtils - Creating a new SqlSession
DEBUG: org.mybatis.spring.SqlSessionUtils - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1a03cceb]
DEBUG: org.mybatis.spring.transaction.SpringManagedTransaction - JDBC Connection [net.sf.log4jdbc.ConnectionSpy@584bcd4b] will be managed by Spring
2024-03-04 11:53:04,033  INFO SQL(simplebot)        :  SELECT COUNT(*) FROM Intent WHERE Account=1636
 and Language=1
DEBUG: org.mybatis.spring.SqlSessionUtils - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1a03cceb]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1a03cceb]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1a03cceb]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1a03cceb]
DEBUG: first.common.logger.LoggerAspect - ServiceImpl  	:  first.builder.service.BuilderService.getAnswerList()
DEBUG: first.common.logger.LoggerAspect - DAO  		:  first.builder.dao.BuilderDAO.getAnswerList()
DEBUG: first.builder.dao.AbstractDAO - 	 QueryId  	:  builder.getAnswerList
DEBUG: org.mybatis.spring.SqlSessionUtils - Creating a new SqlSession
DEBUG: org.mybatis.spring.SqlSessionUtils - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@5fd4e145]
DEBUG: org.mybatis.spring.transaction.SpringManagedTransaction - JDBC Connection [net.sf.log4jdbc.ConnectionSpy@759c13ed] will be managed by Spring
2024-03-04 11:53:04,038  INFO SQL(simplebot)        :  SELECT I.No, I.Main, I.Name, A.answer, I.Account
		FROM Intent I LEFT OUTER JOIN Answer A
		ON I.Answer = A.No
		WHERE I.Account=1636
 and I.Language=1
		ORDER BY I.No
		OFFSET 0 ROWS
		FETCH NEXT 15 ROWS ONLY
DEBUG: org.mybatis.spring.SqlSessionUtils - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@5fd4e145]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@5fd4e145]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@5fd4e145]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@5fd4e145]
DEBUG: first.common.logger.LoggerAspect - ServiceImpl  	:  first.builder.service.BuilderService.getAllIntents()
DEBUG: first.common.logger.LoggerAspect - DAO  		:  first.builder.dao.BuilderDAO.getAllIntents()
DEBUG: first.builder.dao.AbstractDAO - 	 QueryId  	:  builder.getAllIntents
DEBUG: org.mybatis.spring.SqlSessionUtils - Creating a new SqlSession
DEBUG: org.mybatis.spring.SqlSessionUtils - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@17f1b2ed]
DEBUG: org.mybatis.spring.transaction.SpringManagedTransaction - JDBC Connection [net.sf.log4jdbc.ConnectionSpy@383b5b1d] will be managed by Spring
2024-03-04 11:53:04,043  INFO SQL(simplebot)        :  SELECT I.No, I.Main, I.Name,I.Next, I.URL, I.Language
		FROM Intent I
		WHERE I.Account=1636
		ORDER BY I.No
DEBUG: org.mybatis.spring.SqlSessionUtils - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@17f1b2ed]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@17f1b2ed]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@17f1b2ed]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@17f1b2ed]
DEBUG: first.common.logger.LoggerAspect - ServiceImpl  	:  first.builder.service.BuilderService.getAllBertIntents()
DEBUG: first.common.logger.LoggerAspect - DAO  		:  first.builder.dao.BuilderDAO.getAllBertIntents()
DEBUG: first.builder.dao.AbstractDAO - 	 QueryId  	:  builder.getAllBertIntents
DEBUG: org.mybatis.spring.SqlSessionUtils - Creating a new SqlSession
DEBUG: org.mybatis.spring.SqlSessionUtils - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@7b2b40f8]
DEBUG: org.mybatis.spring.transaction.SpringManagedTransaction - JDBC Connection [net.sf.log4jdbc.ConnectionSpy@3837deec] will be managed by Spring
2024-03-04 11:53:04,048  INFO SQL(simplebot)        :  SELECT B.No, B.Name, B.Language
		FROM BertIntent B LEFT OUTER JOIN BackendInfo BI
		ON B.BertItfId = BI.id
		WHERE BI.host=1636
		ORDER BY B.No
DEBUG: org.mybatis.spring.SqlSessionUtils - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@7b2b40f8]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@7b2b40f8]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@7b2b40f8]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@7b2b40f8]
DEBUG: first.common.logger.LoggerAspect - Controller  	:  first.builder.controller.BuilderController.chatExcelDown()
DEBUG: first.common.logger.LoggerAspect - ServiceImpl  	:  first.builder.service.BuilderService.getChatLang()
DEBUG: first.common.logger.LoggerAspect - DAO  		:  first.builder.dao.BuilderDAO.getChatLang()
DEBUG: first.builder.dao.AbstractDAO - 	 QueryId  	:  builder.getChatLang
DEBUG: org.mybatis.spring.SqlSessionUtils - Creating a new SqlSession
DEBUG: org.mybatis.spring.SqlSessionUtils - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@4540c38e]
DEBUG: org.mybatis.spring.transaction.SpringManagedTransaction - JDBC Connection [net.sf.log4jdbc.ConnectionSpy@4fe69022] will be managed by Spring
2024-03-04 11:53:06,559  INFO SQL(simplebot)        :  SELECT Language FROM Account WHERE No = '1636'
DEBUG: org.mybatis.spring.SqlSessionUtils - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@4540c38e]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@4540c38e]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@4540c38e]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@4540c38e]
DEBUG: first.common.logger.LoggerAspect - ServiceImpl  	:  first.builder.service.BuilderService.getChatInfo()
DEBUG: first.common.logger.LoggerAspect - DAO  		:  first.builder.dao.BuilderDAO.getChatInfo()
DEBUG: first.builder.dao.AbstractDAO - 	 QueryId  	:  builder.getChatInfo
DEBUG: org.mybatis.spring.SqlSessionUtils - Creating a new SqlSession
DEBUG: org.mybatis.spring.SqlSessionUtils - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@14e8d55a]
DEBUG: org.mybatis.spring.transaction.SpringManagedTransaction - JDBC Connection [net.sf.log4jdbc.ConnectionSpy@1f0371e6] will be managed by Spring
2024-03-04 11:53:06,562  INFO SQL(simplebot)        :  SELECT
			   ROW_NUMBER() OVER (ORDER BY a.No) AS Row
			 , IFNULL(a.No,'') as No
			 , a.Main
			 , IFNULL(a.URL,'') as URL
			 , IFNULL(a.Next,'') as TmpNextIntent
			 , IFNULL(GROUP_CONCAT(IF(b.Language = 1, b.Name, NULL),''),'') as intentNmKr
			 , IFNULL(GROUP_CONCAT(IF(b.Language = 1, b.Description, NULL),''),'') as intentDescKr
			 , IFNULL(GROUP_CONCAT(IF(b.Language = 1, c.Answer, NULL),''),'') as answerKr
			 , IFNULL(GROUP_CONCAT(IF(b.Language = 2, b.Name, NULL),''),'') as intentNmEn
			 , IFNULL(GROUP_CONCAT(IF(b.Language = 2, b.Description, NULL),''),'') as intentDescEn
			 , IFNULL(GROUP_CONCAT(IF(b.Language = 2, c.Answer, NULL),''),'') as answerEn
			 , IFNULL(GROUP_CONCAT(IF(b.Language = 3, b.Name, NULL),''),'') as intentNmJp
			 , IFNULL(GROUP_CONCAT(IF(b.Language = 3, b.Description, NULL),''),'') as intentDescJp
			 , IFNULL(GROUP_CONCAT(IF(b.Language = 3, c.Answer, NULL),''),'') as answerJp
			 , IFNULL(GROUP_CONCAT(IF(b.Language = 4, b.Name, NULL),''),'') as intentNmCh
			 , IFNULL(GROUP_CONCAT(IF(b.Language = 4, b.Description, NULL),''),'') as intentDescCh
			 , IFNULL(GROUP_CONCAT(IF(b.Language = 4, c.Answer, NULL),''),'') as answerCh
			 , IFNULL(IF(b.Language = '1', c.Url, NULL),'') as customURL
		  FROM (
				 SELECT no
		    		  , language
		    		  , main
		    		  , name
		    		  , answer
		    		  , next
		    		  , url
		    		  , description
		    		  , account
				   FROM Intent
				  WHERE Account = '1636'
				  	AND Language = '1'
			    ) a
	  LEFT JOIN Intent b
			 ON b.Account = '1636'
			AND a.Main = b.Main
      LEFT JOIN Answer c
			 ON b.Answer = c.No
	   GROUP BY a.Main, a.No, a.URL, a.Next
	   ORDER BY a.No
DEBUG: org.mybatis.spring.SqlSessionUtils - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@14e8d55a]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@14e8d55a]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@14e8d55a]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@14e8d55a]
DEBUG: first.common.logger.LoggerAspect - ServiceImpl  	:  first.builder.service.BuilderService.getBertIntent()
DEBUG: first.common.logger.LoggerAspect - DAO  		:  first.builder.dao.BuilderDAO.getBertIntent()
DEBUG: first.builder.dao.AbstractDAO - 	 QueryId  	:  builder.getBertIntent
DEBUG: org.mybatis.spring.SqlSessionUtils - Creating a new SqlSession
DEBUG: org.mybatis.spring.SqlSessionUtils - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@68afeb68]
DEBUG: org.mybatis.spring.transaction.SpringManagedTransaction - JDBC Connection [net.sf.log4jdbc.ConnectionSpy@21c1c9f6] will be managed by Spring
2024-03-04 11:53:06,615  INFO SQL(simplebot)        :  SELECT IFNULL((SELECT Name FROM BertIntent WHERE Name = a.Name AND BertItfId = a.BertItfId AND Language = 1), '') AS bertIntentKr,
		 	   IFNULL((SELECT Name FROM BertIntent WHERE Name = a.Name AND BertItfId = a.BertItfId AND Language = 2), '') AS bertIntentEn,
		 	   IFNULL((SELECT Name FROM BertIntent WHERE Name = a.Name AND BertItfId = a.BertItfId AND Language = 3), '') AS bertIntentJp,
		 	   IFNULL((SELECT Name FROM BertIntent WHERE Name = a.Name AND BertItfId = a.BertItfId AND Language = 4), '') AS bertIntentCh
		  FROM BertIntent a INNER JOIN BackendInfo b ON a.BertItfId = b.id AND b.host = '1636' GROUP BY a.Name, a.BertItfId
DEBUG: org.mybatis.spring.SqlSessionUtils - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@68afeb68]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@68afeb68]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@68afeb68]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@68afeb68]
DEBUG: first.common.logger.LoggerAspect - ServiceImpl  	:  first.builder.service.BuilderService.getIntentRel()
DEBUG: first.common.logger.LoggerAspect - DAO  		:  first.builder.dao.BuilderDAO.getIntentRel()
DEBUG: first.builder.dao.AbstractDAO - 	 QueryId  	:  builder.getIntentRel
DEBUG: org.mybatis.spring.SqlSessionUtils - Creating a new SqlSession
DEBUG: org.mybatis.spring.SqlSessionUtils - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@5af1d6cf]
DEBUG: org.mybatis.spring.transaction.SpringManagedTransaction - JDBC Connection [net.sf.log4jdbc.ConnectionSpy@2b44f0c0] will be managed by Spring
2024-03-04 11:53:06,622  INFO SQL(simplebot)        :  SELECT IFNULL((SELECT Main FROM Intent WHERE No = a.SrcIntent), '*') AS Src_Task,
    				  (SELECT Main FROM Intent WHERE No = a.DestIntent) AS Dest_Task,
    				  (SELECT Name FROM BertIntent WHERE No = a.BertIntent) AS Bert_Intent
		  FROM IntentRel a LEFT OUTER JOIN Intent b ON a.DestIntent = b.No AND a.SrcIntent = b.No
		  LEFT OUTER JOIN BertIntent c ON a.BertIntent = c.No LEFT OUTER JOIN BackendInfo d ON c.BertItfId = d.id
 where c.Language = 1 AND d.host = '1636'
DEBUG: org.mybatis.spring.SqlSessionUtils - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@5af1d6cf]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@5af1d6cf]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@5af1d6cf]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@5af1d6cf]
DEBUG: first.common.logger.LoggerAspect - ServiceImpl  	:  first.builder.service.BuilderService.getIntentRel()
DEBUG: first.common.logger.LoggerAspect - DAO  		:  first.builder.dao.BuilderDAO.getIntentRel()
DEBUG: first.builder.dao.AbstractDAO - 	 QueryId  	:  builder.getIntentRel
DEBUG: org.mybatis.spring.SqlSessionUtils - Creating a new SqlSession
DEBUG: org.mybatis.spring.SqlSessionUtils - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@e1143b9]
DEBUG: org.mybatis.spring.transaction.SpringManagedTransaction - JDBC Connection [net.sf.log4jdbc.ConnectionSpy@4970d1cf] will be managed by Spring
2024-03-04 11:53:06,624  INFO SQL(simplebot)        :  SELECT IFNULL((SELECT Main FROM Intent WHERE No = a.SrcIntent), '*') AS Src_Task,
    				  (SELECT Main FROM Intent WHERE No = a.DestIntent) AS Dest_Task,
    				  (SELECT Name FROM BertIntent WHERE No = a.BertIntent) AS Bert_Intent
		  FROM IntentRel a LEFT OUTER JOIN Intent b ON a.DestIntent = b.No AND a.SrcIntent = b.No
		  LEFT OUTER JOIN BertIntent c ON a.BertIntent = c.No LEFT OUTER JOIN BackendInfo d ON c.BertItfId = d.id
 where c.Language = 4 AND d.host = '1636'
DEBUG: org.mybatis.spring.SqlSessionUtils - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@e1143b9]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@e1143b9]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@e1143b9]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@e1143b9]
DEBUG: first.common.logger.LoggerAspect - ServiceImpl  	:  first.builder.service.BuilderService.getIntentRel()
DEBUG: first.common.logger.LoggerAspect - DAO  		:  first.builder.dao.BuilderDAO.getIntentRel()
DEBUG: first.builder.dao.AbstractDAO - 	 QueryId  	:  builder.getIntentRel
DEBUG: org.mybatis.spring.SqlSessionUtils - Creating a new SqlSession
DEBUG: org.mybatis.spring.SqlSessionUtils - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@47e98db7]
DEBUG: org.mybatis.spring.transaction.SpringManagedTransaction - JDBC Connection [net.sf.log4jdbc.ConnectionSpy@7b55f4af] will be managed by Spring
2024-03-04 11:53:06,627  INFO SQL(simplebot)        :  SELECT IFNULL((SELECT Main FROM Intent WHERE No = a.SrcIntent), '*') AS Src_Task,
    				  (SELECT Main FROM Intent WHERE No = a.DestIntent) AS Dest_Task,
    				  (SELECT Name FROM BertIntent WHERE No = a.BertIntent) AS Bert_Intent
		  FROM IntentRel a LEFT OUTER JOIN Intent b ON a.DestIntent = b.No AND a.SrcIntent = b.No
		  LEFT OUTER JOIN BertIntent c ON a.BertIntent = c.No LEFT OUTER JOIN BackendInfo d ON c.BertItfId = d.id
 where c.Language = 3 AND d.host = '1636'
DEBUG: org.mybatis.spring.SqlSessionUtils - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@47e98db7]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@47e98db7]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@47e98db7]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@47e98db7]
DEBUG: first.common.logger.LoggerAspect - ServiceImpl  	:  first.builder.service.BuilderService.getIntentRel()
DEBUG: first.common.logger.LoggerAspect - DAO  		:  first.builder.dao.BuilderDAO.getIntentRel()
DEBUG: first.builder.dao.AbstractDAO - 	 QueryId  	:  builder.getIntentRel
DEBUG: org.mybatis.spring.SqlSessionUtils - Creating a new SqlSession
DEBUG: org.mybatis.spring.SqlSessionUtils - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@5088753d]
DEBUG: org.mybatis.spring.transaction.SpringManagedTransaction - JDBC Connection [net.sf.log4jdbc.ConnectionSpy@4a6bcee3] will be managed by Spring
2024-03-04 11:53:06,630  INFO SQL(simplebot)        :  SELECT IFNULL((SELECT Main FROM Intent WHERE No = a.SrcIntent), '*') AS Src_Task,
    				  (SELECT Main FROM Intent WHERE No = a.DestIntent) AS Dest_Task,
    				  (SELECT Name FROM BertIntent WHERE No = a.BertIntent) AS Bert_Intent
		  FROM IntentRel a LEFT OUTER JOIN Intent b ON a.DestIntent = b.No AND a.SrcIntent = b.No
		  LEFT OUTER JOIN BertIntent c ON a.BertIntent = c.No LEFT OUTER JOIN BackendInfo d ON c.BertItfId = d.id
 where c.Language = 2 AND d.host = '1636'
DEBUG: org.mybatis.spring.SqlSessionUtils - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@5088753d]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@5088753d]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@5088753d]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@5088753d]
DEBUG: first.common.logger.LoggerAspect - ServiceImpl  	:  first.builder.service.BuilderService.getFallback()
DEBUG: first.common.logger.LoggerAspect - DAO  		:  first.builder.dao.BuilderDAO.getFallback()
DEBUG: first.builder.dao.AbstractDAO - 	 QueryId  	:  builder.getFallback
DEBUG: org.mybatis.spring.SqlSessionUtils - Creating a new SqlSession
DEBUG: org.mybatis.spring.SqlSessionUtils - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@3136c457]
DEBUG: org.mybatis.spring.transaction.SpringManagedTransaction - JDBC Connection [net.sf.log4jdbc.ConnectionSpy@5e881d9e] will be managed by Spring
2024-03-04 11:53:06,637  INFO SQL(simplebot)        :  SELECT (SELECT Main FROM Intent WHERE No = b.Intent) AS Intent, b.language
		FROM Intent a INNER JOIN Fallback b ON a.No = b.Intent AND b.Host = '1636' ORDER BY b.Language
DEBUG: org.mybatis.spring.SqlSessionUtils - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@3136c457]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@3136c457]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@3136c457]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@3136c457]
DEBUG: first.common.logger.LoggerAspect - ServiceImpl  	:  first.builder.service.BuilderService.getEntitiesList()
DEBUG: first.common.logger.LoggerAspect - DAO  		:  first.builder.dao.BuilderDAO.getEntitiesList()
DEBUG: first.builder.dao.AbstractDAO - 	 QueryId  	:  builder.getEntitiesList
DEBUG: org.mybatis.spring.SqlSessionUtils - Creating a new SqlSession
DEBUG: org.mybatis.spring.SqlSessionUtils - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@74395a75]
DEBUG: org.mybatis.spring.transaction.SpringManagedTransaction - JDBC Connection [net.sf.log4jdbc.ConnectionSpy@43436e7f] will be managed by Spring
2024-03-04 11:53:06,642  INFO SQL(simplebot)        :  SELECT a.intent, a.name, a.Account, a.Language, a.val, a.Answer, b.Main
		FROM Entities a
				 LEFT JOIN Intent b ON a.intent = b.No AND a.Account = b.Account AND a.Language = b.Language
		WHERE a.Account = '1636' AND a.Language = 1
DEBUG: org.mybatis.spring.SqlSessionUtils - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@74395a75]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@74395a75]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@74395a75]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@74395a75]
DEBUG: first.common.logger.LoggerAspect - ServiceImpl  	:  first.builder.service.BuilderService.getEntitiesList()
DEBUG: first.common.logger.LoggerAspect - DAO  		:  first.builder.dao.BuilderDAO.getEntitiesList()
DEBUG: first.builder.dao.AbstractDAO - 	 QueryId  	:  builder.getEntitiesList
DEBUG: org.mybatis.spring.SqlSessionUtils - Creating a new SqlSession
DEBUG: org.mybatis.spring.SqlSessionUtils - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@330e1b26]
DEBUG: org.mybatis.spring.transaction.SpringManagedTransaction - JDBC Connection [net.sf.log4jdbc.ConnectionSpy@13aac6a1] will be managed by Spring
2024-03-04 11:53:06,645  INFO SQL(simplebot)        :  SELECT a.intent, a.name, a.Account, a.Language, a.val, a.Answer, b.Main
		FROM Entities a
				 LEFT JOIN Intent b ON a.intent = b.No AND a.Account = b.Account AND a.Language = b.Language
		WHERE a.Account = '1636' AND a.Language = 4
DEBUG: org.mybatis.spring.SqlSessionUtils - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@330e1b26]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@330e1b26]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@330e1b26]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@330e1b26]
DEBUG: first.common.logger.LoggerAspect - ServiceImpl  	:  first.builder.service.BuilderService.getEntitiesList()
DEBUG: first.common.logger.LoggerAspect - DAO  		:  first.builder.dao.BuilderDAO.getEntitiesList()
DEBUG: first.builder.dao.AbstractDAO - 	 QueryId  	:  builder.getEntitiesList
DEBUG: org.mybatis.spring.SqlSessionUtils - Creating a new SqlSession
DEBUG: org.mybatis.spring.SqlSessionUtils - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@386c7ec2]
DEBUG: org.mybatis.spring.transaction.SpringManagedTransaction - JDBC Connection [net.sf.log4jdbc.ConnectionSpy@111b428f] will be managed by Spring
2024-03-04 11:53:06,647  INFO SQL(simplebot)        :  SELECT a.intent, a.name, a.Account, a.Language, a.val, a.Answer, b.Main
		FROM Entities a
				 LEFT JOIN Intent b ON a.intent = b.No AND a.Account = b.Account AND a.Language = b.Language
		WHERE a.Account = '1636' AND a.Language = 3
DEBUG: org.mybatis.spring.SqlSessionUtils - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@386c7ec2]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@386c7ec2]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@386c7ec2]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@386c7ec2]
DEBUG: first.common.logger.LoggerAspect - ServiceImpl  	:  first.builder.service.BuilderService.getEntitiesList()
DEBUG: first.common.logger.LoggerAspect - DAO  		:  first.builder.dao.BuilderDAO.getEntitiesList()
DEBUG: first.builder.dao.AbstractDAO - 	 QueryId  	:  builder.getEntitiesList
DEBUG: org.mybatis.spring.SqlSessionUtils - Creating a new SqlSession
DEBUG: org.mybatis.spring.SqlSessionUtils - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@6dbff56]
DEBUG: org.mybatis.spring.transaction.SpringManagedTransaction - JDBC Connection [net.sf.log4jdbc.ConnectionSpy@5bf081ce] will be managed by Spring
2024-03-04 11:53:06,649  INFO SQL(simplebot)        :  SELECT a.intent, a.name, a.Account, a.Language, a.val, a.Answer, b.Main
		FROM Entities a
				 LEFT JOIN Intent b ON a.intent = b.No AND a.Account = b.Account AND a.Language = b.Language
		WHERE a.Account = '1636' AND a.Language = 2
DEBUG: org.mybatis.spring.SqlSessionUtils - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@6dbff56]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@6dbff56]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@6dbff56]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@6dbff56]
04-Mar-2024 11:53:06.706 WARNING [http-nio-18090-exec-30] org.apache.coyote.http11.Http11Processor.prepareResponse The HTTP response header [Content-Disposition] with value [attachment;filename=[chatbot] TASK_ANSWER_데이터.xlsx] has been removed from the response because it is invalid
	java.lang.IllegalArgumentException: The Unicode character [데] at code point [45,936] cannot be encoded as it is outside the permitted range of 0 to 255
		at org.apache.tomcat.util.buf.MessageBytes.toBytesSimple(MessageBytes.java:310)
		at org.apache.tomcat.util.buf.MessageBytes.toBytes(MessageBytes.java:283)
		at org.apache.coyote.http11.Http11OutputBuffer.write(Http11OutputBuffer.java:438)
		at org.apache.coyote.http11.Http11OutputBuffer.sendHeader(Http11OutputBuffer.java:417)
		at org.apache.coyote.http11.Http11Processor.prepareResponse(Http11Processor.java:1269)
		at org.apache.coyote.AbstractProcessor.action(AbstractProcessor.java:380)
		at org.apache.coyote.Response.action(Response.java:206)
		at org.apache.coyote.Response.sendHeaders(Response.java:415)
		at org.apache.catalina.connector.OutputBuffer.doFlush(OutputBuffer.java:309)
		at org.apache.catalina.connector.OutputBuffer.flush(OutputBuffer.java:289)
		at org.apache.catalina.connector.CoyoteOutputStream.flush(CoyoteOutputStream.java:120)
		at org.apache.commons.compress.archivers.zip.ZipArchiveOutputStream.flush(ZipArchiveOutputStream.java:979)
		at java.io.FilterOutputStream.flush(FilterOutputStream.java:140)
		at com.sun.org.apache.xml.internal.serializer.WriterToUTF8Buffered.flush(WriterToUTF8Buffered.java:472)
		at com.sun.org.apache.xml.internal.serializer.ToStream.flushWriter(ToStream.java:290)
		at com.sun.org.apache.xml.internal.serializer.ToXMLStream.endDocument(ToXMLStream.java:213)
		at com.sun.org.apache.xml.internal.serializer.ToUnknownStream.endDocument(ToUnknownStream.java:829)
		at com.sun.org.apache.xalan.internal.xsltc.trax.DOM2TO.parse(DOM2TO.java:137)
		at com.sun.org.apache.xalan.internal.xsltc.trax.DOM2TO.parse(DOM2TO.java:96)
		at com.sun.org.apache.xalan.internal.xsltc.trax.TransformerImpl.transformIdentity(TransformerImpl.java:686)
		at com.sun.org.apache.xalan.internal.xsltc.trax.TransformerImpl.transform(TransformerImpl.java:730)
		at com.sun.org.apache.xalan.internal.xsltc.trax.TransformerImpl.transform(TransformerImpl.java:345)
		at org.apache.poi.openxml4j.opc.StreamHelper.saveXmlInStream(StreamHelper.java:84)
		at org.apache.poi.openxml4j.opc.internal.ZipContentTypeManager.saveImpl(ZipContentTypeManager.java:69)
		at org.apache.poi.openxml4j.opc.internal.ContentTypeManager.save(ContentTypeManager.java:449)
		at org.apache.poi.openxml4j.opc.ZipPackage.saveImpl(ZipPackage.java:518)
		at org.apache.poi.openxml4j.opc.OPCPackage.save(OPCPackage.java:1489)
		at org.apache.poi.ooxml.POIXMLDocument.write(POIXMLDocument.java:242)
		at first.builder.controller.BuilderController.chatExcelDown(BuilderController.java:2118)
		at first.builder.controller.BuilderController$$FastClassBySpringCGLIB$$c1e54596.invoke(<generated>)
		at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
		at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:736)
		at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:157)
		at org.springframework.aop.aspectj.MethodInvocationProceedingJoinPoint.proceed(MethodInvocationProceedingJoinPoint.java:84)
		at first.common.logger.LoggerAspect.logPrint(LoggerAspect.java:29)
		at sun.reflect.GeneratedMethodAccessor125.invoke(Unknown Source)
		at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
		at java.lang.reflect.Method.invoke(Method.java:498)
		at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:627)
		at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:616)
		at org.springframework.aop.aspectj.AspectJAroundAdvice.invoke(AspectJAroundAdvice.java:70)
		at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
		at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:92)
		at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
		at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:671)
		at first.builder.controller.BuilderController$$EnhancerBySpringCGLIB$$adc88615.chatExcelDown(<generated>)
		at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
		at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
		at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
		at java.lang.reflect.Method.invoke(Method.java:498)
		at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:205)
		at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:133)
		at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:97)
		at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:849)
		at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:760)
		at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:85)
		at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:967)
		at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:901)
		at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:970)
		at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:861)
		at javax.servlet.http.HttpServlet.service(HttpServlet.java:489)
		at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:846)
		at javax.servlet.http.HttpServlet.service(HttpServlet.java:583)
		at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:212)
		at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:156)
		at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
		at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:181)
		at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:156)
		at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:197)
		at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
		at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:181)
		at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:156)
		at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:168)
		at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
		at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:483)
		at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:130)
		at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
		at org.apache.catalina.valves.AbstractAccessLogValve.invoke(AbstractAccessLogValve.java:679)
		at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
		at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:346)
		at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:617)
		at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
		at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:934)
		at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1698)
		at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
		at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
		at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
		at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
		at java.lang.Thread.run(Thread.java:750)
DEBUG: first.common.logger.LoggerAspect - Controller  	:  first.builder.controller.BuilderController.getTestPage()
DEBUG: first.common.logger.LoggerAspect - ServiceImpl  	:  first.builder.service.BuilderService.getHostByAccount()
DEBUG: first.common.logger.LoggerAspect - DAO  		:  first.builder.dao.BuilderDAO.getHostByAccount()
DEBUG: first.builder.dao.AbstractDAO - 	 QueryId  	:  builder.getHostByAccount
DEBUG: org.mybatis.spring.SqlSessionUtils - Creating a new SqlSession
DEBUG: org.mybatis.spring.SqlSessionUtils - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@6fb8692e]
DEBUG: org.mybatis.spring.transaction.SpringManagedTransaction - JDBC Connection [net.sf.log4jdbc.ConnectionSpy@31352048] will be managed by Spring
2024-03-04 11:53:55,948  INFO SQL(simplebot)        :  SELECT Host
		From Account
		Where No=1636
DEBUG: org.mybatis.spring.SqlSessionUtils - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@6fb8692e]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@6fb8692e]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@6fb8692e]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@6fb8692e]
DEBUG: first.common.logger.LoggerAspect - Controller  	:  first.builder.controller.BuilderController.excelSampleDown()
DEBUG: first.common.logger.LoggerAspect - ServiceImpl  	:  first.builder.service.BuilderService.getChatLang()
DEBUG: first.common.logger.LoggerAspect - DAO  		:  first.builder.dao.BuilderDAO.getChatLang()
DEBUG: first.builder.dao.AbstractDAO - 	 QueryId  	:  builder.getChatLang
DEBUG: org.mybatis.spring.SqlSessionUtils - Creating a new SqlSession
DEBUG: org.mybatis.spring.SqlSessionUtils - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@32208c7]
DEBUG: org.mybatis.spring.transaction.SpringManagedTransaction - JDBC Connection [net.sf.log4jdbc.ConnectionSpy@278e8d7b] will be managed by Spring
2024-03-04 11:54:31,946  INFO SQL(simplebot)        :  SELECT Language FROM Account WHERE No = '1636'
DEBUG: org.mybatis.spring.SqlSessionUtils - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@32208c7]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@32208c7]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@32208c7]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@32208c7]
04-Mar-2024 11:54:31.983 WARNING [http-nio-18090-exec-21] org.apache.coyote.http11.Http11Processor.prepareResponse The HTTP response header [Content-Disposition] with value [attachment;filename=[chatbot] TASK_ANSWER_샘플데이터.xlsx] has been removed from the response because it is invalid
	java.lang.IllegalArgumentException: The Unicode character [샘] at code point [49,368] cannot be encoded as it is outside the permitted range of 0 to 255
		at org.apache.tomcat.util.buf.MessageBytes.toBytesSimple(MessageBytes.java:310)
		at org.apache.tomcat.util.buf.MessageBytes.toBytes(MessageBytes.java:283)
		at org.apache.coyote.http11.Http11OutputBuffer.write(Http11OutputBuffer.java:438)
		at org.apache.coyote.http11.Http11OutputBuffer.sendHeader(Http11OutputBuffer.java:417)
		at org.apache.coyote.http11.Http11Processor.prepareResponse(Http11Processor.java:1269)
		at org.apache.coyote.AbstractProcessor.action(AbstractProcessor.java:380)
		at org.apache.coyote.Response.action(Response.java:206)
		at org.apache.coyote.Response.sendHeaders(Response.java:415)
		at org.apache.catalina.connector.OutputBuffer.doFlush(OutputBuffer.java:309)
		at org.apache.catalina.connector.OutputBuffer.flush(OutputBuffer.java:289)
		at org.apache.catalina.connector.CoyoteOutputStream.flush(CoyoteOutputStream.java:120)
		at org.apache.commons.compress.archivers.zip.ZipArchiveOutputStream.flush(ZipArchiveOutputStream.java:979)
		at java.io.FilterOutputStream.flush(FilterOutputStream.java:140)
		at com.sun.org.apache.xml.internal.serializer.WriterToUTF8Buffered.flush(WriterToUTF8Buffered.java:472)
		at com.sun.org.apache.xml.internal.serializer.ToStream.flushWriter(ToStream.java:290)
		at com.sun.org.apache.xml.internal.serializer.ToXMLStream.endDocument(ToXMLStream.java:213)
		at com.sun.org.apache.xml.internal.serializer.ToUnknownStream.endDocument(ToUnknownStream.java:829)
		at com.sun.org.apache.xalan.internal.xsltc.trax.DOM2TO.parse(DOM2TO.java:137)
		at com.sun.org.apache.xalan.internal.xsltc.trax.DOM2TO.parse(DOM2TO.java:96)
		at com.sun.org.apache.xalan.internal.xsltc.trax.TransformerImpl.transformIdentity(TransformerImpl.java:686)
		at com.sun.org.apache.xalan.internal.xsltc.trax.TransformerImpl.transform(TransformerImpl.java:730)
		at com.sun.org.apache.xalan.internal.xsltc.trax.TransformerImpl.transform(TransformerImpl.java:345)
		at org.apache.poi.openxml4j.opc.StreamHelper.saveXmlInStream(StreamHelper.java:84)
		at org.apache.poi.openxml4j.opc.internal.ZipContentTypeManager.saveImpl(ZipContentTypeManager.java:69)
		at org.apache.poi.openxml4j.opc.internal.ContentTypeManager.save(ContentTypeManager.java:449)
		at org.apache.poi.openxml4j.opc.ZipPackage.saveImpl(ZipPackage.java:518)
		at org.apache.poi.openxml4j.opc.OPCPackage.save(OPCPackage.java:1489)
		at org.apache.poi.ooxml.POIXMLDocument.write(POIXMLDocument.java:242)
		at first.builder.controller.BuilderController.excelSampleDown(BuilderController.java:1362)
		at first.builder.controller.BuilderController$$FastClassBySpringCGLIB$$c1e54596.invoke(<generated>)
		at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
		at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:736)
		at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:157)
		at org.springframework.aop.aspectj.MethodInvocationProceedingJoinPoint.proceed(MethodInvocationProceedingJoinPoint.java:84)
		at first.common.logger.LoggerAspect.logPrint(LoggerAspect.java:29)
		at sun.reflect.GeneratedMethodAccessor125.invoke(Unknown Source)
		at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
		at java.lang.reflect.Method.invoke(Method.java:498)
		at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:627)
		at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:616)
		at org.springframework.aop.aspectj.AspectJAroundAdvice.invoke(AspectJAroundAdvice.java:70)
		at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
		at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:92)
		at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
		at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:671)
		at first.builder.controller.BuilderController$$EnhancerBySpringCGLIB$$adc88615.excelSampleDown(<generated>)
		at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
		at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
		at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
		at java.lang.reflect.Method.invoke(Method.java:498)
		at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:205)
		at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:133)
		at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:97)
		at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:849)
		at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:760)
		at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:85)
		at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:967)
		at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:901)
		at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:970)
		at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:861)
		at javax.servlet.http.HttpServlet.service(HttpServlet.java:489)
		at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:846)
		at javax.servlet.http.HttpServlet.service(HttpServlet.java:583)
		at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:212)
		at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:156)
		at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
		at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:181)
		at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:156)
		at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:197)
		at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
		at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:181)
		at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:156)
		at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:168)
		at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
		at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:483)
		at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:130)
		at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
		at org.apache.catalina.valves.AbstractAccessLogValve.invoke(AbstractAccessLogValve.java:679)
		at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
		at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:346)
		at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:617)
		at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
		at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:934)
		at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1698)
		at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
		at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
		at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
		at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
		at java.lang.Thread.run(Thread.java:750)
DEBUG: first.common.logger.LoggerAspect - Controller  	:  first.builder.controller.BuilderController.excelSampleDown()
DEBUG: first.common.logger.LoggerAspect - ServiceImpl  	:  first.builder.service.BuilderService.getChatLang()
DEBUG: first.common.logger.LoggerAspect - DAO  		:  first.builder.dao.BuilderDAO.getChatLang()
DEBUG: first.builder.dao.AbstractDAO - 	 QueryId  	:  builder.getChatLang
DEBUG: org.mybatis.spring.SqlSessionUtils - Creating a new SqlSession
DEBUG: org.mybatis.spring.SqlSessionUtils - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@769d5034]
DEBUG: org.mybatis.spring.transaction.SpringManagedTransaction - JDBC Connection [net.sf.log4jdbc.ConnectionSpy@56d8227e] will be managed by Spring
2024-03-04 11:55:30,248  INFO SQL(simplebot)        :  SELECT Language FROM Account WHERE No = '1636'
DEBUG: org.mybatis.spring.SqlSessionUtils - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@769d5034]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@769d5034]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@769d5034]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@769d5034]
04-Mar-2024 11:55:30.281 WARNING [http-nio-18090-exec-25] org.apache.coyote.http11.Http11Processor.prepareResponse The HTTP response header [Content-Disposition] with value [attachment;filename=[chatbot] TASK_ANSWER_샘플데이터.xlsx] has been removed from the response because it is invalid
	java.lang.IllegalArgumentException: The Unicode character [샘] at code point [49,368] cannot be encoded as it is outside the permitted range of 0 to 255
		at org.apache.tomcat.util.buf.MessageBytes.toBytesSimple(MessageBytes.java:310)
		at org.apache.tomcat.util.buf.MessageBytes.toBytes(MessageBytes.java:283)
		at org.apache.coyote.http11.Http11OutputBuffer.write(Http11OutputBuffer.java:438)
		at org.apache.coyote.http11.Http11OutputBuffer.sendHeader(Http11OutputBuffer.java:417)
		at org.apache.coyote.http11.Http11Processor.prepareResponse(Http11Processor.java:1269)
		at org.apache.coyote.AbstractProcessor.action(AbstractProcessor.java:380)
		at org.apache.coyote.Response.action(Response.java:206)
		at org.apache.coyote.Response.sendHeaders(Response.java:415)
		at org.apache.catalina.connector.OutputBuffer.doFlush(OutputBuffer.java:309)
		at org.apache.catalina.connector.OutputBuffer.flush(OutputBuffer.java:289)
		at org.apache.catalina.connector.CoyoteOutputStream.flush(CoyoteOutputStream.java:120)
		at org.apache.commons.compress.archivers.zip.ZipArchiveOutputStream.flush(ZipArchiveOutputStream.java:979)
		at java.io.FilterOutputStream.flush(FilterOutputStream.java:140)
		at com.sun.org.apache.xml.internal.serializer.WriterToUTF8Buffered.flush(WriterToUTF8Buffered.java:472)
		at com.sun.org.apache.xml.internal.serializer.ToStream.flushWriter(ToStream.java:290)
		at com.sun.org.apache.xml.internal.serializer.ToXMLStream.endDocument(ToXMLStream.java:213)
		at com.sun.org.apache.xml.internal.serializer.ToUnknownStream.endDocument(ToUnknownStream.java:829)
		at com.sun.org.apache.xalan.internal.xsltc.trax.DOM2TO.parse(DOM2TO.java:137)
		at com.sun.org.apache.xalan.internal.xsltc.trax.DOM2TO.parse(DOM2TO.java:96)
		at com.sun.org.apache.xalan.internal.xsltc.trax.TransformerImpl.transformIdentity(TransformerImpl.java:686)
		at com.sun.org.apache.xalan.internal.xsltc.trax.TransformerImpl.transform(TransformerImpl.java:730)
		at com.sun.org.apache.xalan.internal.xsltc.trax.TransformerImpl.transform(TransformerImpl.java:345)
		at org.apache.poi.openxml4j.opc.StreamHelper.saveXmlInStream(StreamHelper.java:84)
		at org.apache.poi.openxml4j.opc.internal.ZipContentTypeManager.saveImpl(ZipContentTypeManager.java:69)
		at org.apache.poi.openxml4j.opc.internal.ContentTypeManager.save(ContentTypeManager.java:449)
		at org.apache.poi.openxml4j.opc.ZipPackage.saveImpl(ZipPackage.java:518)
		at org.apache.poi.openxml4j.opc.OPCPackage.save(OPCPackage.java:1489)
		at org.apache.poi.ooxml.POIXMLDocument.write(POIXMLDocument.java:242)
		at first.builder.controller.BuilderController.excelSampleDown(BuilderController.java:1362)
		at first.builder.controller.BuilderController$$FastClassBySpringCGLIB$$c1e54596.invoke(<generated>)
		at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
		at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:736)
		at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:157)
		at org.springframework.aop.aspectj.MethodInvocationProceedingJoinPoint.proceed(MethodInvocationProceedingJoinPoint.java:84)
		at first.common.logger.LoggerAspect.logPrint(LoggerAspect.java:29)
		at sun.reflect.GeneratedMethodAccessor125.invoke(Unknown Source)
		at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
		at java.lang.reflect.Method.invoke(Method.java:498)
		at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:627)
		at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:616)
		at org.springframework.aop.aspectj.AspectJAroundAdvice.invoke(AspectJAroundAdvice.java:70)
		at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
		at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:92)
		at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
		at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:671)
		at first.builder.controller.BuilderController$$EnhancerBySpringCGLIB$$adc88615.excelSampleDown(<generated>)
		at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
		at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
		at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
		at java.lang.reflect.Method.invoke(Method.java:498)
		at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:205)
		at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:133)
		at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:97)
		at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:849)
		at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:760)
		at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:85)
		at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:967)
		at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:901)
		at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:970)
		at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:861)
		at javax.servlet.http.HttpServlet.service(HttpServlet.java:489)
		at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:846)
		at javax.servlet.http.HttpServlet.service(HttpServlet.java:583)
		at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:212)
		at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:156)
		at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
		at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:181)
		at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:156)
		at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:197)
		at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
		at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:181)
		at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:156)
		at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:168)
		at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
		at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:483)
		at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:130)
		at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
		at org.apache.catalina.valves.AbstractAccessLogValve.invoke(AbstractAccessLogValve.java:679)
		at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
		at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:346)
		at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:617)
		at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
		at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:934)
		at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1698)
		at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
		at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
		at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
		at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
		at java.lang.Thread.run(Thread.java:750)
04-Mar-2024 12:26:32.231 INFO [main] org.apache.catalina.core.StandardServer.await A valid shutdown command was received via the shutdown port. Stopping the Server instance.
04-Mar-2024 12:26:32.231 INFO [main] org.apache.coyote.AbstractProtocol.pause Pausing ProtocolHandler ["http-nio-18090"]
04-Mar-2024 12:26:32.233 INFO [main] org.apache.catalina.core.StandardService.stopInternal Stopping service [Catalina]
04-Mar-2024 12:26:32.252 WARNING [localhost-startStop-4] org.apache.catalina.loader.WebappClassLoaderBase.clearReferencesJdbc The web application [sds-builder] registered the JDBC driver [com.mysql.jdbc.Driver] but failed to unregister it when the web application was stopped. To prevent a memory leak, the JDBC Driver has been forcibly unregistered.
04-Mar-2024 12:26:32.252 WARNING [localhost-startStop-4] org.apache.catalina.loader.WebappClassLoaderBase.clearReferencesJdbc The web application [sds-builder] registered the JDBC driver [net.sf.log4jdbc.DriverSpy] but failed to unregister it when the web application was stopped. To prevent a memory leak, the JDBC Driver has been forcibly unregistered.
04-Mar-2024 12:26:32.252 WARNING [localhost-startStop-4] org.apache.catalina.loader.WebappClassLoaderBase.clearReferencesJdbc The web application [sds-builder] registered the JDBC driver [com.microsoft.sqlserver.jdbc.SQLServerDriver] but failed to unregister it when the web application was stopped. To prevent a memory leak, the JDBC Driver has been forcibly unregistered.
04-Mar-2024 12:26:32.253 WARNING [localhost-startStop-4] org.apache.catalina.loader.WebappClassLoaderBase.clearReferencesThreads The web application [sds-builder] appears to have started a thread named [mysql-cj-abandoned-connection-cleanup] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 java.lang.Object.wait(Native Method)
 java.lang.ref.ReferenceQueue.remove(ReferenceQueue.java:144)
 com.mysql.jdbc.AbandonedConnectionCleanupThread.run(AbandonedConnectionCleanupThread.java:80)
 java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
 java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
 java.lang.Thread.run(Thread.java:750)
04-Mar-2024 12:26:32.285 INFO [main] org.apache.coyote.AbstractProtocol.stop Stopping ProtocolHandler ["http-nio-18090"]
04-Mar-2024 12:26:32.298 INFO [main] org.apache.coyote.AbstractProtocol.destroy Destroying ProtocolHandler ["http-nio-18090"]
04-Mar-2024 12:26:34.924 INFO [main] org.apache.catalina.startup.VersionLoggerListener.log Server version name:   Apache Tomcat/8.5.99
04-Mar-2024 12:26:34.926 INFO [main] org.apache.catalina.startup.VersionLoggerListener.log Server built:          Feb 14 2024 22:52:13 UTC
04-Mar-2024 12:26:34.926 INFO [main] org.apache.catalina.startup.VersionLoggerListener.log Server version number: 8.5.99.0
04-Mar-2024 12:26:34.926 INFO [main] org.apache.catalina.startup.VersionLoggerListener.log OS Name:               Linux
04-Mar-2024 12:26:34.926 INFO [main] org.apache.catalina.startup.VersionLoggerListener.log OS Version:            5.15.0-97-generic
04-Mar-2024 12:26:34.926 INFO [main] org.apache.catalina.startup.VersionLoggerListener.log Architecture:          amd64
04-Mar-2024 12:26:34.926 INFO [main] org.apache.catalina.startup.VersionLoggerListener.log Java Home:             /usr/lib/jvm/java-8-openjdk-amd64/jre
04-Mar-2024 12:26:34.926 INFO [main] org.apache.catalina.startup.VersionLoggerListener.log JVM Version:           1.8.0_392-8u392-ga-1~22.04-b08
04-Mar-2024 12:26:34.927 INFO [main] org.apache.catalina.startup.VersionLoggerListener.log JVM Vendor:            Private Build
04-Mar-2024 12:26:34.927 INFO [main] org.apache.catalina.startup.VersionLoggerListener.log CATALINA_BASE:         /home/minds/maum/sds-builder/apache-tomcat-8.5.99
04-Mar-2024 12:26:34.927 INFO [main] org.apache.catalina.startup.VersionLoggerListener.log CATALINA_HOME:         /home/minds/maum/sds-builder/apache-tomcat-8.5.99
04-Mar-2024 12:26:34.927 INFO [main] org.apache.catalina.startup.VersionLoggerListener.log Command line argument: -Djava.util.logging.config.file=/home/minds/maum/sds-builder/apache-tomcat-8.5.99/conf/logging.properties
04-Mar-2024 12:26:34.927 INFO [main] org.apache.catalina.startup.VersionLoggerListener.log Command line argument: -Djava.util.logging.manager=org.apache.juli.ClassLoaderLogManager
04-Mar-2024 12:26:34.927 INFO [main] org.apache.catalina.startup.VersionLoggerListener.log Command line argument: -Djdk.tls.ephemeralDHKeySize=2048
04-Mar-2024 12:26:34.927 INFO [main] org.apache.catalina.startup.VersionLoggerListener.log Command line argument: -Djava.protocol.handler.pkgs=org.apache.catalina.webresources
04-Mar-2024 12:26:34.927 INFO [main] org.apache.catalina.startup.VersionLoggerListener.log Command line argument: -Dorg.apache.catalina.security.SecurityListener.UMASK=0027
04-Mar-2024 12:26:34.927 INFO [main] org.apache.catalina.startup.VersionLoggerListener.log Command line argument: -Dignore.endorsed.dirs=
04-Mar-2024 12:26:34.928 INFO [main] org.apache.catalina.startup.VersionLoggerListener.log Command line argument: -Dcatalina.base=/home/minds/maum/sds-builder/apache-tomcat-8.5.99
04-Mar-2024 12:26:34.928 INFO [main] org.apache.catalina.startup.VersionLoggerListener.log Command line argument: -Dcatalina.home=/home/minds/maum/sds-builder/apache-tomcat-8.5.99
04-Mar-2024 12:26:34.928 INFO [main] org.apache.catalina.startup.VersionLoggerListener.log Command line argument: -Djava.io.tmpdir=/home/minds/maum/sds-builder/apache-tomcat-8.5.99/temp
04-Mar-2024 12:26:34.928 INFO [main] org.apache.catalina.core.AprLifecycleListener.lifecycleEvent The Apache Tomcat Native library which allows using OpenSSL was not found on the java.library.path: [/usr/java/packages/lib/amd64:/usr/lib/x86_64-linux-gnu/jni:/lib/x86_64-linux-gnu:/usr/lib/x86_64-linux-gnu:/usr/lib/jni:/lib:/usr/lib]
04-Mar-2024 12:26:34.987 INFO [main] org.apache.coyote.AbstractProtocol.init Initializing ProtocolHandler ["http-nio-18090"]
04-Mar-2024 12:26:35.002 INFO [main] org.apache.catalina.startup.Catalina.load Initialization processed in 432 ms
04-Mar-2024 12:26:35.050 INFO [main] org.apache.catalina.core.StandardService.startInternal Starting service [Catalina]
04-Mar-2024 12:26:35.050 INFO [main] org.apache.catalina.core.StandardEngine.startInternal Starting Servlet engine: [Apache Tomcat/8.5.99]
04-Mar-2024 12:26:35.076 INFO [localhost-startStop-1] org.apache.catalina.startup.HostConfig.deployWAR Deploying web application archive [/home/minds/maum/sds-builder/apache-tomcat-8.5.99/webapps/sds-builder.war]
04-Mar-2024 12:26:37.664 INFO [localhost-startStop-1] org.apache.jasper.servlet.TldScanner.scanJars At least one JAR was scanned for TLDs yet contained no TLDs. Enable debug logging for this logger for a complete list of JARs that were scanned but no TLDs were found in them. Skipping unneeded JARs during scanning can improve startup time and JSP compilation time.
DEBUG: org.mybatis.spring.SqlSessionFactoryBean - Property 'configuration' or 'configLocation' not specified, using default MyBatis Configuration
DEBUG: org.mybatis.spring.SqlSessionFactoryBean - Parsed mapper file: 'file [/home/minds/maum/sds-builder/apache-tomcat-8.5.99/webapps/sds-builder/WEB-INF/classes/mapper/maria/Chatbot/Builder_SQL.xml]'
DEBUG: org.mybatis.spring.SqlSessionFactoryBean - Parsed mapper file: 'file [/home/minds/maum/sds-builder/apache-tomcat-8.5.99/webapps/sds-builder/WEB-INF/classes/mapper/maria/Chatbot/MaumSDS_SQL.xml]'
DEBUG: org.mybatis.spring.SqlSessionFactoryBean - Property 'configuration' or 'configLocation' not specified, using default MyBatis Configuration
DEBUG: org.mybatis.spring.SqlSessionFactoryBean - Parsed mapper file: 'file [/home/minds/maum/sds-builder/apache-tomcat-8.5.99/webapps/sds-builder/WEB-INF/classes/mapper/maria/HAPPYCALL4/NQA_SQL.xml]'
DEBUG: org.mybatis.spring.SqlSessionFactoryBean - Parsed mapper file: 'file [/home/minds/maum/sds-builder/apache-tomcat-8.5.99/webapps/sds-builder/WEB-INF/classes/mapper/maria/HAPPYCALL4/SimpleBot_SQL.xml]'
SimpleBot Execution Environment : prod
SimpleBot BertIntent itfIP : 0
SimpleBot BertIntent nerIP : 0
SimpleBot BL IP : 125.132.250.244
SimpleBot CM IP : 121.133.247.250
SimpleBot M2U rest address : http://localhost:9990
SimpleBot Style Resources Path : /home/minds/maum/sds-builder/imgUpload
Default Resources Make : chatbot.css
Default Resources Make : chatbot_custom.css
Default Resources Make : chatbot_floating.css
Default Resources Make : IconImg
Default Resources Make : logoImg
Default Resources Make : default
Default Resources Make : mindslab
Default Resources Make : redtie
Default Resource constructed.
DEBUG: first.common.logger.LoggerAspect - ServiceImpl  	:  first.builder.service.BuilderService.getNqaStatusChatbotList()
DEBUG: first.common.logger.LoggerAspect - DAO  		:  first.builder.dao.BuilderDAO.getNqaStatusChatbotList()
DEBUG: first.builder.dao.AbstractDAO - 	 QueryId  	:  builder.getNqaStatusChatbotList
DEBUG: org.mybatis.spring.SqlSessionUtils - Creating a new SqlSession
DEBUG: org.mybatis.spring.SqlSessionUtils - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@7187a98f]
DEBUG: org.mybatis.spring.transaction.SpringManagedTransaction - JDBC Connection [net.sf.log4jdbc.ConnectionSpy@b7840cc] will be managed by Spring
2024-03-04 12:26:39,755  INFO SQL(simplebot)        :  SELECT No as host, Name, 'preparation' as nqaUploadStatus
 from Account
		ORDER BY No
DEBUG: org.mybatis.spring.SqlSessionUtils - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@7187a98f]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@7187a98f]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@7187a98f]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@7187a98f]
04-Mar-2024 12:26:40.760 INFO [localhost-startStop-1] org.apache.catalina.startup.HostConfig.deployWAR Deployment of web application archive [/home/minds/maum/sds-builder/apache-tomcat-8.5.99/webapps/sds-builder.war] has finished in [5,683] ms
04-Mar-2024 12:26:40.761 INFO [localhost-startStop-1] org.apache.catalina.startup.HostConfig.deployDirectory Deploying web application directory [/home/minds/maum/sds-builder/apache-tomcat-8.5.99/webapps/examples]
04-Mar-2024 12:26:40.855 INFO [localhost-startStop-1] org.apache.catalina.startup.HostConfig.deployDirectory Deployment of web application directory [/home/minds/maum/sds-builder/apache-tomcat-8.5.99/webapps/examples] has finished in [94] ms
04-Mar-2024 12:26:40.855 INFO [localhost-startStop-1] org.apache.catalina.startup.HostConfig.deployDirectory Deploying web application directory [/home/minds/maum/sds-builder/apache-tomcat-8.5.99/webapps/manager]
04-Mar-2024 12:26:40.871 INFO [localhost-startStop-1] org.apache.catalina.startup.HostConfig.deployDirectory Deployment of web application directory [/home/minds/maum/sds-builder/apache-tomcat-8.5.99/webapps/manager] has finished in [16] ms
04-Mar-2024 12:26:40.871 INFO [localhost-startStop-1] org.apache.catalina.startup.HostConfig.deployDirectory Deploying web application directory [/home/minds/maum/sds-builder/apache-tomcat-8.5.99/webapps/host-manager]
04-Mar-2024 12:26:40.883 INFO [localhost-startStop-1] org.apache.catalina.startup.HostConfig.deployDirectory Deployment of web application directory [/home/minds/maum/sds-builder/apache-tomcat-8.5.99/webapps/host-manager] has finished in [12] ms
04-Mar-2024 12:26:40.883 INFO [localhost-startStop-1] org.apache.catalina.startup.HostConfig.deployDirectory Deploying web application directory [/home/minds/maum/sds-builder/apache-tomcat-8.5.99/webapps/docs]
04-Mar-2024 12:26:40.893 INFO [localhost-startStop-1] org.apache.catalina.startup.HostConfig.deployDirectory Deployment of web application directory [/home/minds/maum/sds-builder/apache-tomcat-8.5.99/webapps/docs] has finished in [10] ms
04-Mar-2024 12:26:40.898 INFO [main] org.apache.coyote.AbstractProtocol.start Starting ProtocolHandler ["http-nio-18090"]
04-Mar-2024 12:26:40.909 INFO [main] org.apache.catalina.startup.Catalina.start Server startup in 5906 ms
DEBUG: first.common.logger.LoggerAspect - Controller  	:  first.builder.controller.BuilderController.chatbotBuilderCommon()
DEBUG: first.common.logger.LoggerAspect - Controller  	:  first.builder.controller.BuilderController.getChatList()
DEBUG: first.common.logger.LoggerAspect - ServiceImpl  	:  first.builder.service.BuilderService.getChatbotList()
DEBUG: first.common.logger.LoggerAspect - DAO  		:  first.builder.dao.BuilderDAO.getChatbotList()
DEBUG: first.builder.dao.AbstractDAO - 	 QueryId  	:  builder.getChatbotList
DEBUG: org.mybatis.spring.SqlSessionUtils - Creating a new SqlSession
DEBUG: org.mybatis.spring.SqlSessionUtils - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@7097e259]
DEBUG: org.mybatis.spring.transaction.SpringManagedTransaction - JDBC Connection [net.sf.log4jdbc.ConnectionSpy@46db6a49] will be managed by Spring
2024-03-04 12:27:05,361  INFO SQL(simplebot)        :  SELECT  /* No, Name, Host, Language */
			*
		from Account WHERE 1=1
		AND No IN
		 
				 (  
					'1636'
				 ) 
			 

		 
		ORDER BY No
DEBUG: org.mybatis.spring.SqlSessionUtils - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@7097e259]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@7097e259]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@7097e259]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@7097e259]
DEBUG: first.common.logger.LoggerAspect - Controller  	:  first.builder.controller.BuilderController.builderBottomAnswer()
DEBUG: first.common.logger.LoggerAspect - Controller  	:  first.builder.controller.BuilderController.builderContentsAnswer()
DEBUG: first.common.logger.LoggerAspect - Controller  	:  first.builder.controller.BuilderController.getTask()
DEBUG: first.common.logger.LoggerAspect - ServiceImpl  	:  first.builder.service.BuilderService.getTaskCount()
DEBUG: first.common.logger.LoggerAspect - DAO  		:  first.builder.dao.BuilderDAO.getTaskCount()
DEBUG: first.builder.dao.AbstractDAO - 	 QueryId  	:  builder.getTaskCount
DEBUG: org.mybatis.spring.SqlSessionUtils - Creating a new SqlSession
DEBUG: org.mybatis.spring.SqlSessionUtils - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1b63a3ea]
DEBUG: org.mybatis.spring.transaction.SpringManagedTransaction - JDBC Connection [net.sf.log4jdbc.ConnectionSpy@6e1619] will be managed by Spring
2024-03-04 12:27:05,500  INFO SQL(simplebot)        :  SELECT COUNT(*) FROM Intent WHERE Account=1636
 and Language=1
DEBUG: org.mybatis.spring.SqlSessionUtils - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1b63a3ea]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1b63a3ea]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1b63a3ea]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1b63a3ea]
DEBUG: first.common.logger.LoggerAspect - ServiceImpl  	:  first.builder.service.BuilderService.getAnswerList()
DEBUG: first.common.logger.LoggerAspect - DAO  		:  first.builder.dao.BuilderDAO.getAnswerList()
DEBUG: first.builder.dao.AbstractDAO - 	 QueryId  	:  builder.getAnswerList
DEBUG: org.mybatis.spring.SqlSessionUtils - Creating a new SqlSession
DEBUG: org.mybatis.spring.SqlSessionUtils - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@495c90c]
DEBUG: org.mybatis.spring.transaction.SpringManagedTransaction - JDBC Connection [net.sf.log4jdbc.ConnectionSpy@697954ab] will be managed by Spring
2024-03-04 12:27:05,509  INFO SQL(simplebot)        :  SELECT I.No, I.Main, I.Name, A.answer, I.Account
		FROM Intent I LEFT OUTER JOIN Answer A
		ON I.Answer = A.No
		WHERE I.Account=1636
 and I.Language=1
		ORDER BY I.No
		OFFSET 0 ROWS
		FETCH NEXT 15 ROWS ONLY
DEBUG: org.mybatis.spring.SqlSessionUtils - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@495c90c]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@495c90c]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@495c90c]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@495c90c]
DEBUG: first.common.logger.LoggerAspect - ServiceImpl  	:  first.builder.service.BuilderService.getAllIntents()
DEBUG: first.common.logger.LoggerAspect - DAO  		:  first.builder.dao.BuilderDAO.getAllIntents()
DEBUG: first.builder.dao.AbstractDAO - 	 QueryId  	:  builder.getAllIntents
DEBUG: org.mybatis.spring.SqlSessionUtils - Creating a new SqlSession
DEBUG: org.mybatis.spring.SqlSessionUtils - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@42575b37]
DEBUG: org.mybatis.spring.transaction.SpringManagedTransaction - JDBC Connection [net.sf.log4jdbc.ConnectionSpy@18314a52] will be managed by Spring
2024-03-04 12:27:05,517  INFO SQL(simplebot)        :  SELECT I.No, I.Main, I.Name,I.Next, I.URL, I.Language
		FROM Intent I
		WHERE I.Account=1636
		ORDER BY I.No
DEBUG: org.mybatis.spring.SqlSessionUtils - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@42575b37]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@42575b37]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@42575b37]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@42575b37]
DEBUG: first.common.logger.LoggerAspect - ServiceImpl  	:  first.builder.service.BuilderService.getAllBertIntents()
DEBUG: first.common.logger.LoggerAspect - DAO  		:  first.builder.dao.BuilderDAO.getAllBertIntents()
DEBUG: first.builder.dao.AbstractDAO - 	 QueryId  	:  builder.getAllBertIntents
DEBUG: org.mybatis.spring.SqlSessionUtils - Creating a new SqlSession
DEBUG: org.mybatis.spring.SqlSessionUtils - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@deb3aa7]
DEBUG: org.mybatis.spring.transaction.SpringManagedTransaction - JDBC Connection [net.sf.log4jdbc.ConnectionSpy@40bcaeb2] will be managed by Spring
2024-03-04 12:27:05,521  INFO SQL(simplebot)        :  SELECT B.No, B.Name, B.Language
		FROM BertIntent B LEFT OUTER JOIN BackendInfo BI
		ON B.BertItfId = BI.id
		WHERE BI.host=1636
		ORDER BY B.No
DEBUG: org.mybatis.spring.SqlSessionUtils - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@deb3aa7]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@deb3aa7]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@deb3aa7]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@deb3aa7]
DEBUG: first.common.logger.LoggerAspect - Controller  	:  first.builder.controller.BuilderController.getTask()
DEBUG: first.common.logger.LoggerAspect - ServiceImpl  	:  first.builder.service.BuilderService.getTaskCount()
DEBUG: first.common.logger.LoggerAspect - DAO  		:  first.builder.dao.BuilderDAO.getTaskCount()
DEBUG: first.builder.dao.AbstractDAO - 	 QueryId  	:  builder.getTaskCount
DEBUG: org.mybatis.spring.SqlSessionUtils - Creating a new SqlSession
DEBUG: org.mybatis.spring.SqlSessionUtils - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@31bf0da6]
DEBUG: org.mybatis.spring.transaction.SpringManagedTransaction - JDBC Connection [net.sf.log4jdbc.ConnectionSpy@d0cbdc2] will be managed by Spring
2024-03-04 12:27:05,533  INFO SQL(simplebot)        :  SELECT COUNT(*) FROM Intent WHERE Account=1636
 and Language=1
DEBUG: org.mybatis.spring.SqlSessionUtils - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@31bf0da6]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@31bf0da6]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@31bf0da6]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@31bf0da6]
DEBUG: first.common.logger.LoggerAspect - ServiceImpl  	:  first.builder.service.BuilderService.getAnswerList()
DEBUG: first.common.logger.LoggerAspect - DAO  		:  first.builder.dao.BuilderDAO.getAnswerList()
DEBUG: first.builder.dao.AbstractDAO - 	 QueryId  	:  builder.getAnswerList
DEBUG: org.mybatis.spring.SqlSessionUtils - Creating a new SqlSession
DEBUG: org.mybatis.spring.SqlSessionUtils - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1b132a9f]
DEBUG: org.mybatis.spring.transaction.SpringManagedTransaction - JDBC Connection [net.sf.log4jdbc.ConnectionSpy@78f7d892] will be managed by Spring
2024-03-04 12:27:05,539  INFO SQL(simplebot)        :  SELECT I.No, I.Main, I.Name, A.answer, I.Account
		FROM Intent I LEFT OUTER JOIN Answer A
		ON I.Answer = A.No
		WHERE I.Account=1636
 and I.Language=1
		ORDER BY I.No
		OFFSET 0 ROWS
		FETCH NEXT 15 ROWS ONLY
DEBUG: org.mybatis.spring.SqlSessionUtils - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1b132a9f]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1b132a9f]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1b132a9f]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1b132a9f]
DEBUG: first.common.logger.LoggerAspect - ServiceImpl  	:  first.builder.service.BuilderService.getAllIntents()
DEBUG: first.common.logger.LoggerAspect - DAO  		:  first.builder.dao.BuilderDAO.getAllIntents()
DEBUG: first.builder.dao.AbstractDAO - 	 QueryId  	:  builder.getAllIntents
DEBUG: org.mybatis.spring.SqlSessionUtils - Creating a new SqlSession
DEBUG: org.mybatis.spring.SqlSessionUtils - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@4e07cf9b]
DEBUG: org.mybatis.spring.transaction.SpringManagedTransaction - JDBC Connection [net.sf.log4jdbc.ConnectionSpy@6bb79e8e] will be managed by Spring
2024-03-04 12:27:05,545  INFO SQL(simplebot)        :  SELECT I.No, I.Main, I.Name,I.Next, I.URL, I.Language
		FROM Intent I
		WHERE I.Account=1636
		ORDER BY I.No
DEBUG: org.mybatis.spring.SqlSessionUtils - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@4e07cf9b]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@4e07cf9b]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@4e07cf9b]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@4e07cf9b]
DEBUG: first.common.logger.LoggerAspect - ServiceImpl  	:  first.builder.service.BuilderService.getAllBertIntents()
DEBUG: first.common.logger.LoggerAspect - DAO  		:  first.builder.dao.BuilderDAO.getAllBertIntents()
DEBUG: first.builder.dao.AbstractDAO - 	 QueryId  	:  builder.getAllBertIntents
DEBUG: org.mybatis.spring.SqlSessionUtils - Creating a new SqlSession
DEBUG: org.mybatis.spring.SqlSessionUtils - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@6e02bf92]
DEBUG: org.mybatis.spring.transaction.SpringManagedTransaction - JDBC Connection [net.sf.log4jdbc.ConnectionSpy@372c37cc] will be managed by Spring
2024-03-04 12:27:05,550  INFO SQL(simplebot)        :  SELECT B.No, B.Name, B.Language
		FROM BertIntent B LEFT OUTER JOIN BackendInfo BI
		ON B.BertItfId = BI.id
		WHERE BI.host=1636
		ORDER BY B.No
DEBUG: org.mybatis.spring.SqlSessionUtils - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@6e02bf92]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@6e02bf92]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@6e02bf92]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@6e02bf92]
DEBUG: first.common.logger.LoggerAspect - Controller  	:  first.builder.controller.BuilderController.excelSampleDown()
DEBUG: first.common.logger.LoggerAspect - ServiceImpl  	:  first.builder.service.BuilderService.getChatLang()
DEBUG: first.common.logger.LoggerAspect - DAO  		:  first.builder.dao.BuilderDAO.getChatLang()
DEBUG: first.builder.dao.AbstractDAO - 	 QueryId  	:  builder.getChatLang
DEBUG: org.mybatis.spring.SqlSessionUtils - Creating a new SqlSession
DEBUG: org.mybatis.spring.SqlSessionUtils - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@7dc76070]
DEBUG: org.mybatis.spring.transaction.SpringManagedTransaction - JDBC Connection [net.sf.log4jdbc.ConnectionSpy@592c60a6] will be managed by Spring
2024-03-04 12:27:07,876  INFO SQL(simplebot)        :  SELECT Language FROM Account WHERE No = '1636'
DEBUG: org.mybatis.spring.SqlSessionUtils - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@7dc76070]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@7dc76070]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@7dc76070]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@7dc76070]
04-Mar-2024 12:27:07.956 WARNING [http-nio-18090-exec-2] org.apache.coyote.http11.Http11Processor.prepareResponse The HTTP response header [Content-Disposition] with value [attachment;filename=[chatbot] TASK_ANSWER_샘플데이터.xlsx] has been removed from the response because it is invalid
	java.lang.IllegalArgumentException: The Unicode character [샘] at code point [49,368] cannot be encoded as it is outside the permitted range of 0 to 255
		at org.apache.tomcat.util.buf.MessageBytes.toBytesSimple(MessageBytes.java:310)
		at org.apache.tomcat.util.buf.MessageBytes.toBytes(MessageBytes.java:283)
		at org.apache.coyote.http11.Http11OutputBuffer.write(Http11OutputBuffer.java:438)
		at org.apache.coyote.http11.Http11OutputBuffer.sendHeader(Http11OutputBuffer.java:417)
		at org.apache.coyote.http11.Http11Processor.prepareResponse(Http11Processor.java:1269)
		at org.apache.coyote.AbstractProcessor.action(AbstractProcessor.java:380)
		at org.apache.coyote.Response.action(Response.java:206)
		at org.apache.coyote.Response.sendHeaders(Response.java:415)
		at org.apache.catalina.connector.OutputBuffer.doFlush(OutputBuffer.java:309)
		at org.apache.catalina.connector.OutputBuffer.flush(OutputBuffer.java:289)
		at org.apache.catalina.connector.CoyoteOutputStream.flush(CoyoteOutputStream.java:120)
		at org.apache.commons.compress.archivers.zip.ZipArchiveOutputStream.flush(ZipArchiveOutputStream.java:979)
		at java.io.FilterOutputStream.flush(FilterOutputStream.java:140)
		at com.sun.org.apache.xml.internal.serializer.WriterToUTF8Buffered.flush(WriterToUTF8Buffered.java:472)
		at com.sun.org.apache.xml.internal.serializer.ToStream.flushWriter(ToStream.java:290)
		at com.sun.org.apache.xml.internal.serializer.ToXMLStream.endDocument(ToXMLStream.java:213)
		at com.sun.org.apache.xml.internal.serializer.ToUnknownStream.endDocument(ToUnknownStream.java:829)
		at com.sun.org.apache.xalan.internal.xsltc.trax.DOM2TO.parse(DOM2TO.java:137)
		at com.sun.org.apache.xalan.internal.xsltc.trax.DOM2TO.parse(DOM2TO.java:96)
		at com.sun.org.apache.xalan.internal.xsltc.trax.TransformerImpl.transformIdentity(TransformerImpl.java:686)
		at com.sun.org.apache.xalan.internal.xsltc.trax.TransformerImpl.transform(TransformerImpl.java:730)
		at com.sun.org.apache.xalan.internal.xsltc.trax.TransformerImpl.transform(TransformerImpl.java:345)
		at org.apache.poi.openxml4j.opc.StreamHelper.saveXmlInStream(StreamHelper.java:84)
		at org.apache.poi.openxml4j.opc.internal.ZipContentTypeManager.saveImpl(ZipContentTypeManager.java:69)
		at org.apache.poi.openxml4j.opc.internal.ContentTypeManager.save(ContentTypeManager.java:449)
		at org.apache.poi.openxml4j.opc.ZipPackage.saveImpl(ZipPackage.java:518)
		at org.apache.poi.openxml4j.opc.OPCPackage.save(OPCPackage.java:1489)
		at org.apache.poi.ooxml.POIXMLDocument.write(POIXMLDocument.java:242)
		at first.builder.controller.BuilderController.excelSampleDown(BuilderController.java:1362)
		at first.builder.controller.BuilderController$$FastClassBySpringCGLIB$$c1e54596.invoke(<generated>)
		at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
		at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:736)
		at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:157)
		at org.springframework.aop.aspectj.MethodInvocationProceedingJoinPoint.proceed(MethodInvocationProceedingJoinPoint.java:84)
		at first.common.logger.LoggerAspect.logPrint(LoggerAspect.java:29)
		at sun.reflect.GeneratedMethodAccessor68.invoke(Unknown Source)
		at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
		at java.lang.reflect.Method.invoke(Method.java:498)
		at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:627)
		at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:616)
		at org.springframework.aop.aspectj.AspectJAroundAdvice.invoke(AspectJAroundAdvice.java:70)
		at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
		at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:92)
		at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
		at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:671)
		at first.builder.controller.BuilderController$$EnhancerBySpringCGLIB$$4008eb1a.excelSampleDown(<generated>)
		at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
		at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
		at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
		at java.lang.reflect.Method.invoke(Method.java:498)
		at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:205)
		at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:133)
		at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:97)
		at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:849)
		at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:760)
		at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:85)
		at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:967)
		at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:901)
		at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:970)
		at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:861)
		at javax.servlet.http.HttpServlet.service(HttpServlet.java:489)
		at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:846)
		at javax.servlet.http.HttpServlet.service(HttpServlet.java:583)
		at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:212)
		at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:156)
		at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
		at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:181)
		at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:156)
		at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:197)
		at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
		at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:181)
		at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:156)
		at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:168)
		at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
		at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:483)
		at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:130)
		at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
		at org.apache.catalina.valves.AbstractAccessLogValve.invoke(AbstractAccessLogValve.java:679)
		at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
		at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:346)
		at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:617)
		at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
		at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:934)
		at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1698)
		at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
		at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
		at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
		at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
		at java.lang.Thread.run(Thread.java:750)
04-Mar-2024 12:28:29.581 INFO [main] org.apache.catalina.core.StandardServer.await A valid shutdown command was received via the shutdown port. Stopping the Server instance.
04-Mar-2024 12:28:29.581 INFO [main] org.apache.coyote.AbstractProtocol.pause Pausing ProtocolHandler ["http-nio-18090"]
04-Mar-2024 12:28:29.584 INFO [main] org.apache.catalina.core.StandardService.stopInternal Stopping service [Catalina]
04-Mar-2024 12:28:29.610 WARNING [localhost-startStop-2] org.apache.catalina.loader.WebappClassLoaderBase.clearReferencesJdbc The web application [sds-builder] registered the JDBC driver [com.mysql.jdbc.Driver] but failed to unregister it when the web application was stopped. To prevent a memory leak, the JDBC Driver has been forcibly unregistered.
04-Mar-2024 12:28:29.611 WARNING [localhost-startStop-2] org.apache.catalina.loader.WebappClassLoaderBase.clearReferencesJdbc The web application [sds-builder] registered the JDBC driver [net.sf.log4jdbc.DriverSpy] but failed to unregister it when the web application was stopped. To prevent a memory leak, the JDBC Driver has been forcibly unregistered.
04-Mar-2024 12:28:29.611 WARNING [localhost-startStop-2] org.apache.catalina.loader.WebappClassLoaderBase.clearReferencesJdbc The web application [sds-builder] registered the JDBC driver [com.microsoft.sqlserver.jdbc.SQLServerDriver] but failed to unregister it when the web application was stopped. To prevent a memory leak, the JDBC Driver has been forcibly unregistered.
04-Mar-2024 12:28:29.612 WARNING [localhost-startStop-2] org.apache.catalina.loader.WebappClassLoaderBase.clearReferencesThreads The web application [sds-builder] appears to have started a thread named [mysql-cj-abandoned-connection-cleanup] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 java.lang.Object.wait(Native Method)
 java.lang.ref.ReferenceQueue.remove(ReferenceQueue.java:144)
 com.mysql.jdbc.AbandonedConnectionCleanupThread.run(AbandonedConnectionCleanupThread.java:80)
 java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
 java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
 java.lang.Thread.run(Thread.java:750)
04-Mar-2024 12:28:29.646 INFO [main] org.apache.coyote.AbstractProtocol.stop Stopping ProtocolHandler ["http-nio-18090"]
04-Mar-2024 12:28:29.660 INFO [main] org.apache.coyote.AbstractProtocol.destroy Destroying ProtocolHandler ["http-nio-18090"]
04-Mar-2024 12:28:31.403 INFO [main] org.apache.catalina.startup.VersionLoggerListener.log Server version name:   Apache Tomcat/8.5.99
04-Mar-2024 12:28:31.405 INFO [main] org.apache.catalina.startup.VersionLoggerListener.log Server built:          Feb 14 2024 22:52:13 UTC
04-Mar-2024 12:28:31.405 INFO [main] org.apache.catalina.startup.VersionLoggerListener.log Server version number: 8.5.99.0
04-Mar-2024 12:28:31.405 INFO [main] org.apache.catalina.startup.VersionLoggerListener.log OS Name:               Linux
04-Mar-2024 12:28:31.405 INFO [main] org.apache.catalina.startup.VersionLoggerListener.log OS Version:            5.15.0-97-generic
04-Mar-2024 12:28:31.405 INFO [main] org.apache.catalina.startup.VersionLoggerListener.log Architecture:          amd64
04-Mar-2024 12:28:31.405 INFO [main] org.apache.catalina.startup.VersionLoggerListener.log Java Home:             /usr/lib/jvm/java-8-openjdk-amd64/jre
04-Mar-2024 12:28:31.405 INFO [main] org.apache.catalina.startup.VersionLoggerListener.log JVM Version:           1.8.0_392-8u392-ga-1~22.04-b08
04-Mar-2024 12:28:31.405 INFO [main] org.apache.catalina.startup.VersionLoggerListener.log JVM Vendor:            Private Build
04-Mar-2024 12:28:31.405 INFO [main] org.apache.catalina.startup.VersionLoggerListener.log CATALINA_BASE:         /home/minds/maum/sds-builder/apache-tomcat-8.5.99
04-Mar-2024 12:28:31.406 INFO [main] org.apache.catalina.startup.VersionLoggerListener.log CATALINA_HOME:         /home/minds/maum/sds-builder/apache-tomcat-8.5.99
04-Mar-2024 12:28:31.406 INFO [main] org.apache.catalina.startup.VersionLoggerListener.log Command line argument: -Djava.util.logging.config.file=/home/minds/maum/sds-builder/apache-tomcat-8.5.99/conf/logging.properties
04-Mar-2024 12:28:31.406 INFO [main] org.apache.catalina.startup.VersionLoggerListener.log Command line argument: -Djava.util.logging.manager=org.apache.juli.ClassLoaderLogManager
04-Mar-2024 12:28:31.406 INFO [main] org.apache.catalina.startup.VersionLoggerListener.log Command line argument: -Djdk.tls.ephemeralDHKeySize=2048
04-Mar-2024 12:28:31.406 INFO [main] org.apache.catalina.startup.VersionLoggerListener.log Command line argument: -Djava.protocol.handler.pkgs=org.apache.catalina.webresources
04-Mar-2024 12:28:31.406 INFO [main] org.apache.catalina.startup.VersionLoggerListener.log Command line argument: -Dorg.apache.catalina.security.SecurityListener.UMASK=0027
04-Mar-2024 12:28:31.406 INFO [main] org.apache.catalina.startup.VersionLoggerListener.log Command line argument: -Dignore.endorsed.dirs=
04-Mar-2024 12:28:31.406 INFO [main] org.apache.catalina.startup.VersionLoggerListener.log Command line argument: -Dcatalina.base=/home/minds/maum/sds-builder/apache-tomcat-8.5.99
04-Mar-2024 12:28:31.406 INFO [main] org.apache.catalina.startup.VersionLoggerListener.log Command line argument: -Dcatalina.home=/home/minds/maum/sds-builder/apache-tomcat-8.5.99
04-Mar-2024 12:28:31.406 INFO [main] org.apache.catalina.startup.VersionLoggerListener.log Command line argument: -Djava.io.tmpdir=/home/minds/maum/sds-builder/apache-tomcat-8.5.99/temp
04-Mar-2024 12:28:31.406 INFO [main] org.apache.catalina.core.AprLifecycleListener.lifecycleEvent The Apache Tomcat Native library which allows using OpenSSL was not found on the java.library.path: [/usr/java/packages/lib/amd64:/usr/lib/x86_64-linux-gnu/jni:/lib/x86_64-linux-gnu:/usr/lib/x86_64-linux-gnu:/usr/lib/jni:/lib:/usr/lib]
04-Mar-2024 12:28:31.471 INFO [main] org.apache.coyote.AbstractProtocol.init Initializing ProtocolHandler ["http-nio-18090"]
04-Mar-2024 12:28:31.488 INFO [main] org.apache.catalina.startup.Catalina.load Initialization processed in 457 ms
04-Mar-2024 12:28:31.534 INFO [main] org.apache.catalina.core.StandardService.startInternal Starting service [Catalina]
04-Mar-2024 12:28:31.534 INFO [main] org.apache.catalina.core.StandardEngine.startInternal Starting Servlet engine: [Apache Tomcat/8.5.99]
04-Mar-2024 12:28:31.561 INFO [localhost-startStop-1] org.apache.catalina.startup.HostConfig.deployWAR Deploying web application archive [/home/minds/maum/sds-builder/apache-tomcat-8.5.99/webapps/sds-builder.war]
04-Mar-2024 12:28:34.080 INFO [localhost-startStop-1] org.apache.jasper.servlet.TldScanner.scanJars At least one JAR was scanned for TLDs yet contained no TLDs. Enable debug logging for this logger for a complete list of JARs that were scanned but no TLDs were found in them. Skipping unneeded JARs during scanning can improve startup time and JSP compilation time.
DEBUG: org.mybatis.spring.SqlSessionFactoryBean - Property 'configuration' or 'configLocation' not specified, using default MyBatis Configuration
DEBUG: org.mybatis.spring.SqlSessionFactoryBean - Parsed mapper file: 'file [/home/minds/maum/sds-builder/apache-tomcat-8.5.99/webapps/sds-builder/WEB-INF/classes/mapper/maria/Chatbot/Builder_SQL.xml]'
DEBUG: org.mybatis.spring.SqlSessionFactoryBean - Parsed mapper file: 'file [/home/minds/maum/sds-builder/apache-tomcat-8.5.99/webapps/sds-builder/WEB-INF/classes/mapper/maria/Chatbot/MaumSDS_SQL.xml]'
DEBUG: org.mybatis.spring.SqlSessionFactoryBean - Property 'configuration' or 'configLocation' not specified, using default MyBatis Configuration
DEBUG: org.mybatis.spring.SqlSessionFactoryBean - Parsed mapper file: 'file [/home/minds/maum/sds-builder/apache-tomcat-8.5.99/webapps/sds-builder/WEB-INF/classes/mapper/maria/HAPPYCALL4/NQA_SQL.xml]'
DEBUG: org.mybatis.spring.SqlSessionFactoryBean - Parsed mapper file: 'file [/home/minds/maum/sds-builder/apache-tomcat-8.5.99/webapps/sds-builder/WEB-INF/classes/mapper/maria/HAPPYCALL4/SimpleBot_SQL.xml]'
SimpleBot Execution Environment : prod
SimpleBot BertIntent itfIP : 0
SimpleBot BertIntent nerIP : 0
SimpleBot BL IP : 125.132.250.244
SimpleBot CM IP : 121.133.247.250
SimpleBot M2U rest address : http://localhost:9990
SimpleBot Style Resources Path : /home/minds/maum/sds-builder/imgUpload
Default Resources Make : chatbot.css
Default Resources Make : chatbot_custom.css
Default Resources Make : chatbot_floating.css
Default Resources Make : IconImg
Default Resources Make : logoImg
Default Resources Make : default
Default Resources Make : mindslab
Default Resources Make : redtie
Default Resource constructed.
DEBUG: first.common.logger.LoggerAspect - ServiceImpl  	:  first.builder.service.BuilderService.getNqaStatusChatbotList()
DEBUG: first.common.logger.LoggerAspect - DAO  		:  first.builder.dao.BuilderDAO.getNqaStatusChatbotList()
DEBUG: first.builder.dao.AbstractDAO - 	 QueryId  	:  builder.getNqaStatusChatbotList
DEBUG: org.mybatis.spring.SqlSessionUtils - Creating a new SqlSession
DEBUG: org.mybatis.spring.SqlSessionUtils - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@27bd332]
DEBUG: org.mybatis.spring.transaction.SpringManagedTransaction - JDBC Connection [net.sf.log4jdbc.ConnectionSpy@5b1b34f1] will be managed by Spring
2024-03-04 12:28:36,212  INFO SQL(simplebot)        :  SELECT No as host, Name, 'preparation' as nqaUploadStatus
 from Account
		ORDER BY No
DEBUG: org.mybatis.spring.SqlSessionUtils - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@27bd332]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@27bd332]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@27bd332]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@27bd332]
04-Mar-2024 12:28:37.246 INFO [localhost-startStop-1] org.apache.catalina.startup.HostConfig.deployWAR Deployment of web application archive [/home/minds/maum/sds-builder/apache-tomcat-8.5.99/webapps/sds-builder.war] has finished in [5,684] ms
04-Mar-2024 12:28:37.247 INFO [localhost-startStop-1] org.apache.catalina.startup.HostConfig.deployDirectory Deploying web application directory [/home/minds/maum/sds-builder/apache-tomcat-8.5.99/webapps/examples]
04-Mar-2024 12:28:37.355 INFO [localhost-startStop-1] org.apache.catalina.startup.HostConfig.deployDirectory Deployment of web application directory [/home/minds/maum/sds-builder/apache-tomcat-8.5.99/webapps/examples] has finished in [108] ms
04-Mar-2024 12:28:37.355 INFO [localhost-startStop-1] org.apache.catalina.startup.HostConfig.deployDirectory Deploying web application directory [/home/minds/maum/sds-builder/apache-tomcat-8.5.99/webapps/manager]
04-Mar-2024 12:28:37.372 INFO [localhost-startStop-1] org.apache.catalina.startup.HostConfig.deployDirectory Deployment of web application directory [/home/minds/maum/sds-builder/apache-tomcat-8.5.99/webapps/manager] has finished in [17] ms
04-Mar-2024 12:28:37.372 INFO [localhost-startStop-1] org.apache.catalina.startup.HostConfig.deployDirectory Deploying web application directory [/home/minds/maum/sds-builder/apache-tomcat-8.5.99/webapps/host-manager]
04-Mar-2024 12:28:37.384 INFO [localhost-startStop-1] org.apache.catalina.startup.HostConfig.deployDirectory Deployment of web application directory [/home/minds/maum/sds-builder/apache-tomcat-8.5.99/webapps/host-manager] has finished in [12] ms
04-Mar-2024 12:28:37.384 INFO [localhost-startStop-1] org.apache.catalina.startup.HostConfig.deployDirectory Deploying web application directory [/home/minds/maum/sds-builder/apache-tomcat-8.5.99/webapps/docs]
04-Mar-2024 12:28:37.394 INFO [localhost-startStop-1] org.apache.catalina.startup.HostConfig.deployDirectory Deployment of web application directory [/home/minds/maum/sds-builder/apache-tomcat-8.5.99/webapps/docs] has finished in [10] ms
04-Mar-2024 12:28:37.398 INFO [main] org.apache.coyote.AbstractProtocol.start Starting ProtocolHandler ["http-nio-18090"]
04-Mar-2024 12:28:37.408 INFO [main] org.apache.catalina.startup.Catalina.start Server startup in 5920 ms
DEBUG: first.common.logger.LoggerAspect - Controller  	:  first.builder.controller.BuilderController.chatbotBuilderCommon()
DEBUG: first.common.logger.LoggerAspect - Controller  	:  first.builder.controller.BuilderController.getChatList()
DEBUG: first.common.logger.LoggerAspect - ServiceImpl  	:  first.builder.service.BuilderService.getChatbotList()
DEBUG: first.common.logger.LoggerAspect - DAO  		:  first.builder.dao.BuilderDAO.getChatbotList()
DEBUG: first.builder.dao.AbstractDAO - 	 QueryId  	:  builder.getChatbotList
DEBUG: org.mybatis.spring.SqlSessionUtils - Creating a new SqlSession
DEBUG: org.mybatis.spring.SqlSessionUtils - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@41cc38cd]
DEBUG: org.mybatis.spring.transaction.SpringManagedTransaction - JDBC Connection [net.sf.log4jdbc.ConnectionSpy@1710d5c3] will be managed by Spring
2024-03-04 12:28:41,580  INFO SQL(simplebot)        :  SELECT  /* No, Name, Host, Language */
			*
		from Account WHERE 1=1
		AND No IN
		 
				 (  
					'1636'
				 ) 
			 

		 
		ORDER BY No
DEBUG: org.mybatis.spring.SqlSessionUtils - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@41cc38cd]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@41cc38cd]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@41cc38cd]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@41cc38cd]
DEBUG: first.common.logger.LoggerAspect - Controller  	:  first.builder.controller.BuilderController.builderContentsAnswer()
DEBUG: first.common.logger.LoggerAspect - Controller  	:  first.builder.controller.BuilderController.builderBottomAnswer()
DEBUG: first.common.logger.LoggerAspect - Controller  	:  first.builder.controller.BuilderController.getTask()
DEBUG: first.common.logger.LoggerAspect - ServiceImpl  	:  first.builder.service.BuilderService.getTaskCount()
DEBUG: first.common.logger.LoggerAspect - DAO  		:  first.builder.dao.BuilderDAO.getTaskCount()
DEBUG: first.builder.dao.AbstractDAO - 	 QueryId  	:  builder.getTaskCount
DEBUG: org.mybatis.spring.SqlSessionUtils - Creating a new SqlSession
DEBUG: org.mybatis.spring.SqlSessionUtils - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1ddc072a]
DEBUG: org.mybatis.spring.transaction.SpringManagedTransaction - JDBC Connection [net.sf.log4jdbc.ConnectionSpy@6c4f98c4] will be managed by Spring
2024-03-04 12:28:41,711  INFO SQL(simplebot)        :  SELECT COUNT(*) FROM Intent WHERE Account=1636
 and Language=1
DEBUG: org.mybatis.spring.SqlSessionUtils - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1ddc072a]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1ddc072a]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1ddc072a]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1ddc072a]
DEBUG: first.common.logger.LoggerAspect - ServiceImpl  	:  first.builder.service.BuilderService.getAnswerList()
DEBUG: first.common.logger.LoggerAspect - DAO  		:  first.builder.dao.BuilderDAO.getAnswerList()
DEBUG: first.builder.dao.AbstractDAO - 	 QueryId  	:  builder.getAnswerList
DEBUG: org.mybatis.spring.SqlSessionUtils - Creating a new SqlSession
DEBUG: org.mybatis.spring.SqlSessionUtils - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@71af0eb1]
DEBUG: org.mybatis.spring.transaction.SpringManagedTransaction - JDBC Connection [net.sf.log4jdbc.ConnectionSpy@7085d9d3] will be managed by Spring
2024-03-04 12:28:41,719  INFO SQL(simplebot)        :  SELECT I.No, I.Main, I.Name, A.answer, I.Account
		FROM Intent I LEFT OUTER JOIN Answer A
		ON I.Answer = A.No
		WHERE I.Account=1636
 and I.Language=1
		ORDER BY I.No
		OFFSET 0 ROWS
		FETCH NEXT 15 ROWS ONLY
DEBUG: org.mybatis.spring.SqlSessionUtils - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@71af0eb1]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@71af0eb1]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@71af0eb1]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@71af0eb1]
DEBUG: first.common.logger.LoggerAspect - ServiceImpl  	:  first.builder.service.BuilderService.getAllIntents()
DEBUG: first.common.logger.LoggerAspect - DAO  		:  first.builder.dao.BuilderDAO.getAllIntents()
DEBUG: first.builder.dao.AbstractDAO - 	 QueryId  	:  builder.getAllIntents
DEBUG: org.mybatis.spring.SqlSessionUtils - Creating a new SqlSession
DEBUG: org.mybatis.spring.SqlSessionUtils - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@261837d4]
DEBUG: org.mybatis.spring.transaction.SpringManagedTransaction - JDBC Connection [net.sf.log4jdbc.ConnectionSpy@5d0c4fae] will be managed by Spring
2024-03-04 12:28:41,731  INFO SQL(simplebot)        :  SELECT I.No, I.Main, I.Name,I.Next, I.URL, I.Language
		FROM Intent I
		WHERE I.Account=1636
		ORDER BY I.No
DEBUG: org.mybatis.spring.SqlSessionUtils - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@261837d4]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@261837d4]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@261837d4]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@261837d4]
DEBUG: first.common.logger.LoggerAspect - ServiceImpl  	:  first.builder.service.BuilderService.getAllBertIntents()
DEBUG: first.common.logger.LoggerAspect - DAO  		:  first.builder.dao.BuilderDAO.getAllBertIntents()
DEBUG: first.builder.dao.AbstractDAO - 	 QueryId  	:  builder.getAllBertIntents
DEBUG: first.common.logger.LoggerAspect - Controller  	:  first.builder.controller.BuilderController.getTask()
DEBUG: org.mybatis.spring.SqlSessionUtils - Creating a new SqlSession
DEBUG: org.mybatis.spring.SqlSessionUtils - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@3e8f9af2]
DEBUG: org.mybatis.spring.transaction.SpringManagedTransaction - JDBC Connection [net.sf.log4jdbc.ConnectionSpy@7294ded7] will be managed by Spring
2024-03-04 12:28:41,738  INFO SQL(simplebot)        :  SELECT B.No, B.Name, B.Language
		FROM BertIntent B LEFT OUTER JOIN BackendInfo BI
		ON B.BertItfId = BI.id
		WHERE BI.host=1636
		ORDER BY B.No
DEBUG: org.mybatis.spring.SqlSessionUtils - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@3e8f9af2]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@3e8f9af2]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@3e8f9af2]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@3e8f9af2]
DEBUG: first.common.logger.LoggerAspect - ServiceImpl  	:  first.builder.service.BuilderService.getTaskCount()
DEBUG: first.common.logger.LoggerAspect - DAO  		:  first.builder.dao.BuilderDAO.getTaskCount()
DEBUG: first.builder.dao.AbstractDAO - 	 QueryId  	:  builder.getTaskCount
DEBUG: org.mybatis.spring.SqlSessionUtils - Creating a new SqlSession
DEBUG: org.mybatis.spring.SqlSessionUtils - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@a680ae]
DEBUG: org.mybatis.spring.transaction.SpringManagedTransaction - JDBC Connection [net.sf.log4jdbc.ConnectionSpy@6f830bf0] will be managed by Spring
2024-03-04 12:28:41,745  INFO SQL(simplebot)        :  SELECT COUNT(*) FROM Intent WHERE Account=1636
 and Language=1
DEBUG: org.mybatis.spring.SqlSessionUtils - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@a680ae]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@a680ae]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@a680ae]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@a680ae]
DEBUG: first.common.logger.LoggerAspect - ServiceImpl  	:  first.builder.service.BuilderService.getAnswerList()
DEBUG: first.common.logger.LoggerAspect - DAO  		:  first.builder.dao.BuilderDAO.getAnswerList()
DEBUG: first.builder.dao.AbstractDAO - 	 QueryId  	:  builder.getAnswerList
DEBUG: org.mybatis.spring.SqlSessionUtils - Creating a new SqlSession
DEBUG: org.mybatis.spring.SqlSessionUtils - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@5c8b43aa]
DEBUG: org.mybatis.spring.transaction.SpringManagedTransaction - JDBC Connection [net.sf.log4jdbc.ConnectionSpy@4c701c42] will be managed by Spring
2024-03-04 12:28:41,749  INFO SQL(simplebot)        :  SELECT I.No, I.Main, I.Name, A.answer, I.Account
		FROM Intent I LEFT OUTER JOIN Answer A
		ON I.Answer = A.No
		WHERE I.Account=1636
 and I.Language=1
		ORDER BY I.No
		OFFSET 0 ROWS
		FETCH NEXT 15 ROWS ONLY
DEBUG: org.mybatis.spring.SqlSessionUtils - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@5c8b43aa]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@5c8b43aa]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@5c8b43aa]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@5c8b43aa]
DEBUG: first.common.logger.LoggerAspect - ServiceImpl  	:  first.builder.service.BuilderService.getAllIntents()
DEBUG: first.common.logger.LoggerAspect - DAO  		:  first.builder.dao.BuilderDAO.getAllIntents()
DEBUG: first.builder.dao.AbstractDAO - 	 QueryId  	:  builder.getAllIntents
DEBUG: org.mybatis.spring.SqlSessionUtils - Creating a new SqlSession
DEBUG: org.mybatis.spring.SqlSessionUtils - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@7366093c]
DEBUG: org.mybatis.spring.transaction.SpringManagedTransaction - JDBC Connection [net.sf.log4jdbc.ConnectionSpy@7caec363] will be managed by Spring
2024-03-04 12:28:41,753  INFO SQL(simplebot)        :  SELECT I.No, I.Main, I.Name,I.Next, I.URL, I.Language
		FROM Intent I
		WHERE I.Account=1636
		ORDER BY I.No
DEBUG: org.mybatis.spring.SqlSessionUtils - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@7366093c]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@7366093c]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@7366093c]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@7366093c]
DEBUG: first.common.logger.LoggerAspect - ServiceImpl  	:  first.builder.service.BuilderService.getAllBertIntents()
DEBUG: first.common.logger.LoggerAspect - DAO  		:  first.builder.dao.BuilderDAO.getAllBertIntents()
DEBUG: first.builder.dao.AbstractDAO - 	 QueryId  	:  builder.getAllBertIntents
DEBUG: org.mybatis.spring.SqlSessionUtils - Creating a new SqlSession
DEBUG: org.mybatis.spring.SqlSessionUtils - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1743eb7e]
DEBUG: org.mybatis.spring.transaction.SpringManagedTransaction - JDBC Connection [net.sf.log4jdbc.ConnectionSpy@9eaeaad] will be managed by Spring
2024-03-04 12:28:41,758  INFO SQL(simplebot)        :  SELECT B.No, B.Name, B.Language
		FROM BertIntent B LEFT OUTER JOIN BackendInfo BI
		ON B.BertItfId = BI.id
		WHERE BI.host=1636
		ORDER BY B.No
DEBUG: org.mybatis.spring.SqlSessionUtils - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1743eb7e]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1743eb7e]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1743eb7e]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1743eb7e]
DEBUG: first.common.logger.LoggerAspect - Controller  	:  first.builder.controller.BuilderController.excelSampleDown()
DEBUG: first.common.logger.LoggerAspect - ServiceImpl  	:  first.builder.service.BuilderService.getChatLang()
DEBUG: first.common.logger.LoggerAspect - DAO  		:  first.builder.dao.BuilderDAO.getChatLang()
DEBUG: first.builder.dao.AbstractDAO - 	 QueryId  	:  builder.getChatLang
DEBUG: org.mybatis.spring.SqlSessionUtils - Creating a new SqlSession
DEBUG: org.mybatis.spring.SqlSessionUtils - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@2a1c570b]
DEBUG: org.mybatis.spring.transaction.SpringManagedTransaction - JDBC Connection [net.sf.log4jdbc.ConnectionSpy@7df261] will be managed by Spring
2024-03-04 12:28:44,300  INFO SQL(simplebot)        :  SELECT Language FROM Account WHERE No = '1636'
DEBUG: org.mybatis.spring.SqlSessionUtils - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@2a1c570b]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@2a1c570b]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@2a1c570b]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@2a1c570b]
04-Mar-2024 12:28:44.387 WARNING [http-nio-18090-exec-2] org.apache.coyote.http11.Http11Processor.prepareResponse The HTTP response header [Content-Disposition] with value [attachment;filename=[chatbot] TASK_ANSWER_샘플데이터.xlsx] has been removed from the response because it is invalid
	java.lang.IllegalArgumentException: The Unicode character [샘] at code point [49,368] cannot be encoded as it is outside the permitted range of 0 to 255
		at org.apache.tomcat.util.buf.MessageBytes.toBytesSimple(MessageBytes.java:310)
		at org.apache.tomcat.util.buf.MessageBytes.toBytes(MessageBytes.java:283)
		at org.apache.coyote.http11.Http11OutputBuffer.write(Http11OutputBuffer.java:438)
		at org.apache.coyote.http11.Http11OutputBuffer.sendHeader(Http11OutputBuffer.java:417)
		at org.apache.coyote.http11.Http11Processor.prepareResponse(Http11Processor.java:1269)
		at org.apache.coyote.AbstractProcessor.action(AbstractProcessor.java:380)
		at org.apache.coyote.Response.action(Response.java:206)
		at org.apache.coyote.Response.sendHeaders(Response.java:415)
		at org.apache.catalina.connector.OutputBuffer.doFlush(OutputBuffer.java:309)
		at org.apache.catalina.connector.OutputBuffer.flush(OutputBuffer.java:289)
		at org.apache.catalina.connector.CoyoteOutputStream.flush(CoyoteOutputStream.java:120)
		at org.apache.commons.compress.archivers.zip.ZipArchiveOutputStream.flush(ZipArchiveOutputStream.java:979)
		at java.io.FilterOutputStream.flush(FilterOutputStream.java:140)
		at com.sun.org.apache.xml.internal.serializer.WriterToUTF8Buffered.flush(WriterToUTF8Buffered.java:472)
		at com.sun.org.apache.xml.internal.serializer.ToStream.flushWriter(ToStream.java:290)
		at com.sun.org.apache.xml.internal.serializer.ToXMLStream.endDocument(ToXMLStream.java:213)
		at com.sun.org.apache.xml.internal.serializer.ToUnknownStream.endDocument(ToUnknownStream.java:829)
		at com.sun.org.apache.xalan.internal.xsltc.trax.DOM2TO.parse(DOM2TO.java:137)
		at com.sun.org.apache.xalan.internal.xsltc.trax.DOM2TO.parse(DOM2TO.java:96)
		at com.sun.org.apache.xalan.internal.xsltc.trax.TransformerImpl.transformIdentity(TransformerImpl.java:686)
		at com.sun.org.apache.xalan.internal.xsltc.trax.TransformerImpl.transform(TransformerImpl.java:730)
		at com.sun.org.apache.xalan.internal.xsltc.trax.TransformerImpl.transform(TransformerImpl.java:345)
		at org.apache.poi.openxml4j.opc.StreamHelper.saveXmlInStream(StreamHelper.java:84)
		at org.apache.poi.openxml4j.opc.internal.ZipContentTypeManager.saveImpl(ZipContentTypeManager.java:69)
		at org.apache.poi.openxml4j.opc.internal.ContentTypeManager.save(ContentTypeManager.java:449)
		at org.apache.poi.openxml4j.opc.ZipPackage.saveImpl(ZipPackage.java:518)
		at org.apache.poi.openxml4j.opc.OPCPackage.save(OPCPackage.java:1489)
		at org.apache.poi.ooxml.POIXMLDocument.write(POIXMLDocument.java:242)
		at first.builder.controller.BuilderController.excelSampleDown(BuilderController.java:1362)
		at first.builder.controller.BuilderController$$FastClassBySpringCGLIB$$c1e54596.invoke(<generated>)
		at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
		at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:736)
		at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:157)
		at org.springframework.aop.aspectj.MethodInvocationProceedingJoinPoint.proceed(MethodInvocationProceedingJoinPoint.java:84)
		at first.common.logger.LoggerAspect.logPrint(LoggerAspect.java:29)
		at sun.reflect.GeneratedMethodAccessor69.invoke(Unknown Source)
		at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
		at java.lang.reflect.Method.invoke(Method.java:498)
		at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:627)
		at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:616)
		at org.springframework.aop.aspectj.AspectJAroundAdvice.invoke(AspectJAroundAdvice.java:70)
		at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
		at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:92)
		at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
		at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:671)
		at first.builder.controller.BuilderController$$EnhancerBySpringCGLIB$$16f07cbd.excelSampleDown(<generated>)
		at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
		at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
		at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
		at java.lang.reflect.Method.invoke(Method.java:498)
		at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:205)
		at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:133)
		at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:97)
		at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:849)
		at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:760)
		at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:85)
		at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:967)
		at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:901)
		at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:970)
		at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:861)
		at javax.servlet.http.HttpServlet.service(HttpServlet.java:489)
		at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:846)
		at javax.servlet.http.HttpServlet.service(HttpServlet.java:583)
		at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:212)
		at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:156)
		at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
		at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:181)
		at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:156)
		at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:197)
		at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
		at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:181)
		at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:156)
		at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:168)
		at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
		at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:483)
		at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:130)
		at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
		at org.apache.catalina.valves.AbstractAccessLogValve.invoke(AbstractAccessLogValve.java:679)
		at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
		at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:346)
		at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:617)
		at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
		at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:934)
		at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1698)
		at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
		at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
		at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
		at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
		at java.lang.Thread.run(Thread.java:750)
04-Mar-2024 12:34:27.466 INFO [ContainerBackgroundProcessor[StandardEngine[Catalina]]] org.apache.catalina.startup.HostConfig.undeploy Undeploying context [/sds-builder]
04-Mar-2024 12:34:27.488 WARNING [ContainerBackgroundProcessor[StandardEngine[Catalina]]] org.apache.catalina.loader.WebappClassLoaderBase.clearReferencesJdbc The web application [sds-builder] registered the JDBC driver [com.mysql.jdbc.Driver] but failed to unregister it when the web application was stopped. To prevent a memory leak, the JDBC Driver has been forcibly unregistered.
04-Mar-2024 12:34:27.489 WARNING [ContainerBackgroundProcessor[StandardEngine[Catalina]]] org.apache.catalina.loader.WebappClassLoaderBase.clearReferencesJdbc The web application [sds-builder] registered the JDBC driver [net.sf.log4jdbc.DriverSpy] but failed to unregister it when the web application was stopped. To prevent a memory leak, the JDBC Driver has been forcibly unregistered.
04-Mar-2024 12:34:27.489 WARNING [ContainerBackgroundProcessor[StandardEngine[Catalina]]] org.apache.catalina.loader.WebappClassLoaderBase.clearReferencesJdbc The web application [sds-builder] registered the JDBC driver [com.microsoft.sqlserver.jdbc.SQLServerDriver] but failed to unregister it when the web application was stopped. To prevent a memory leak, the JDBC Driver has been forcibly unregistered.
04-Mar-2024 12:34:27.490 WARNING [ContainerBackgroundProcessor[StandardEngine[Catalina]]] org.apache.catalina.loader.WebappClassLoaderBase.clearReferencesThreads The web application [sds-builder] appears to have started a thread named [mysql-cj-abandoned-connection-cleanup] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 java.lang.Object.wait(Native Method)
 java.lang.ref.ReferenceQueue.remove(ReferenceQueue.java:144)
 com.mysql.jdbc.AbandonedConnectionCleanupThread.run(AbandonedConnectionCleanupThread.java:80)
 java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
 java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
 java.lang.Thread.run(Thread.java:750)
04-Mar-2024 12:34:27.554 INFO [localhost-startStop-2] org.apache.catalina.startup.HostConfig.deployWAR Deploying web application archive [/home/minds/maum/sds-builder/apache-tomcat-8.5.99/webapps/sds-builder.war]
04-Mar-2024 12:34:28.751 INFO [mysql-cj-abandoned-connection-cleanup] org.apache.catalina.loader.WebappClassLoaderBase.checkStateForResourceLoading Illegal access: this web application instance has been stopped already. Could not load []. The following stack trace is thrown for debugging purposes as well as to attempt to terminate the thread which caused the illegal access.
	java.lang.IllegalStateException: Illegal access: this web application instance has been stopped already. Could not load []. The following stack trace is thrown for debugging purposes as well as to attempt to terminate the thread which caused the illegal access.
		at org.apache.catalina.loader.WebappClassLoaderBase.checkStateForResourceLoading(WebappClassLoaderBase.java:1358)
		at org.apache.catalina.loader.WebappClassLoaderBase.getResource(WebappClassLoaderBase.java:990)
		at com.mysql.jdbc.AbandonedConnectionCleanupThread.checkThreadContextClassLoader(AbandonedConnectionCleanupThread.java:112)
		at com.mysql.jdbc.AbandonedConnectionCleanupThread.run(AbandonedConnectionCleanupThread.java:79)
		at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
		at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
		at java.lang.Thread.run(Thread.java:750)
04-Mar-2024 12:34:28.752 INFO [mysql-cj-abandoned-connection-cleanup] org.apache.catalina.loader.WebappClassLoaderBase.checkStateForResourceLoading Illegal access: this web application instance has been stopped already. Could not load []. The following stack trace is thrown for debugging purposes as well as to attempt to terminate the thread which caused the illegal access.
	java.lang.IllegalStateException: Illegal access: this web application instance has been stopped already. Could not load []. The following stack trace is thrown for debugging purposes as well as to attempt to terminate the thread which caused the illegal access.
		at org.apache.catalina.loader.WebappClassLoaderBase.checkStateForResourceLoading(WebappClassLoaderBase.java:1358)
		at org.apache.catalina.loader.WebappClassLoaderBase.getResource(WebappClassLoaderBase.java:990)
		at com.mysql.jdbc.AbandonedConnectionCleanupThread.checkThreadContextClassLoader(AbandonedConnectionCleanupThread.java:112)
		at com.mysql.jdbc.AbandonedConnectionCleanupThread.run(AbandonedConnectionCleanupThread.java:79)
		at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
		at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
		at java.lang.Thread.run(Thread.java:750)
04-Mar-2024 12:34:28.752 INFO [mysql-cj-abandoned-connection-cleanup] org.apache.catalina.loader.WebappClassLoaderBase.checkStateForResourceLoading Illegal access: this web application instance has been stopped already. Could not load []. The following stack trace is thrown for debugging purposes as well as to attempt to terminate the thread which caused the illegal access.
	java.lang.IllegalStateException: Illegal access: this web application instance has been stopped already. Could not load []. The following stack trace is thrown for debugging purposes as well as to attempt to terminate the thread which caused the illegal access.
		at org.apache.catalina.loader.WebappClassLoaderBase.checkStateForResourceLoading(WebappClassLoaderBase.java:1358)
		at org.apache.catalina.loader.WebappClassLoaderBase.getResource(WebappClassLoaderBase.java:990)
		at com.mysql.jdbc.AbandonedConnectionCleanupThread.checkThreadContextClassLoader(AbandonedConnectionCleanupThread.java:112)
		at com.mysql.jdbc.AbandonedConnectionCleanupThread.run(AbandonedConnectionCleanupThread.java:79)
		at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
		at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
		at java.lang.Thread.run(Thread.java:750)
04-Mar-2024 12:34:28.752 INFO [mysql-cj-abandoned-connection-cleanup] org.apache.catalina.loader.WebappClassLoaderBase.checkStateForResourceLoading Illegal access: this web application instance has been stopped already. Could not load []. The following stack trace is thrown for debugging purposes as well as to attempt to terminate the thread which caused the illegal access.
	java.lang.IllegalStateException: Illegal access: this web application instance has been stopped already. Could not load []. The following stack trace is thrown for debugging purposes as well as to attempt to terminate the thread which caused the illegal access.
		at org.apache.catalina.loader.WebappClassLoaderBase.checkStateForResourceLoading(WebappClassLoaderBase.java:1358)
		at org.apache.catalina.loader.WebappClassLoaderBase.getResource(WebappClassLoaderBase.java:990)
		at com.mysql.jdbc.AbandonedConnectionCleanupThread.checkThreadContextClassLoader(AbandonedConnectionCleanupThread.java:112)
		at com.mysql.jdbc.AbandonedConnectionCleanupThread.run(AbandonedConnectionCleanupThread.java:79)
		at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
		at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
		at java.lang.Thread.run(Thread.java:750)
04-Mar-2024 12:34:29.944 INFO [localhost-startStop-2] org.apache.jasper.servlet.TldScanner.scanJars At least one JAR was scanned for TLDs yet contained no TLDs. Enable debug logging for this logger for a complete list of JARs that were scanned but no TLDs were found in them. Skipping unneeded JARs during scanning can improve startup time and JSP compilation time.
DEBUG: org.mybatis.spring.SqlSessionFactoryBean - Property 'configuration' or 'configLocation' not specified, using default MyBatis Configuration
DEBUG: org.mybatis.spring.SqlSessionFactoryBean - Parsed mapper file: 'file [/home/minds/maum/sds-builder/apache-tomcat-8.5.99/webapps/sds-builder/WEB-INF/classes/mapper/maria/Chatbot/Builder_SQL.xml]'
DEBUG: org.mybatis.spring.SqlSessionFactoryBean - Parsed mapper file: 'file [/home/minds/maum/sds-builder/apache-tomcat-8.5.99/webapps/sds-builder/WEB-INF/classes/mapper/maria/Chatbot/MaumSDS_SQL.xml]'
DEBUG: org.mybatis.spring.SqlSessionFactoryBean - Property 'configuration' or 'configLocation' not specified, using default MyBatis Configuration
DEBUG: org.mybatis.spring.SqlSessionFactoryBean - Parsed mapper file: 'file [/home/minds/maum/sds-builder/apache-tomcat-8.5.99/webapps/sds-builder/WEB-INF/classes/mapper/maria/HAPPYCALL4/NQA_SQL.xml]'
DEBUG: org.mybatis.spring.SqlSessionFactoryBean - Parsed mapper file: 'file [/home/minds/maum/sds-builder/apache-tomcat-8.5.99/webapps/sds-builder/WEB-INF/classes/mapper/maria/HAPPYCALL4/SimpleBot_SQL.xml]'
SimpleBot Execution Environment : prod
SimpleBot BertIntent itfIP : 0
SimpleBot BertIntent nerIP : 0
SimpleBot BL IP : 125.132.250.244
SimpleBot CM IP : 121.133.247.250
SimpleBot M2U rest address : http://localhost:9990
SimpleBot Style Resources Path : /home/minds/maum/sds-builder/imgUpload
Default Resources Make : chatbot.css
Default Resources Make : chatbot_custom.css
Default Resources Make : chatbot_floating.css
Default Resources Make : IconImg
Default Resources Make : logoImg
Default Resources Make : default
Default Resources Make : mindslab
Default Resources Make : redtie
Default Resource constructed.
DEBUG: first.common.logger.LoggerAspect - ServiceImpl  	:  first.builder.service.BuilderService.getNqaStatusChatbotList()
DEBUG: first.common.logger.LoggerAspect - DAO  		:  first.builder.dao.BuilderDAO.getNqaStatusChatbotList()
DEBUG: first.builder.dao.AbstractDAO - 	 QueryId  	:  builder.getNqaStatusChatbotList
DEBUG: org.mybatis.spring.SqlSessionUtils - Creating a new SqlSession
DEBUG: org.mybatis.spring.SqlSessionUtils - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@2ce9c66]
DEBUG: org.mybatis.spring.transaction.SpringManagedTransaction - JDBC Connection [net.sf.log4jdbc.ConnectionSpy@13a32c21] will be managed by Spring
2024-03-04 12:34:31,759  INFO SQL(simplebot)        :  SELECT No as host, Name, 'preparation' as nqaUploadStatus
 from Account
		ORDER BY No
DEBUG: org.mybatis.spring.SqlSessionUtils - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@2ce9c66]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@2ce9c66]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@2ce9c66]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@2ce9c66]
04-Mar-2024 12:34:32.718 INFO [localhost-startStop-2] org.apache.catalina.startup.HostConfig.deployWAR Deployment of web application archive [/home/minds/maum/sds-builder/apache-tomcat-8.5.99/webapps/sds-builder.war] has finished in [5,165] ms
DEBUG: first.common.logger.LoggerAspect - Controller  	:  first.builder.controller.BuilderController.chatbotBuilderCommon()
DEBUG: first.common.logger.LoggerAspect - Controller  	:  first.builder.controller.BuilderController.getChatList()
DEBUG: first.common.logger.LoggerAspect - ServiceImpl  	:  first.builder.service.BuilderService.getChatbotList()
DEBUG: first.common.logger.LoggerAspect - DAO  		:  first.builder.dao.BuilderDAO.getChatbotList()
DEBUG: first.builder.dao.AbstractDAO - 	 QueryId  	:  builder.getChatbotList
DEBUG: org.mybatis.spring.SqlSessionUtils - Creating a new SqlSession
DEBUG: org.mybatis.spring.SqlSessionUtils - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@e86abdc]
DEBUG: org.mybatis.spring.transaction.SpringManagedTransaction - JDBC Connection [net.sf.log4jdbc.ConnectionSpy@5d08f5a4] will be managed by Spring
2024-03-04 12:34:42,837  INFO SQL(simplebot)        :  SELECT  /* No, Name, Host, Language */
			*
		from Account WHERE 1=1
		AND No IN
		 
				 (  
					'1636'
				 ) 
			 

		 
		ORDER BY No
DEBUG: org.mybatis.spring.SqlSessionUtils - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@e86abdc]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@e86abdc]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@e86abdc]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@e86abdc]
DEBUG: first.common.logger.LoggerAspect - Controller  	:  first.builder.controller.BuilderController.builderContentsAnswer()
DEBUG: first.common.logger.LoggerAspect - Controller  	:  first.builder.controller.BuilderController.builderBottomAnswer()
DEBUG: first.common.logger.LoggerAspect - Controller  	:  first.builder.controller.BuilderController.getTask()
DEBUG: first.common.logger.LoggerAspect - ServiceImpl  	:  first.builder.service.BuilderService.getTaskCount()
DEBUG: first.common.logger.LoggerAspect - DAO  		:  first.builder.dao.BuilderDAO.getTaskCount()
DEBUG: first.builder.dao.AbstractDAO - 	 QueryId  	:  builder.getTaskCount
DEBUG: org.mybatis.spring.SqlSessionUtils - Creating a new SqlSession
DEBUG: org.mybatis.spring.SqlSessionUtils - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@3bae684d]
DEBUG: org.mybatis.spring.transaction.SpringManagedTransaction - JDBC Connection [net.sf.log4jdbc.ConnectionSpy@596ee0e0] will be managed by Spring
2024-03-04 12:34:43,020  INFO SQL(simplebot)        :  SELECT COUNT(*) FROM Intent WHERE Account=1636
 and Language=1
DEBUG: org.mybatis.spring.SqlSessionUtils - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@3bae684d]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@3bae684d]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@3bae684d]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@3bae684d]
DEBUG: first.common.logger.LoggerAspect - ServiceImpl  	:  first.builder.service.BuilderService.getAnswerList()
DEBUG: first.common.logger.LoggerAspect - DAO  		:  first.builder.dao.BuilderDAO.getAnswerList()
DEBUG: first.builder.dao.AbstractDAO - 	 QueryId  	:  builder.getAnswerList
DEBUG: org.mybatis.spring.SqlSessionUtils - Creating a new SqlSession
DEBUG: org.mybatis.spring.SqlSessionUtils - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@34537ed7]
DEBUG: org.mybatis.spring.transaction.SpringManagedTransaction - JDBC Connection [net.sf.log4jdbc.ConnectionSpy@5ed208b5] will be managed by Spring
2024-03-04 12:34:43,027  INFO SQL(simplebot)        :  SELECT I.No, I.Main, I.Name, A.answer, I.Account
		FROM Intent I LEFT OUTER JOIN Answer A
		ON I.Answer = A.No
		WHERE I.Account=1636
 and I.Language=1
		ORDER BY I.No
		OFFSET 0 ROWS
		FETCH NEXT 15 ROWS ONLY
DEBUG: org.mybatis.spring.SqlSessionUtils - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@34537ed7]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@34537ed7]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@34537ed7]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@34537ed7]
DEBUG: first.common.logger.LoggerAspect - ServiceImpl  	:  first.builder.service.BuilderService.getAllIntents()
DEBUG: first.common.logger.LoggerAspect - DAO  		:  first.builder.dao.BuilderDAO.getAllIntents()
DEBUG: first.builder.dao.AbstractDAO - 	 QueryId  	:  builder.getAllIntents
DEBUG: org.mybatis.spring.SqlSessionUtils - Creating a new SqlSession
DEBUG: org.mybatis.spring.SqlSessionUtils - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1934c011]
DEBUG: org.mybatis.spring.transaction.SpringManagedTransaction - JDBC Connection [net.sf.log4jdbc.ConnectionSpy@6ec35e0c] will be managed by Spring
2024-03-04 12:34:43,038  INFO SQL(simplebot)        :  SELECT I.No, I.Main, I.Name,I.Next, I.URL, I.Language
		FROM Intent I
		WHERE I.Account=1636
		ORDER BY I.No
DEBUG: org.mybatis.spring.SqlSessionUtils - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1934c011]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1934c011]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1934c011]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1934c011]
DEBUG: first.common.logger.LoggerAspect - ServiceImpl  	:  first.builder.service.BuilderService.getAllBertIntents()
DEBUG: first.common.logger.LoggerAspect - DAO  		:  first.builder.dao.BuilderDAO.getAllBertIntents()
DEBUG: first.builder.dao.AbstractDAO - 	 QueryId  	:  builder.getAllBertIntents
DEBUG: org.mybatis.spring.SqlSessionUtils - Creating a new SqlSession
DEBUG: org.mybatis.spring.SqlSessionUtils - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@549b3ea6]
DEBUG: org.mybatis.spring.transaction.SpringManagedTransaction - JDBC Connection [net.sf.log4jdbc.ConnectionSpy@6364aafe] will be managed by Spring
2024-03-04 12:34:43,045  INFO SQL(simplebot)        :  SELECT B.No, B.Name, B.Language
		FROM BertIntent B LEFT OUTER JOIN BackendInfo BI
		ON B.BertItfId = BI.id
		WHERE BI.host=1636
		ORDER BY B.No
DEBUG: org.mybatis.spring.SqlSessionUtils - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@549b3ea6]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@549b3ea6]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@549b3ea6]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@549b3ea6]
DEBUG: first.common.logger.LoggerAspect - Controller  	:  first.builder.controller.BuilderController.getTask()
DEBUG: first.common.logger.LoggerAspect - ServiceImpl  	:  first.builder.service.BuilderService.getTaskCount()
DEBUG: first.common.logger.LoggerAspect - DAO  		:  first.builder.dao.BuilderDAO.getTaskCount()
DEBUG: first.builder.dao.AbstractDAO - 	 QueryId  	:  builder.getTaskCount
DEBUG: org.mybatis.spring.SqlSessionUtils - Creating a new SqlSession
DEBUG: org.mybatis.spring.SqlSessionUtils - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@4ef83566]
DEBUG: org.mybatis.spring.transaction.SpringManagedTransaction - JDBC Connection [net.sf.log4jdbc.ConnectionSpy@4d4cad5a] will be managed by Spring
2024-03-04 12:34:43,063  INFO SQL(simplebot)        :  SELECT COUNT(*) FROM Intent WHERE Account=1636
 and Language=1
DEBUG: org.mybatis.spring.SqlSessionUtils - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@4ef83566]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@4ef83566]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@4ef83566]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@4ef83566]
DEBUG: first.common.logger.LoggerAspect - ServiceImpl  	:  first.builder.service.BuilderService.getAnswerList()
DEBUG: first.common.logger.LoggerAspect - DAO  		:  first.builder.dao.BuilderDAO.getAnswerList()
DEBUG: first.builder.dao.AbstractDAO - 	 QueryId  	:  builder.getAnswerList
DEBUG: org.mybatis.spring.SqlSessionUtils - Creating a new SqlSession
DEBUG: org.mybatis.spring.SqlSessionUtils - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@6f9b42fe]
DEBUG: org.mybatis.spring.transaction.SpringManagedTransaction - JDBC Connection [net.sf.log4jdbc.ConnectionSpy@4c19732c] will be managed by Spring
2024-03-04 12:34:43,067  INFO SQL(simplebot)        :  SELECT I.No, I.Main, I.Name, A.answer, I.Account
		FROM Intent I LEFT OUTER JOIN Answer A
		ON I.Answer = A.No
		WHERE I.Account=1636
 and I.Language=1
		ORDER BY I.No
		OFFSET 0 ROWS
		FETCH NEXT 15 ROWS ONLY
DEBUG: org.mybatis.spring.SqlSessionUtils - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@6f9b42fe]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@6f9b42fe]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@6f9b42fe]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@6f9b42fe]
DEBUG: first.common.logger.LoggerAspect - ServiceImpl  	:  first.builder.service.BuilderService.getAllIntents()
DEBUG: first.common.logger.LoggerAspect - DAO  		:  first.builder.dao.BuilderDAO.getAllIntents()
DEBUG: first.builder.dao.AbstractDAO - 	 QueryId  	:  builder.getAllIntents
DEBUG: org.mybatis.spring.SqlSessionUtils - Creating a new SqlSession
DEBUG: org.mybatis.spring.SqlSessionUtils - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@5783a591]
DEBUG: org.mybatis.spring.transaction.SpringManagedTransaction - JDBC Connection [net.sf.log4jdbc.ConnectionSpy@3fdc527e] will be managed by Spring
2024-03-04 12:34:43,070  INFO SQL(simplebot)        :  SELECT I.No, I.Main, I.Name,I.Next, I.URL, I.Language
		FROM Intent I
		WHERE I.Account=1636
		ORDER BY I.No
DEBUG: org.mybatis.spring.SqlSessionUtils - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@5783a591]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@5783a591]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@5783a591]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@5783a591]
DEBUG: first.common.logger.LoggerAspect - ServiceImpl  	:  first.builder.service.BuilderService.getAllBertIntents()
DEBUG: first.common.logger.LoggerAspect - DAO  		:  first.builder.dao.BuilderDAO.getAllBertIntents()
DEBUG: first.builder.dao.AbstractDAO - 	 QueryId  	:  builder.getAllBertIntents
DEBUG: org.mybatis.spring.SqlSessionUtils - Creating a new SqlSession
DEBUG: org.mybatis.spring.SqlSessionUtils - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@6047c5e0]
DEBUG: org.mybatis.spring.transaction.SpringManagedTransaction - JDBC Connection [net.sf.log4jdbc.ConnectionSpy@2dd8eaa0] will be managed by Spring
2024-03-04 12:34:43,075  INFO SQL(simplebot)        :  SELECT B.No, B.Name, B.Language
		FROM BertIntent B LEFT OUTER JOIN BackendInfo BI
		ON B.BertItfId = BI.id
		WHERE BI.host=1636
		ORDER BY B.No
DEBUG: org.mybatis.spring.SqlSessionUtils - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@6047c5e0]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@6047c5e0]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@6047c5e0]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@6047c5e0]
DEBUG: first.common.logger.LoggerAspect - Controller  	:  first.builder.controller.BuilderController.excelSampleDown()
DEBUG: first.common.logger.LoggerAspect - ServiceImpl  	:  first.builder.service.BuilderService.getChatLang()
DEBUG: first.common.logger.LoggerAspect - DAO  		:  first.builder.dao.BuilderDAO.getChatLang()
DEBUG: first.builder.dao.AbstractDAO - 	 QueryId  	:  builder.getChatLang
DEBUG: org.mybatis.spring.SqlSessionUtils - Creating a new SqlSession
DEBUG: org.mybatis.spring.SqlSessionUtils - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@700a20cb]
DEBUG: org.mybatis.spring.transaction.SpringManagedTransaction - JDBC Connection [net.sf.log4jdbc.ConnectionSpy@521d5bbb] will be managed by Spring
2024-03-04 12:34:44,989  INFO SQL(simplebot)        :  SELECT Language FROM Account WHERE No = '1636'
DEBUG: org.mybatis.spring.SqlSessionUtils - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@700a20cb]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@700a20cb]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@700a20cb]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@700a20cb]
04-Mar-2024 12:34:45.049 WARNING [http-nio-18090-exec-7] org.apache.coyote.http11.Http11Processor.prepareResponse The HTTP response header [Content-Disposition] with value [attachment;filename=[chatbot] TASK_ANSWER_샘플데이터.xlsx] has been removed from the response because it is invalid
	java.lang.IllegalArgumentException: The Unicode character [샘] at code point [49,368] cannot be encoded as it is outside the permitted range of 0 to 255
		at org.apache.tomcat.util.buf.MessageBytes.toBytesSimple(MessageBytes.java:310)
		at org.apache.tomcat.util.buf.MessageBytes.toBytes(MessageBytes.java:283)
		at org.apache.coyote.http11.Http11OutputBuffer.write(Http11OutputBuffer.java:438)
		at org.apache.coyote.http11.Http11OutputBuffer.sendHeader(Http11OutputBuffer.java:417)
		at org.apache.coyote.http11.Http11Processor.prepareResponse(Http11Processor.java:1269)
		at org.apache.coyote.AbstractProcessor.action(AbstractProcessor.java:380)
		at org.apache.coyote.Response.action(Response.java:206)
		at org.apache.coyote.Response.sendHeaders(Response.java:415)
		at org.apache.catalina.connector.OutputBuffer.doFlush(OutputBuffer.java:309)
		at org.apache.catalina.connector.OutputBuffer.flush(OutputBuffer.java:289)
		at org.apache.catalina.connector.CoyoteOutputStream.flush(CoyoteOutputStream.java:120)
		at org.apache.commons.compress.archivers.zip.ZipArchiveOutputStream.flush(ZipArchiveOutputStream.java:979)
		at java.io.FilterOutputStream.flush(FilterOutputStream.java:140)
		at com.sun.org.apache.xml.internal.serializer.WriterToUTF8Buffered.flush(WriterToUTF8Buffered.java:472)
		at com.sun.org.apache.xml.internal.serializer.ToStream.flushWriter(ToStream.java:290)
		at com.sun.org.apache.xml.internal.serializer.ToXMLStream.endDocument(ToXMLStream.java:213)
		at com.sun.org.apache.xml.internal.serializer.ToUnknownStream.endDocument(ToUnknownStream.java:829)
		at com.sun.org.apache.xalan.internal.xsltc.trax.DOM2TO.parse(DOM2TO.java:137)
		at com.sun.org.apache.xalan.internal.xsltc.trax.DOM2TO.parse(DOM2TO.java:96)
		at com.sun.org.apache.xalan.internal.xsltc.trax.TransformerImpl.transformIdentity(TransformerImpl.java:686)
		at com.sun.org.apache.xalan.internal.xsltc.trax.TransformerImpl.transform(TransformerImpl.java:730)
		at com.sun.org.apache.xalan.internal.xsltc.trax.TransformerImpl.transform(TransformerImpl.java:345)
		at org.apache.poi.openxml4j.opc.StreamHelper.saveXmlInStream(StreamHelper.java:84)
		at org.apache.poi.openxml4j.opc.internal.ZipContentTypeManager.saveImpl(ZipContentTypeManager.java:69)
		at org.apache.poi.openxml4j.opc.internal.ContentTypeManager.save(ContentTypeManager.java:449)
		at org.apache.poi.openxml4j.opc.ZipPackage.saveImpl(ZipPackage.java:518)
		at org.apache.poi.openxml4j.opc.OPCPackage.save(OPCPackage.java:1489)
		at org.apache.poi.ooxml.POIXMLDocument.write(POIXMLDocument.java:242)
		at first.builder.controller.BuilderController.excelSampleDown(BuilderController.java:1362)
		at first.builder.controller.BuilderController$$FastClassBySpringCGLIB$$c1e54596.invoke(<generated>)
		at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
		at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:736)
		at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:157)
		at org.springframework.aop.aspectj.MethodInvocationProceedingJoinPoint.proceed(MethodInvocationProceedingJoinPoint.java:84)
		at first.common.logger.LoggerAspect.logPrint(LoggerAspect.java:29)
		at sun.reflect.GeneratedMethodAccessor96.invoke(Unknown Source)
		at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
		at java.lang.reflect.Method.invoke(Method.java:498)
		at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:627)
		at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:616)
		at org.springframework.aop.aspectj.AspectJAroundAdvice.invoke(AspectJAroundAdvice.java:70)
		at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
		at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:92)
		at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
		at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:671)
		at first.builder.controller.BuilderController$$EnhancerBySpringCGLIB$$35def25.excelSampleDown(<generated>)
		at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
		at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
		at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
		at java.lang.reflect.Method.invoke(Method.java:498)
		at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:205)
		at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:133)
		at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:97)
		at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:849)
		at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:760)
		at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:85)
		at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:967)
		at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:901)
		at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:970)
		at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:861)
		at javax.servlet.http.HttpServlet.service(HttpServlet.java:489)
		at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:846)
		at javax.servlet.http.HttpServlet.service(HttpServlet.java:583)
		at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:212)
		at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:156)
		at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
		at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:181)
		at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:156)
		at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:197)
		at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
		at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:181)
		at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:156)
		at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:168)
		at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
		at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:483)
		at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:130)
		at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
		at org.apache.catalina.valves.AbstractAccessLogValve.invoke(AbstractAccessLogValve.java:679)
		at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
		at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:346)
		at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:617)
		at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
		at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:934)
		at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1698)
		at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
		at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
		at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
		at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
		at java.lang.Thread.run(Thread.java:750)
04-Mar-2024 12:39:02.761 INFO [ContainerBackgroundProcessor[StandardEngine[Catalina]]] org.apache.catalina.startup.HostConfig.undeploy Undeploying context [/sds-builder]
04-Mar-2024 12:39:02.779 WARNING [ContainerBackgroundProcessor[StandardEngine[Catalina]]] org.apache.catalina.loader.WebappClassLoaderBase.clearReferencesJdbc The web application [sds-builder] registered the JDBC driver [com.mysql.jdbc.Driver] but failed to unregister it when the web application was stopped. To prevent a memory leak, the JDBC Driver has been forcibly unregistered.
04-Mar-2024 12:39:02.779 WARNING [ContainerBackgroundProcessor[StandardEngine[Catalina]]] org.apache.catalina.loader.WebappClassLoaderBase.clearReferencesJdbc The web application [sds-builder] registered the JDBC driver [net.sf.log4jdbc.DriverSpy] but failed to unregister it when the web application was stopped. To prevent a memory leak, the JDBC Driver has been forcibly unregistered.
04-Mar-2024 12:39:02.779 WARNING [ContainerBackgroundProcessor[StandardEngine[Catalina]]] org.apache.catalina.loader.WebappClassLoaderBase.clearReferencesJdbc The web application [sds-builder] registered the JDBC driver [com.microsoft.sqlserver.jdbc.SQLServerDriver] but failed to unregister it when the web application was stopped. To prevent a memory leak, the JDBC Driver has been forcibly unregistered.
04-Mar-2024 12:39:02.780 WARNING [ContainerBackgroundProcessor[StandardEngine[Catalina]]] org.apache.catalina.loader.WebappClassLoaderBase.clearReferencesThreads The web application [sds-builder] appears to have started a thread named [mysql-cj-abandoned-connection-cleanup] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 java.lang.Object.wait(Native Method)
 java.lang.ref.ReferenceQueue.remove(ReferenceQueue.java:144)
 com.mysql.jdbc.AbandonedConnectionCleanupThread.run(AbandonedConnectionCleanupThread.java:80)
 java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
 java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
 java.lang.Thread.run(Thread.java:750)
04-Mar-2024 12:39:02.788 INFO [ContainerBackgroundProcessor[StandardEngine[Catalina]]] org.apache.catalina.startup.HostConfig.undeploy Undeploying context [/examples]
04-Mar-2024 12:39:02.802 INFO [ContainerBackgroundProcessor[StandardEngine[Catalina]]] org.apache.catalina.startup.HostConfig.undeploy Undeploying context [/host-manager]
04-Mar-2024 12:39:02.808 INFO [ContainerBackgroundProcessor[StandardEngine[Catalina]]] org.apache.catalina.startup.HostConfig.undeploy Undeploying context [/manager]
04-Mar-2024 12:39:02.814 INFO [ContainerBackgroundProcessor[StandardEngine[Catalina]]] org.apache.catalina.startup.HostConfig.undeploy Undeploying context [/docs]
04-Mar-2024 12:39:02.819 INFO [localhost-startStop-3] org.apache.catalina.startup.HostConfig.deployWAR Deploying web application archive [/home/minds/maum/sds-builder/apache-tomcat-8.5.99/webapps/sds-builder.war]
04-Mar-2024 12:39:04.142 INFO [mysql-cj-abandoned-connection-cleanup] org.apache.catalina.loader.WebappClassLoaderBase.checkStateForResourceLoading Illegal access: this web application instance has been stopped already. Could not load []. The following stack trace is thrown for debugging purposes as well as to attempt to terminate the thread which caused the illegal access.
	java.lang.IllegalStateException: Illegal access: this web application instance has been stopped already. Could not load []. The following stack trace is thrown for debugging purposes as well as to attempt to terminate the thread which caused the illegal access.
		at org.apache.catalina.loader.WebappClassLoaderBase.checkStateForResourceLoading(WebappClassLoaderBase.java:1358)
		at org.apache.catalina.loader.WebappClassLoaderBase.getResource(WebappClassLoaderBase.java:990)
		at com.mysql.jdbc.AbandonedConnectionCleanupThread.checkThreadContextClassLoader(AbandonedConnectionCleanupThread.java:112)
		at com.mysql.jdbc.AbandonedConnectionCleanupThread.run(AbandonedConnectionCleanupThread.java:79)
		at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
		at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
		at java.lang.Thread.run(Thread.java:750)
04-Mar-2024 12:39:04.143 INFO [mysql-cj-abandoned-connection-cleanup] org.apache.catalina.loader.WebappClassLoaderBase.checkStateForResourceLoading Illegal access: this web application instance has been stopped already. Could not load []. The following stack trace is thrown for debugging purposes as well as to attempt to terminate the thread which caused the illegal access.
	java.lang.IllegalStateException: Illegal access: this web application instance has been stopped already. Could not load []. The following stack trace is thrown for debugging purposes as well as to attempt to terminate the thread which caused the illegal access.
		at org.apache.catalina.loader.WebappClassLoaderBase.checkStateForResourceLoading(WebappClassLoaderBase.java:1358)
		at org.apache.catalina.loader.WebappClassLoaderBase.getResource(WebappClassLoaderBase.java:990)
		at com.mysql.jdbc.AbandonedConnectionCleanupThread.checkThreadContextClassLoader(AbandonedConnectionCleanupThread.java:112)
		at com.mysql.jdbc.AbandonedConnectionCleanupThread.run(AbandonedConnectionCleanupThread.java:79)
		at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
		at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
		at java.lang.Thread.run(Thread.java:750)
04-Mar-2024 12:39:04.143 INFO [mysql-cj-abandoned-connection-cleanup] org.apache.catalina.loader.WebappClassLoaderBase.checkStateForResourceLoading Illegal access: this web application instance has been stopped already. Could not load []. The following stack trace is thrown for debugging purposes as well as to attempt to terminate the thread which caused the illegal access.
	java.lang.IllegalStateException: Illegal access: this web application instance has been stopped already. Could not load []. The following stack trace is thrown for debugging purposes as well as to attempt to terminate the thread which caused the illegal access.
		at org.apache.catalina.loader.WebappClassLoaderBase.checkStateForResourceLoading(WebappClassLoaderBase.java:1358)
		at org.apache.catalina.loader.WebappClassLoaderBase.getResource(WebappClassLoaderBase.java:990)
		at com.mysql.jdbc.AbandonedConnectionCleanupThread.checkThreadContextClassLoader(AbandonedConnectionCleanupThread.java:112)
		at com.mysql.jdbc.AbandonedConnectionCleanupThread.run(AbandonedConnectionCleanupThread.java:79)
		at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
		at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
		at java.lang.Thread.run(Thread.java:750)
04-Mar-2024 12:39:04.144 INFO [mysql-cj-abandoned-connection-cleanup] org.apache.catalina.loader.WebappClassLoaderBase.checkStateForResourceLoading Illegal access: this web application instance has been stopped already. Could not load []. The following stack trace is thrown for debugging purposes as well as to attempt to terminate the thread which caused the illegal access.
	java.lang.IllegalStateException: Illegal access: this web application instance has been stopped already. Could not load []. The following stack trace is thrown for debugging purposes as well as to attempt to terminate the thread which caused the illegal access.
		at org.apache.catalina.loader.WebappClassLoaderBase.checkStateForResourceLoading(WebappClassLoaderBase.java:1358)
		at org.apache.catalina.loader.WebappClassLoaderBase.getResource(WebappClassLoaderBase.java:990)
		at com.mysql.jdbc.AbandonedConnectionCleanupThread.checkThreadContextClassLoader(AbandonedConnectionCleanupThread.java:112)
		at com.mysql.jdbc.AbandonedConnectionCleanupThread.run(AbandonedConnectionCleanupThread.java:79)
		at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
		at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
		at java.lang.Thread.run(Thread.java:750)
04-Mar-2024 12:39:04.700 INFO [localhost-startStop-3] org.apache.jasper.servlet.TldScanner.scanJars At least one JAR was scanned for TLDs yet contained no TLDs. Enable debug logging for this logger for a complete list of JARs that were scanned but no TLDs were found in them. Skipping unneeded JARs during scanning can improve startup time and JSP compilation time.
DEBUG: org.mybatis.spring.SqlSessionFactoryBean - Property 'configuration' or 'configLocation' not specified, using default MyBatis Configuration
DEBUG: org.mybatis.spring.SqlSessionFactoryBean - Parsed mapper file: 'file [/home/minds/maum/sds-builder/apache-tomcat-8.5.99/webapps/sds-builder/WEB-INF/classes/mapper/maria/Chatbot/Builder_SQL.xml]'
DEBUG: org.mybatis.spring.SqlSessionFactoryBean - Parsed mapper file: 'file [/home/minds/maum/sds-builder/apache-tomcat-8.5.99/webapps/sds-builder/WEB-INF/classes/mapper/maria/Chatbot/MaumSDS_SQL.xml]'
DEBUG: org.mybatis.spring.SqlSessionFactoryBean - Property 'configuration' or 'configLocation' not specified, using default MyBatis Configuration
DEBUG: org.mybatis.spring.SqlSessionFactoryBean - Parsed mapper file: 'file [/home/minds/maum/sds-builder/apache-tomcat-8.5.99/webapps/sds-builder/WEB-INF/classes/mapper/maria/HAPPYCALL4/NQA_SQL.xml]'
DEBUG: org.mybatis.spring.SqlSessionFactoryBean - Parsed mapper file: 'file [/home/minds/maum/sds-builder/apache-tomcat-8.5.99/webapps/sds-builder/WEB-INF/classes/mapper/maria/HAPPYCALL4/SimpleBot_SQL.xml]'
SimpleBot Execution Environment : prod
SimpleBot BertIntent itfIP : 0
SimpleBot BertIntent nerIP : 0
SimpleBot BL IP : 125.132.250.244
SimpleBot CM IP : 121.133.247.250
SimpleBot M2U rest address : http://localhost:9990
SimpleBot Style Resources Path : /home/minds/maum/sds-builder/imgUpload
Default Resources Make : chatbot.css
Default Resources Make : chatbot_custom.css
Default Resources Make : chatbot_floating.css
Default Resources Make : IconImg
Default Resources Make : logoImg
Default Resources Make : default
Default Resources Make : mindslab
Default Resources Make : redtie
Default Resource constructed.
DEBUG: first.common.logger.LoggerAspect - ServiceImpl  	:  first.builder.service.BuilderService.getNqaStatusChatbotList()
DEBUG: first.common.logger.LoggerAspect - DAO  		:  first.builder.dao.BuilderDAO.getNqaStatusChatbotList()
DEBUG: first.builder.dao.AbstractDAO - 	 QueryId  	:  builder.getNqaStatusChatbotList
DEBUG: org.mybatis.spring.SqlSessionUtils - Creating a new SqlSession
DEBUG: org.mybatis.spring.SqlSessionUtils - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@45096782]
DEBUG: org.mybatis.spring.transaction.SpringManagedTransaction - JDBC Connection [net.sf.log4jdbc.ConnectionSpy@66ba0a1b] will be managed by Spring
2024-03-04 12:39:06,361  INFO SQL(simplebot)        :  SELECT No as host, Name, 'preparation' as nqaUploadStatus
 from Account
		ORDER BY No
DEBUG: org.mybatis.spring.SqlSessionUtils - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@45096782]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@45096782]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@45096782]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@45096782]
04-Mar-2024 12:39:07.255 INFO [localhost-startStop-3] org.apache.catalina.startup.HostConfig.deployWAR Deployment of web application archive [/home/minds/maum/sds-builder/apache-tomcat-8.5.99/webapps/sds-builder.war] has finished in [4,436] ms
04-Mar-2024 12:39:07.255 INFO [localhost-startStop-3] org.apache.catalina.startup.HostConfig.deployDirectory Deploying web application directory [/home/minds/maum/sds-builder/apache-tomcat-8.5.99/webapps/examples]
04-Mar-2024 12:39:07.314 INFO [localhost-startStop-3] org.apache.catalina.startup.HostConfig.deployDirectory Deployment of web application directory [/home/minds/maum/sds-builder/apache-tomcat-8.5.99/webapps/examples] has finished in [59] ms
04-Mar-2024 12:39:07.314 INFO [localhost-startStop-3] org.apache.catalina.startup.HostConfig.deployDirectory Deploying web application directory [/home/minds/maum/sds-builder/apache-tomcat-8.5.99/webapps/manager]
04-Mar-2024 12:39:07.325 INFO [localhost-startStop-3] org.apache.catalina.startup.HostConfig.deployDirectory Deployment of web application directory [/home/minds/maum/sds-builder/apache-tomcat-8.5.99/webapps/manager] has finished in [11] ms
04-Mar-2024 12:39:07.326 INFO [localhost-startStop-3] org.apache.catalina.startup.HostConfig.deployDirectory Deploying web application directory [/home/minds/maum/sds-builder/apache-tomcat-8.5.99/webapps/host-manager]
04-Mar-2024 12:39:07.337 INFO [localhost-startStop-3] org.apache.catalina.startup.HostConfig.deployDirectory Deployment of web application directory [/home/minds/maum/sds-builder/apache-tomcat-8.5.99/webapps/host-manager] has finished in [12] ms
04-Mar-2024 12:39:07.337 INFO [localhost-startStop-3] org.apache.catalina.startup.HostConfig.deployDirectory Deploying web application directory [/home/minds/maum/sds-builder/apache-tomcat-8.5.99/webapps/docs]
04-Mar-2024 12:39:07.345 INFO [localhost-startStop-3] org.apache.catalina.startup.HostConfig.deployDirectory Deployment of web application directory [/home/minds/maum/sds-builder/apache-tomcat-8.5.99/webapps/docs] has finished in [8] ms
04-Mar-2024 12:39:10.911 INFO [main] org.apache.catalina.core.StandardServer.await A valid shutdown command was received via the shutdown port. Stopping the Server instance.
04-Mar-2024 12:39:10.912 INFO [main] org.apache.coyote.AbstractProtocol.pause Pausing ProtocolHandler ["http-nio-18090"]
04-Mar-2024 12:39:10.914 INFO [main] org.apache.catalina.core.StandardService.stopInternal Stopping service [Catalina]
04-Mar-2024 12:39:10.921 WARNING [localhost-startStop-3] org.apache.catalina.loader.WebappClassLoaderBase.clearReferencesJdbc The web application [sds-builder] registered the JDBC driver [com.mysql.jdbc.Driver] but failed to unregister it when the web application was stopped. To prevent a memory leak, the JDBC Driver has been forcibly unregistered.
04-Mar-2024 12:39:10.922 WARNING [localhost-startStop-3] org.apache.catalina.loader.WebappClassLoaderBase.clearReferencesJdbc The web application [sds-builder] registered the JDBC driver [net.sf.log4jdbc.DriverSpy] but failed to unregister it when the web application was stopped. To prevent a memory leak, the JDBC Driver has been forcibly unregistered.
04-Mar-2024 12:39:10.922 WARNING [localhost-startStop-3] org.apache.catalina.loader.WebappClassLoaderBase.clearReferencesJdbc The web application [sds-builder] registered the JDBC driver [com.microsoft.sqlserver.jdbc.SQLServerDriver] but failed to unregister it when the web application was stopped. To prevent a memory leak, the JDBC Driver has been forcibly unregistered.
04-Mar-2024 12:39:10.922 WARNING [localhost-startStop-3] org.apache.catalina.loader.WebappClassLoaderBase.clearReferencesThreads The web application [sds-builder] appears to have started a thread named [mysql-cj-abandoned-connection-cleanup] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 java.lang.Object.wait(Native Method)
 java.lang.ref.ReferenceQueue.remove(ReferenceQueue.java:144)
 com.mysql.jdbc.AbandonedConnectionCleanupThread.run(AbandonedConnectionCleanupThread.java:80)
 java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
 java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
 java.lang.Thread.run(Thread.java:750)
04-Mar-2024 12:39:10.933 INFO [main] org.apache.coyote.AbstractProtocol.stop Stopping ProtocolHandler ["http-nio-18090"]
04-Mar-2024 12:39:10.941 INFO [main] org.apache.coyote.AbstractProtocol.destroy Destroying ProtocolHandler ["http-nio-18090"]
04-Mar-2024 12:39:14.717 INFO [main] org.apache.catalina.startup.VersionLoggerListener.log Server version name:   Apache Tomcat/8.5.99
04-Mar-2024 12:39:14.718 INFO [main] org.apache.catalina.startup.VersionLoggerListener.log Server built:          Feb 14 2024 22:52:13 UTC
04-Mar-2024 12:39:14.718 INFO [main] org.apache.catalina.startup.VersionLoggerListener.log Server version number: 8.5.99.0
04-Mar-2024 12:39:14.718 INFO [main] org.apache.catalina.startup.VersionLoggerListener.log OS Name:               Linux
04-Mar-2024 12:39:14.718 INFO [main] org.apache.catalina.startup.VersionLoggerListener.log OS Version:            5.15.0-97-generic
04-Mar-2024 12:39:14.718 INFO [main] org.apache.catalina.startup.VersionLoggerListener.log Architecture:          amd64
04-Mar-2024 12:39:14.718 INFO [main] org.apache.catalina.startup.VersionLoggerListener.log Java Home:             /usr/lib/jvm/java-8-openjdk-amd64/jre
04-Mar-2024 12:39:14.718 INFO [main] org.apache.catalina.startup.VersionLoggerListener.log JVM Version:           1.8.0_392-8u392-ga-1~22.04-b08
04-Mar-2024 12:39:14.719 INFO [main] org.apache.catalina.startup.VersionLoggerListener.log JVM Vendor:            Private Build
04-Mar-2024 12:39:14.719 INFO [main] org.apache.catalina.startup.VersionLoggerListener.log CATALINA_BASE:         /home/minds/maum/sds-builder/apache-tomcat-8.5.99
04-Mar-2024 12:39:14.719 INFO [main] org.apache.catalina.startup.VersionLoggerListener.log CATALINA_HOME:         /home/minds/maum/sds-builder/apache-tomcat-8.5.99
04-Mar-2024 12:39:14.719 INFO [main] org.apache.catalina.startup.VersionLoggerListener.log Command line argument: -Djava.util.logging.config.file=/home/minds/maum/sds-builder/apache-tomcat-8.5.99/conf/logging.properties
04-Mar-2024 12:39:14.719 INFO [main] org.apache.catalina.startup.VersionLoggerListener.log Command line argument: -Djava.util.logging.manager=org.apache.juli.ClassLoaderLogManager
04-Mar-2024 12:39:14.719 INFO [main] org.apache.catalina.startup.VersionLoggerListener.log Command line argument: -Djdk.tls.ephemeralDHKeySize=2048
04-Mar-2024 12:39:14.719 INFO [main] org.apache.catalina.startup.VersionLoggerListener.log Command line argument: -Djava.protocol.handler.pkgs=org.apache.catalina.webresources
04-Mar-2024 12:39:14.719 INFO [main] org.apache.catalina.startup.VersionLoggerListener.log Command line argument: -Dorg.apache.catalina.security.SecurityListener.UMASK=0027
04-Mar-2024 12:39:14.719 INFO [main] org.apache.catalina.startup.VersionLoggerListener.log Command line argument: -Dignore.endorsed.dirs=
04-Mar-2024 12:39:14.719 INFO [main] org.apache.catalina.startup.VersionLoggerListener.log Command line argument: -Dcatalina.base=/home/minds/maum/sds-builder/apache-tomcat-8.5.99
04-Mar-2024 12:39:14.720 INFO [main] org.apache.catalina.startup.VersionLoggerListener.log Command line argument: -Dcatalina.home=/home/minds/maum/sds-builder/apache-tomcat-8.5.99
04-Mar-2024 12:39:14.720 INFO [main] org.apache.catalina.startup.VersionLoggerListener.log Command line argument: -Djava.io.tmpdir=/home/minds/maum/sds-builder/apache-tomcat-8.5.99/temp
04-Mar-2024 12:39:14.720 INFO [main] org.apache.catalina.core.AprLifecycleListener.lifecycleEvent The Apache Tomcat Native library which allows using OpenSSL was not found on the java.library.path: [/usr/java/packages/lib/amd64:/usr/lib/x86_64-linux-gnu/jni:/lib/x86_64-linux-gnu:/usr/lib/x86_64-linux-gnu:/usr/lib/jni:/lib:/usr/lib]
04-Mar-2024 12:39:14.779 INFO [main] org.apache.coyote.AbstractProtocol.init Initializing ProtocolHandler ["http-nio-18090"]
04-Mar-2024 12:39:14.797 INFO [main] org.apache.catalina.startup.Catalina.load Initialization processed in 448 ms
04-Mar-2024 12:39:14.846 INFO [main] org.apache.catalina.core.StandardService.startInternal Starting service [Catalina]
04-Mar-2024 12:39:14.846 INFO [main] org.apache.catalina.core.StandardEngine.startInternal Starting Servlet engine: [Apache Tomcat/8.5.99]
04-Mar-2024 12:39:14.873 INFO [localhost-startStop-1] org.apache.catalina.startup.HostConfig.deployWAR Deploying web application archive [/home/minds/maum/sds-builder/apache-tomcat-8.5.99/webapps/sds-builder.war]
04-Mar-2024 12:39:17.369 INFO [localhost-startStop-1] org.apache.jasper.servlet.TldScanner.scanJars At least one JAR was scanned for TLDs yet contained no TLDs. Enable debug logging for this logger for a complete list of JARs that were scanned but no TLDs were found in them. Skipping unneeded JARs during scanning can improve startup time and JSP compilation time.
DEBUG: org.mybatis.spring.SqlSessionFactoryBean - Property 'configuration' or 'configLocation' not specified, using default MyBatis Configuration
DEBUG: org.mybatis.spring.SqlSessionFactoryBean - Parsed mapper file: 'file [/home/minds/maum/sds-builder/apache-tomcat-8.5.99/webapps/sds-builder/WEB-INF/classes/mapper/maria/Chatbot/Builder_SQL.xml]'
DEBUG: org.mybatis.spring.SqlSessionFactoryBean - Parsed mapper file: 'file [/home/minds/maum/sds-builder/apache-tomcat-8.5.99/webapps/sds-builder/WEB-INF/classes/mapper/maria/Chatbot/MaumSDS_SQL.xml]'
DEBUG: org.mybatis.spring.SqlSessionFactoryBean - Property 'configuration' or 'configLocation' not specified, using default MyBatis Configuration
DEBUG: org.mybatis.spring.SqlSessionFactoryBean - Parsed mapper file: 'file [/home/minds/maum/sds-builder/apache-tomcat-8.5.99/webapps/sds-builder/WEB-INF/classes/mapper/maria/HAPPYCALL4/NQA_SQL.xml]'
DEBUG: org.mybatis.spring.SqlSessionFactoryBean - Parsed mapper file: 'file [/home/minds/maum/sds-builder/apache-tomcat-8.5.99/webapps/sds-builder/WEB-INF/classes/mapper/maria/HAPPYCALL4/SimpleBot_SQL.xml]'
SimpleBot Execution Environment : prod
SimpleBot BertIntent itfIP : 0
SimpleBot BertIntent nerIP : 0
SimpleBot BL IP : 125.132.250.244
SimpleBot CM IP : 121.133.247.250
SimpleBot M2U rest address : http://localhost:9990
SimpleBot Style Resources Path : /home/minds/maum/sds-builder/imgUpload
Default Resources Make : chatbot.css
Default Resources Make : chatbot_custom.css
Default Resources Make : chatbot_floating.css
Default Resources Make : IconImg
Default Resources Make : logoImg
Default Resources Make : default
Default Resources Make : mindslab
Default Resources Make : redtie
Default Resource constructed.
DEBUG: first.common.logger.LoggerAspect - ServiceImpl  	:  first.builder.service.BuilderService.getNqaStatusChatbotList()
DEBUG: first.common.logger.LoggerAspect - DAO  		:  first.builder.dao.BuilderDAO.getNqaStatusChatbotList()
DEBUG: first.builder.dao.AbstractDAO - 	 QueryId  	:  builder.getNqaStatusChatbotList
DEBUG: org.mybatis.spring.SqlSessionUtils - Creating a new SqlSession
DEBUG: org.mybatis.spring.SqlSessionUtils - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@27bd332]
DEBUG: org.mybatis.spring.transaction.SpringManagedTransaction - JDBC Connection [net.sf.log4jdbc.ConnectionSpy@5b1b34f1] will be managed by Spring
2024-03-04 12:39:19,487  INFO SQL(simplebot)        :  SELECT No as host, Name, 'preparation' as nqaUploadStatus
 from Account
		ORDER BY No
DEBUG: org.mybatis.spring.SqlSessionUtils - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@27bd332]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@27bd332]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@27bd332]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@27bd332]
04-Mar-2024 12:39:20.497 INFO [localhost-startStop-1] org.apache.catalina.startup.HostConfig.deployWAR Deployment of web application archive [/home/minds/maum/sds-builder/apache-tomcat-8.5.99/webapps/sds-builder.war] has finished in [5,624] ms
04-Mar-2024 12:39:20.498 INFO [localhost-startStop-1] org.apache.catalina.startup.HostConfig.deployDirectory Deploying web application directory [/home/minds/maum/sds-builder/apache-tomcat-8.5.99/webapps/examples]
04-Mar-2024 12:39:20.610 INFO [localhost-startStop-1] org.apache.catalina.startup.HostConfig.deployDirectory Deployment of web application directory [/home/minds/maum/sds-builder/apache-tomcat-8.5.99/webapps/examples] has finished in [112] ms
04-Mar-2024 12:39:20.610 INFO [localhost-startStop-1] org.apache.catalina.startup.HostConfig.deployDirectory Deploying web application directory [/home/minds/maum/sds-builder/apache-tomcat-8.5.99/webapps/manager]
04-Mar-2024 12:39:20.628 INFO [localhost-startStop-1] org.apache.catalina.startup.HostConfig.deployDirectory Deployment of web application directory [/home/minds/maum/sds-builder/apache-tomcat-8.5.99/webapps/manager] has finished in [18] ms
04-Mar-2024 12:39:20.628 INFO [localhost-startStop-1] org.apache.catalina.startup.HostConfig.deployDirectory Deploying web application directory [/home/minds/maum/sds-builder/apache-tomcat-8.5.99/webapps/host-manager]
04-Mar-2024 12:39:20.640 INFO [localhost-startStop-1] org.apache.catalina.startup.HostConfig.deployDirectory Deployment of web application directory [/home/minds/maum/sds-builder/apache-tomcat-8.5.99/webapps/host-manager] has finished in [12] ms
04-Mar-2024 12:39:20.641 INFO [localhost-startStop-1] org.apache.catalina.startup.HostConfig.deployDirectory Deploying web application directory [/home/minds/maum/sds-builder/apache-tomcat-8.5.99/webapps/docs]
04-Mar-2024 12:39:20.651 INFO [localhost-startStop-1] org.apache.catalina.startup.HostConfig.deployDirectory Deployment of web application directory [/home/minds/maum/sds-builder/apache-tomcat-8.5.99/webapps/docs] has finished in [11] ms
04-Mar-2024 12:39:20.655 INFO [main] org.apache.coyote.AbstractProtocol.start Starting ProtocolHandler ["http-nio-18090"]
04-Mar-2024 12:39:20.665 INFO [main] org.apache.catalina.startup.Catalina.start Server startup in 5868 ms
DEBUG: first.common.logger.LoggerAspect - Controller  	:  first.builder.controller.BuilderController.chatbotBuilderCommon()
DEBUG: first.common.logger.LoggerAspect - Controller  	:  first.builder.controller.BuilderController.getChatList()
DEBUG: first.common.logger.LoggerAspect - ServiceImpl  	:  first.builder.service.BuilderService.getChatbotList()
DEBUG: first.common.logger.LoggerAspect - DAO  		:  first.builder.dao.BuilderDAO.getChatbotList()
DEBUG: first.builder.dao.AbstractDAO - 	 QueryId  	:  builder.getChatbotList
DEBUG: org.mybatis.spring.SqlSessionUtils - Creating a new SqlSession
DEBUG: org.mybatis.spring.SqlSessionUtils - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@49ec2836]
DEBUG: org.mybatis.spring.transaction.SpringManagedTransaction - JDBC Connection [net.sf.log4jdbc.ConnectionSpy@767716e6] will be managed by Spring
2024-03-04 12:39:27,871  INFO SQL(simplebot)        :  SELECT  /* No, Name, Host, Language */
			*
		from Account WHERE 1=1
		AND No IN
		 
				 (  
					'1636'
				 ) 
			 

		 
		ORDER BY No
DEBUG: org.mybatis.spring.SqlSessionUtils - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@49ec2836]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@49ec2836]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@49ec2836]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@49ec2836]
DEBUG: first.common.logger.LoggerAspect - Controller  	:  first.builder.controller.BuilderController.builderBottomAnswer()
DEBUG: first.common.logger.LoggerAspect - Controller  	:  first.builder.controller.BuilderController.builderContentsAnswer()
DEBUG: first.common.logger.LoggerAspect - Controller  	:  first.builder.controller.BuilderController.getTask()
DEBUG: first.common.logger.LoggerAspect - ServiceImpl  	:  first.builder.service.BuilderService.getTaskCount()
DEBUG: first.common.logger.LoggerAspect - DAO  		:  first.builder.dao.BuilderDAO.getTaskCount()
DEBUG: first.builder.dao.AbstractDAO - 	 QueryId  	:  builder.getTaskCount
DEBUG: org.mybatis.spring.SqlSessionUtils - Creating a new SqlSession
DEBUG: org.mybatis.spring.SqlSessionUtils - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@4ed1da2a]
DEBUG: org.mybatis.spring.transaction.SpringManagedTransaction - JDBC Connection [net.sf.log4jdbc.ConnectionSpy@43cee371] will be managed by Spring
2024-03-04 12:39:28,098  INFO SQL(simplebot)        :  SELECT COUNT(*) FROM Intent WHERE Account=1636
 and Language=1
DEBUG: org.mybatis.spring.SqlSessionUtils - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@4ed1da2a]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@4ed1da2a]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@4ed1da2a]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@4ed1da2a]
DEBUG: first.common.logger.LoggerAspect - ServiceImpl  	:  first.builder.service.BuilderService.getAnswerList()
DEBUG: first.common.logger.LoggerAspect - DAO  		:  first.builder.dao.BuilderDAO.getAnswerList()
DEBUG: first.builder.dao.AbstractDAO - 	 QueryId  	:  builder.getAnswerList
DEBUG: org.mybatis.spring.SqlSessionUtils - Creating a new SqlSession
DEBUG: org.mybatis.spring.SqlSessionUtils - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@8f2c038]
DEBUG: org.mybatis.spring.transaction.SpringManagedTransaction - JDBC Connection [net.sf.log4jdbc.ConnectionSpy@779ad1f1] will be managed by Spring
2024-03-04 12:39:28,106  INFO SQL(simplebot)        :  SELECT I.No, I.Main, I.Name, A.answer, I.Account
		FROM Intent I LEFT OUTER JOIN Answer A
		ON I.Answer = A.No
		WHERE I.Account=1636
 and I.Language=1
		ORDER BY I.No
		OFFSET 0 ROWS
		FETCH NEXT 15 ROWS ONLY
DEBUG: org.mybatis.spring.SqlSessionUtils - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@8f2c038]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@8f2c038]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@8f2c038]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@8f2c038]
DEBUG: first.common.logger.LoggerAspect - ServiceImpl  	:  first.builder.service.BuilderService.getAllIntents()
DEBUG: first.common.logger.LoggerAspect - DAO  		:  first.builder.dao.BuilderDAO.getAllIntents()
DEBUG: first.builder.dao.AbstractDAO - 	 QueryId  	:  builder.getAllIntents
DEBUG: org.mybatis.spring.SqlSessionUtils - Creating a new SqlSession
DEBUG: org.mybatis.spring.SqlSessionUtils - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@783761e5]
DEBUG: org.mybatis.spring.transaction.SpringManagedTransaction - JDBC Connection [net.sf.log4jdbc.ConnectionSpy@347384f] will be managed by Spring
2024-03-04 12:39:28,119  INFO SQL(simplebot)        :  SELECT I.No, I.Main, I.Name,I.Next, I.URL, I.Language
		FROM Intent I
		WHERE I.Account=1636
		ORDER BY I.No
DEBUG: org.mybatis.spring.SqlSessionUtils - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@783761e5]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@783761e5]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@783761e5]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@783761e5]
DEBUG: first.common.logger.LoggerAspect - ServiceImpl  	:  first.builder.service.BuilderService.getAllBertIntents()
DEBUG: first.common.logger.LoggerAspect - DAO  		:  first.builder.dao.BuilderDAO.getAllBertIntents()
DEBUG: first.builder.dao.AbstractDAO - 	 QueryId  	:  builder.getAllBertIntents
DEBUG: org.mybatis.spring.SqlSessionUtils - Creating a new SqlSession
DEBUG: org.mybatis.spring.SqlSessionUtils - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@7ba44147]
DEBUG: org.mybatis.spring.transaction.SpringManagedTransaction - JDBC Connection [net.sf.log4jdbc.ConnectionSpy@71d530eb] will be managed by Spring
2024-03-04 12:39:28,123  INFO SQL(simplebot)        :  SELECT B.No, B.Name, B.Language
		FROM BertIntent B LEFT OUTER JOIN BackendInfo BI
		ON B.BertItfId = BI.id
		WHERE BI.host=1636
		ORDER BY B.No
DEBUG: org.mybatis.spring.SqlSessionUtils - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@7ba44147]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@7ba44147]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@7ba44147]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@7ba44147]
DEBUG: first.common.logger.LoggerAspect - Controller  	:  first.builder.controller.BuilderController.getTask()
DEBUG: first.common.logger.LoggerAspect - ServiceImpl  	:  first.builder.service.BuilderService.getTaskCount()
DEBUG: first.common.logger.LoggerAspect - DAO  		:  first.builder.dao.BuilderDAO.getTaskCount()
DEBUG: first.builder.dao.AbstractDAO - 	 QueryId  	:  builder.getTaskCount
DEBUG: org.mybatis.spring.SqlSessionUtils - Creating a new SqlSession
DEBUG: org.mybatis.spring.SqlSessionUtils - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@60bac5dc]
DEBUG: org.mybatis.spring.transaction.SpringManagedTransaction - JDBC Connection [net.sf.log4jdbc.ConnectionSpy@691092b4] will be managed by Spring
2024-03-04 12:39:28,133  INFO SQL(simplebot)        :  SELECT COUNT(*) FROM Intent WHERE Account=1636
 and Language=1
DEBUG: org.mybatis.spring.SqlSessionUtils - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@60bac5dc]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@60bac5dc]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@60bac5dc]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@60bac5dc]
DEBUG: first.common.logger.LoggerAspect - ServiceImpl  	:  first.builder.service.BuilderService.getAnswerList()
DEBUG: first.common.logger.LoggerAspect - DAO  		:  first.builder.dao.BuilderDAO.getAnswerList()
DEBUG: first.builder.dao.AbstractDAO - 	 QueryId  	:  builder.getAnswerList
DEBUG: org.mybatis.spring.SqlSessionUtils - Creating a new SqlSession
DEBUG: org.mybatis.spring.SqlSessionUtils - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@2912f481]
DEBUG: org.mybatis.spring.transaction.SpringManagedTransaction - JDBC Connection [net.sf.log4jdbc.ConnectionSpy@56d201b4] will be managed by Spring
2024-03-04 12:39:28,138  INFO SQL(simplebot)        :  SELECT I.No, I.Main, I.Name, A.answer, I.Account
		FROM Intent I LEFT OUTER JOIN Answer A
		ON I.Answer = A.No
		WHERE I.Account=1636
 and I.Language=1
		ORDER BY I.No
		OFFSET 0 ROWS
		FETCH NEXT 15 ROWS ONLY
DEBUG: org.mybatis.spring.SqlSessionUtils - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@2912f481]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@2912f481]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@2912f481]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@2912f481]
DEBUG: first.common.logger.LoggerAspect - ServiceImpl  	:  first.builder.service.BuilderService.getAllIntents()
DEBUG: first.common.logger.LoggerAspect - DAO  		:  first.builder.dao.BuilderDAO.getAllIntents()
DEBUG: first.builder.dao.AbstractDAO - 	 QueryId  	:  builder.getAllIntents
DEBUG: org.mybatis.spring.SqlSessionUtils - Creating a new SqlSession
DEBUG: org.mybatis.spring.SqlSessionUtils - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@587f438]
DEBUG: org.mybatis.spring.transaction.SpringManagedTransaction - JDBC Connection [net.sf.log4jdbc.ConnectionSpy@276f9a43] will be managed by Spring
2024-03-04 12:39:28,144  INFO SQL(simplebot)        :  SELECT I.No, I.Main, I.Name,I.Next, I.URL, I.Language
		FROM Intent I
		WHERE I.Account=1636
		ORDER BY I.No
DEBUG: org.mybatis.spring.SqlSessionUtils - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@587f438]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@587f438]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@587f438]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@587f438]
DEBUG: first.common.logger.LoggerAspect - ServiceImpl  	:  first.builder.service.BuilderService.getAllBertIntents()
DEBUG: first.common.logger.LoggerAspect - DAO  		:  first.builder.dao.BuilderDAO.getAllBertIntents()
DEBUG: first.builder.dao.AbstractDAO - 	 QueryId  	:  builder.getAllBertIntents
DEBUG: org.mybatis.spring.SqlSessionUtils - Creating a new SqlSession
DEBUG: org.mybatis.spring.SqlSessionUtils - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@46eb663e]
DEBUG: org.mybatis.spring.transaction.SpringManagedTransaction - JDBC Connection [net.sf.log4jdbc.ConnectionSpy@4c5db85] will be managed by Spring
2024-03-04 12:39:28,150  INFO SQL(simplebot)        :  SELECT B.No, B.Name, B.Language
		FROM BertIntent B LEFT OUTER JOIN BackendInfo BI
		ON B.BertItfId = BI.id
		WHERE BI.host=1636
		ORDER BY B.No
DEBUG: org.mybatis.spring.SqlSessionUtils - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@46eb663e]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@46eb663e]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@46eb663e]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@46eb663e]
DEBUG: first.common.logger.LoggerAspect - Controller  	:  first.builder.controller.BuilderController.excelSampleDown()
DEBUG: first.common.logger.LoggerAspect - ServiceImpl  	:  first.builder.service.BuilderService.getChatLang()
DEBUG: first.common.logger.LoggerAspect - DAO  		:  first.builder.dao.BuilderDAO.getChatLang()
DEBUG: first.builder.dao.AbstractDAO - 	 QueryId  	:  builder.getChatLang
DEBUG: org.mybatis.spring.SqlSessionUtils - Creating a new SqlSession
DEBUG: org.mybatis.spring.SqlSessionUtils - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@aa97545]
DEBUG: org.mybatis.spring.transaction.SpringManagedTransaction - JDBC Connection [net.sf.log4jdbc.ConnectionSpy@6acc64ce] will be managed by Spring
2024-03-04 12:39:30,523  INFO SQL(simplebot)        :  SELECT Language FROM Account WHERE No = '1636'
DEBUG: org.mybatis.spring.SqlSessionUtils - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@aa97545]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@aa97545]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@aa97545]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@aa97545]
04-Mar-2024 12:39:30.610 WARNING [http-nio-18090-exec-2] org.apache.coyote.http11.Http11Processor.prepareResponse The HTTP response header [Content-Disposition] with value [attachment;filename=[chatbot] TASK_ANSWER_샘플데이터.xlsx] has been removed from the response because it is invalid
	java.lang.IllegalArgumentException: The Unicode character [샘] at code point [49,368] cannot be encoded as it is outside the permitted range of 0 to 255
		at org.apache.tomcat.util.buf.MessageBytes.toBytesSimple(MessageBytes.java:310)
		at org.apache.tomcat.util.buf.MessageBytes.toBytes(MessageBytes.java:283)
		at org.apache.coyote.http11.Http11OutputBuffer.write(Http11OutputBuffer.java:438)
		at org.apache.coyote.http11.Http11OutputBuffer.sendHeader(Http11OutputBuffer.java:417)
		at org.apache.coyote.http11.Http11Processor.prepareResponse(Http11Processor.java:1269)
		at org.apache.coyote.AbstractProcessor.action(AbstractProcessor.java:380)
		at org.apache.coyote.Response.action(Response.java:206)
		at org.apache.coyote.Response.sendHeaders(Response.java:415)
		at org.apache.catalina.connector.OutputBuffer.doFlush(OutputBuffer.java:309)
		at org.apache.catalina.connector.OutputBuffer.flush(OutputBuffer.java:289)
		at org.apache.catalina.connector.CoyoteOutputStream.flush(CoyoteOutputStream.java:120)
		at org.apache.commons.compress.archivers.zip.ZipArchiveOutputStream.flush(ZipArchiveOutputStream.java:979)
		at java.io.FilterOutputStream.flush(FilterOutputStream.java:140)
		at com.sun.org.apache.xml.internal.serializer.WriterToUTF8Buffered.flush(WriterToUTF8Buffered.java:472)
		at com.sun.org.apache.xml.internal.serializer.ToStream.flushWriter(ToStream.java:290)
		at com.sun.org.apache.xml.internal.serializer.ToXMLStream.endDocument(ToXMLStream.java:213)
		at com.sun.org.apache.xml.internal.serializer.ToUnknownStream.endDocument(ToUnknownStream.java:829)
		at com.sun.org.apache.xalan.internal.xsltc.trax.DOM2TO.parse(DOM2TO.java:137)
		at com.sun.org.apache.xalan.internal.xsltc.trax.DOM2TO.parse(DOM2TO.java:96)
		at com.sun.org.apache.xalan.internal.xsltc.trax.TransformerImpl.transformIdentity(TransformerImpl.java:686)
		at com.sun.org.apache.xalan.internal.xsltc.trax.TransformerImpl.transform(TransformerImpl.java:730)
		at com.sun.org.apache.xalan.internal.xsltc.trax.TransformerImpl.transform(TransformerImpl.java:345)
		at org.apache.poi.openxml4j.opc.StreamHelper.saveXmlInStream(StreamHelper.java:84)
		at org.apache.poi.openxml4j.opc.internal.ZipContentTypeManager.saveImpl(ZipContentTypeManager.java:69)
		at org.apache.poi.openxml4j.opc.internal.ContentTypeManager.save(ContentTypeManager.java:449)
		at org.apache.poi.openxml4j.opc.ZipPackage.saveImpl(ZipPackage.java:518)
		at org.apache.poi.openxml4j.opc.OPCPackage.save(OPCPackage.java:1489)
		at org.apache.poi.ooxml.POIXMLDocument.write(POIXMLDocument.java:242)
		at first.builder.controller.BuilderController.excelSampleDown(BuilderController.java:1362)
		at first.builder.controller.BuilderController$$FastClassBySpringCGLIB$$c1e54596.invoke(<generated>)
		at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
		at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:736)
		at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:157)
		at org.springframework.aop.aspectj.MethodInvocationProceedingJoinPoint.proceed(MethodInvocationProceedingJoinPoint.java:84)
		at first.common.logger.LoggerAspect.logPrint(LoggerAspect.java:29)
		at sun.reflect.GeneratedMethodAccessor69.invoke(Unknown Source)
		at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
		at java.lang.reflect.Method.invoke(Method.java:498)
		at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:627)
		at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:616)
		at org.springframework.aop.aspectj.AspectJAroundAdvice.invoke(AspectJAroundAdvice.java:70)
		at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
		at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:92)
		at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
		at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:671)
		at first.builder.controller.BuilderController$$EnhancerBySpringCGLIB$$16f07cbd.excelSampleDown(<generated>)
		at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
		at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
		at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
		at java.lang.reflect.Method.invoke(Method.java:498)
		at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:205)
		at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:133)
		at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:97)
		at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:849)
		at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:760)
		at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:85)
		at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:967)
		at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:901)
		at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:970)
		at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:861)
		at javax.servlet.http.HttpServlet.service(HttpServlet.java:489)
		at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:846)
		at javax.servlet.http.HttpServlet.service(HttpServlet.java:583)
		at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:212)
		at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:156)
		at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
		at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:181)
		at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:156)
		at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:197)
		at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
		at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:181)
		at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:156)
		at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:168)
		at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
		at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:483)
		at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:130)
		at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
		at org.apache.catalina.valves.AbstractAccessLogValve.invoke(AbstractAccessLogValve.java:679)
		at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
		at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:346)
		at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:617)
		at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
		at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:934)
		at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1698)
		at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
		at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
		at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
		at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
		at java.lang.Thread.run(Thread.java:750)
DEBUG: first.common.logger.LoggerAspect - Controller  	:  first.builder.controller.BuilderController.excelSampleDown()
DEBUG: first.common.logger.LoggerAspect - ServiceImpl  	:  first.builder.service.BuilderService.getChatLang()
DEBUG: first.common.logger.LoggerAspect - DAO  		:  first.builder.dao.BuilderDAO.getChatLang()
DEBUG: first.builder.dao.AbstractDAO - 	 QueryId  	:  builder.getChatLang
DEBUG: org.mybatis.spring.SqlSessionUtils - Creating a new SqlSession
DEBUG: org.mybatis.spring.SqlSessionUtils - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@2d37d7ef]
DEBUG: org.mybatis.spring.transaction.SpringManagedTransaction - JDBC Connection [net.sf.log4jdbc.ConnectionSpy@1529cfd2] will be managed by Spring
2024-03-04 12:49:59,277  INFO SQL(simplebot)        :  SELECT Language FROM Account WHERE No = '1636'
DEBUG: org.mybatis.spring.SqlSessionUtils - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@2d37d7ef]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@2d37d7ef]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@2d37d7ef]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@2d37d7ef]
04-Mar-2024 12:49:59.305 WARNING [http-nio-18090-exec-3] org.apache.coyote.http11.Http11Processor.prepareResponse The HTTP response header [Content-Disposition] with value [attachment;filename=[chatbot] TASK_ANSWER_샘플데이터.xlsx] has been removed from the response because it is invalid
	java.lang.IllegalArgumentException: The Unicode character [샘] at code point [49,368] cannot be encoded as it is outside the permitted range of 0 to 255
		at org.apache.tomcat.util.buf.MessageBytes.toBytesSimple(MessageBytes.java:310)
		at org.apache.tomcat.util.buf.MessageBytes.toBytes(MessageBytes.java:283)
		at org.apache.coyote.http11.Http11OutputBuffer.write(Http11OutputBuffer.java:438)
		at org.apache.coyote.http11.Http11OutputBuffer.sendHeader(Http11OutputBuffer.java:417)
		at org.apache.coyote.http11.Http11Processor.prepareResponse(Http11Processor.java:1269)
		at org.apache.coyote.AbstractProcessor.action(AbstractProcessor.java:380)
		at org.apache.coyote.Response.action(Response.java:206)
		at org.apache.coyote.Response.sendHeaders(Response.java:415)
		at org.apache.catalina.connector.OutputBuffer.doFlush(OutputBuffer.java:309)
		at org.apache.catalina.connector.OutputBuffer.flush(OutputBuffer.java:289)
		at org.apache.catalina.connector.CoyoteOutputStream.flush(CoyoteOutputStream.java:120)
		at org.apache.commons.compress.archivers.zip.ZipArchiveOutputStream.flush(ZipArchiveOutputStream.java:979)
		at java.io.FilterOutputStream.flush(FilterOutputStream.java:140)
		at com.sun.org.apache.xml.internal.serializer.WriterToUTF8Buffered.flush(WriterToUTF8Buffered.java:472)
		at com.sun.org.apache.xml.internal.serializer.ToStream.flushWriter(ToStream.java:290)
		at com.sun.org.apache.xml.internal.serializer.ToXMLStream.endDocument(ToXMLStream.java:213)
		at com.sun.org.apache.xml.internal.serializer.ToUnknownStream.endDocument(ToUnknownStream.java:829)
		at com.sun.org.apache.xalan.internal.xsltc.trax.DOM2TO.parse(DOM2TO.java:137)
		at com.sun.org.apache.xalan.internal.xsltc.trax.DOM2TO.parse(DOM2TO.java:96)
		at com.sun.org.apache.xalan.internal.xsltc.trax.TransformerImpl.transformIdentity(TransformerImpl.java:686)
		at com.sun.org.apache.xalan.internal.xsltc.trax.TransformerImpl.transform(TransformerImpl.java:730)
		at com.sun.org.apache.xalan.internal.xsltc.trax.TransformerImpl.transform(TransformerImpl.java:345)
		at org.apache.poi.openxml4j.opc.StreamHelper.saveXmlInStream(StreamHelper.java:84)
		at org.apache.poi.openxml4j.opc.internal.ZipContentTypeManager.saveImpl(ZipContentTypeManager.java:69)
		at org.apache.poi.openxml4j.opc.internal.ContentTypeManager.save(ContentTypeManager.java:449)
		at org.apache.poi.openxml4j.opc.ZipPackage.saveImpl(ZipPackage.java:518)
		at org.apache.poi.openxml4j.opc.OPCPackage.save(OPCPackage.java:1489)
		at org.apache.poi.ooxml.POIXMLDocument.write(POIXMLDocument.java:242)
		at first.builder.controller.BuilderController.excelSampleDown(BuilderController.java:1362)
		at first.builder.controller.BuilderController$$FastClassBySpringCGLIB$$c1e54596.invoke(<generated>)
		at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
		at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:736)
		at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:157)
		at org.springframework.aop.aspectj.MethodInvocationProceedingJoinPoint.proceed(MethodInvocationProceedingJoinPoint.java:84)
		at first.common.logger.LoggerAspect.logPrint(LoggerAspect.java:29)
		at sun.reflect.GeneratedMethodAccessor69.invoke(Unknown Source)
		at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
		at java.lang.reflect.Method.invoke(Method.java:498)
		at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:627)
		at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:616)
		at org.springframework.aop.aspectj.AspectJAroundAdvice.invoke(AspectJAroundAdvice.java:70)
		at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
		at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:92)
		at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
		at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:671)
		at first.builder.controller.BuilderController$$EnhancerBySpringCGLIB$$16f07cbd.excelSampleDown(<generated>)
		at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
		at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
		at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
		at java.lang.reflect.Method.invoke(Method.java:498)
		at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:205)
		at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:133)
		at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:97)
		at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:849)
		at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:760)
		at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:85)
		at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:967)
		at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:901)
		at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:970)
		at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:861)
		at javax.servlet.http.HttpServlet.service(HttpServlet.java:489)
		at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:846)
		at javax.servlet.http.HttpServlet.service(HttpServlet.java:583)
		at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:212)
		at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:156)
		at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
		at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:181)
		at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:156)
		at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:197)
		at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
		at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:181)
		at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:156)
		at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:168)
		at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
		at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:483)
		at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:130)
		at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
		at org.apache.catalina.valves.AbstractAccessLogValve.invoke(AbstractAccessLogValve.java:679)
		at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
		at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:346)
		at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:617)
		at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
		at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:934)
		at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1698)
		at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
		at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
		at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
		at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
		at java.lang.Thread.run(Thread.java:750)
DEBUG: first.common.logger.LoggerAspect - Controller  	:  first.builder.controller.BuilderController.builderBottomIntention()
DEBUG: first.common.logger.LoggerAspect - Controller  	:  first.builder.controller.BuilderController.builderContentsIntention()
DEBUG: first.common.logger.LoggerAspect - Controller  	:  first.builder.controller.BuilderController.getIntention()
DEBUG: first.common.logger.LoggerAspect - ServiceImpl  	:  first.builder.service.BuilderService.getIntentCount()
DEBUG: first.common.logger.LoggerAspect - DAO  		:  first.builder.dao.BuilderDAO.getIntentCount()
DEBUG: first.builder.dao.AbstractDAO - 	 QueryId  	:  builder.getIntentCount
DEBUG: org.mybatis.spring.SqlSessionUtils - Creating a new SqlSession
DEBUG: org.mybatis.spring.SqlSessionUtils - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@3d540ba5]
DEBUG: org.mybatis.spring.transaction.SpringManagedTransaction - JDBC Connection [net.sf.log4jdbc.ConnectionSpy@392ad27a] will be managed by Spring
2024-03-04 12:51:28,528  INFO SQL(simplebot)        :  SELECT COUNT(DISTINCT a.name) FROM BertIntent a
		INNER JOIN BackendInfo b
		ON a.BertItfId = b.id
 		
 		
		LEFT OUTER JOIN RegexIntent d
		ON a.No = d.BertIntentNo
		LEFT OUTER JOIN RegexRule e
		ON d.No = e.RegexIntentNo
		WHERE b.host = 1636
 and a.Language= 1
DEBUG: org.mybatis.spring.SqlSessionUtils - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@3d540ba5]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@3d540ba5]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@3d540ba5]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@3d540ba5]
DEBUG: first.common.logger.LoggerAspect - ServiceImpl  	:  first.builder.service.BuilderService.getIntentStcList()
DEBUG: first.common.logger.LoggerAspect - DAO  		:  first.builder.dao.BuilderDAO.getIntentStcList()
DEBUG: first.builder.dao.AbstractDAO - 	 QueryId  	:  builder.getIntentStcList
DEBUG: org.mybatis.spring.SqlSessionUtils - Creating a new SqlSession
DEBUG: org.mybatis.spring.SqlSessionUtils - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@7f0db2fc]
DEBUG: org.mybatis.spring.transaction.SpringManagedTransaction - JDBC Connection [net.sf.log4jdbc.ConnectionSpy@5275344a] will be managed by Spring
2024-03-04 12:51:28,536  INFO SQL(simplebot)        :  SELECT f.No, f.Name, f.host, f.BertIntentNo,
		IFNULL(SUBSTRING((SELECT GROUP_CONCAT('@', Regex) FROM RegexIntent
		WHERE BertIntentNo = f.BertIntentNo), 2, 1000), SUBSTRING((SELECT GROUP_CONCAT('@', Regex) FROM RegexIntent
		WHERE BertIntentNo = f.BertIntentNo), 2, 1000)) AS regex
		FROM (
		SELECT a.No, a.Name, b.host, d.BertIntentNo
		FROM BertIntent a
		INNER JOIN BackendInfo b
		ON a.BertItfId = b.id
		LEFT OUTER JOIN RegexIntent d
		ON a.No = d.BertIntentNo
		LEFT OUTER JOIN RegexRule e
		ON d.No = e.RegexIntentNo
		WHERE b.host = 1636
 and a.Language= 1
		 
		GROUP BY a.No, a.Name, b.host, d.BertIntentNo
		ORDER BY a.No
		OFFSET 0 ROWS FETCH NEXT 15 ROWS ONLY
		) f
DEBUG: org.mybatis.spring.SqlSessionUtils - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@7f0db2fc]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@7f0db2fc]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@7f0db2fc]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@7f0db2fc]
DEBUG: first.common.logger.LoggerAspect - Controller  	:  first.builder.controller.NQAQASetController.getChannelInfo()
DEBUG: first.common.logger.LoggerAspect - Controller  	:  first.builder.controller.BuilderController.getChannelInfo()
DEBUG: first.common.logger.LoggerAspect - Controller  	:  first.builder.controller.BuilderController.getIntention()
DEBUG: first.common.logger.LoggerAspect - ServiceImpl  	:  first.builder.service.BuilderService.getIntentCount()
DEBUG: first.common.logger.LoggerAspect - DAO  		:  first.builder.dao.BuilderDAO.getIntentCount()
DEBUG: first.builder.dao.AbstractDAO - 	 QueryId  	:  builder.getIntentCount
DEBUG: org.mybatis.spring.SqlSessionUtils - Creating a new SqlSession
DEBUG: org.mybatis.spring.SqlSessionUtils - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@f29a38a]
DEBUG: org.mybatis.spring.transaction.SpringManagedTransaction - JDBC Connection [net.sf.log4jdbc.ConnectionSpy@e3ff15c] will be managed by Spring
2024-03-04 12:51:28,601  INFO SQL(simplebot)        :  SELECT COUNT(DISTINCT a.name) FROM BertIntent a
		INNER JOIN BackendInfo b
		ON a.BertItfId = b.id
 		
 		
		LEFT OUTER JOIN RegexIntent d
		ON a.No = d.BertIntentNo
		LEFT OUTER JOIN RegexRule e
		ON d.No = e.RegexIntentNo
		WHERE b.host = 1636
 and a.Language= 1
DEBUG: org.mybatis.spring.SqlSessionUtils - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@f29a38a]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@f29a38a]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@f29a38a]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@f29a38a]
DEBUG: first.common.logger.LoggerAspect - ServiceImpl  	:  first.builder.service.BuilderService.getIntentStcList()
DEBUG: first.common.logger.LoggerAspect - DAO  		:  first.builder.dao.BuilderDAO.getIntentStcList()
DEBUG: first.builder.dao.AbstractDAO - 	 QueryId  	:  builder.getIntentStcList
DEBUG: org.mybatis.spring.SqlSessionUtils - Creating a new SqlSession
DEBUG: org.mybatis.spring.SqlSessionUtils - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@e8a05d7]
DEBUG: org.mybatis.spring.transaction.SpringManagedTransaction - JDBC Connection [net.sf.log4jdbc.ConnectionSpy@51820c47] will be managed by Spring
2024-03-04 12:51:28,604  INFO SQL(simplebot)        :  SELECT f.No, f.Name, f.host, f.BertIntentNo,
		IFNULL(SUBSTRING((SELECT GROUP_CONCAT('@', Regex) FROM RegexIntent
		WHERE BertIntentNo = f.BertIntentNo), 2, 1000), SUBSTRING((SELECT GROUP_CONCAT('@', Regex) FROM RegexIntent
		WHERE BertIntentNo = f.BertIntentNo), 2, 1000)) AS regex
		FROM (
		SELECT a.No, a.Name, b.host, d.BertIntentNo
		FROM BertIntent a
		INNER JOIN BackendInfo b
		ON a.BertItfId = b.id
		LEFT OUTER JOIN RegexIntent d
		ON a.No = d.BertIntentNo
		LEFT OUTER JOIN RegexRule e
		ON d.No = e.RegexIntentNo
		WHERE b.host = 1636
 and a.Language= 1
		 
		GROUP BY a.No, a.Name, b.host, d.BertIntentNo
		ORDER BY a.No
		OFFSET 0 ROWS FETCH NEXT 15 ROWS ONLY
		) f
DEBUG: org.mybatis.spring.SqlSessionUtils - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@e8a05d7]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@e8a05d7]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@e8a05d7]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@e8a05d7]
DEBUG: first.common.logger.LoggerAspect - Controller  	:  first.builder.controller.NQAQASetController.getChannelInfo()
DEBUG: first.common.logger.LoggerAspect - Controller  	:  first.builder.controller.BuilderController.regexExcelDown()
DEBUG: first.common.logger.LoggerAspect - ServiceImpl  	:  first.builder.service.BuilderService.getRegexListAll()
DEBUG: first.common.logger.LoggerAspect - DAO  		:  first.builder.dao.BuilderDAO.getRegexListAll()
DEBUG: first.builder.dao.AbstractDAO - 	 QueryId  	:  builder.getRegexListAll
DEBUG: org.mybatis.spring.SqlSessionUtils - Creating a new SqlSession
DEBUG: org.mybatis.spring.SqlSessionUtils - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@35d944c4]
DEBUG: org.mybatis.spring.transaction.SpringManagedTransaction - JDBC Connection [net.sf.log4jdbc.ConnectionSpy@7361129c] will be managed by Spring
2024-03-04 12:51:32,429  INFO SQL(simplebot)        :  SELECT f.IntentName, f.IntentNo, f.Host, f.Language, f.Regex AS Regex, f.RegexIntentNo, SUBSTRING(
			(SELECT GROUP_CONCAT('@', a.RuleValue, '#', b.RuleType)
			FROM RegexRule a, RegexRuleType b
			WHERE a.RuleTypeNo = b.No AND a.RegexIntentNo = f.RegexIntentNo
			ORDER BY a.No), 2, 1000)
			AS RegexRuleAndType
		FROM (
			 SELECT c.Intent AS IntentName, c.BertIntentNo AS IntentNo, c.Host, c.Language, c.Regex, c.No As RegexIntentNo
			 FROM RegexIntent c
			  inner join 
 (select no
 from BertIntent
 where BertItfId = 
 (select id
 from BackendInfo
 where service = 'ITF'
 and host = '1636')) d
				on c.BertIntentNo = d.No
			 WHERE c.Language = '1'
		) f
		ORDER BY f.RegexIntentNo
DEBUG: org.mybatis.spring.SqlSessionUtils - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@35d944c4]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@35d944c4]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@35d944c4]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@35d944c4]
DEBUG: first.common.logger.LoggerAspect - ServiceImpl  	:  first.builder.service.BuilderService.getRegexListAll()
DEBUG: first.common.logger.LoggerAspect - DAO  		:  first.builder.dao.BuilderDAO.getRegexListAll()
DEBUG: first.builder.dao.AbstractDAO - 	 QueryId  	:  builder.getRegexListAll
DEBUG: org.mybatis.spring.SqlSessionUtils - Creating a new SqlSession
DEBUG: org.mybatis.spring.SqlSessionUtils - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@22c88ede]
DEBUG: org.mybatis.spring.transaction.SpringManagedTransaction - JDBC Connection [net.sf.log4jdbc.ConnectionSpy@104ac7ca] will be managed by Spring
2024-03-04 12:51:32,434  INFO SQL(simplebot)        :  SELECT f.IntentName, f.IntentNo, f.Host, f.Language, f.Regex AS Regex, f.RegexIntentNo, SUBSTRING(
			(SELECT GROUP_CONCAT('@', a.RuleValue, '#', b.RuleType)
			FROM RegexRule a, RegexRuleType b
			WHERE a.RuleTypeNo = b.No AND a.RegexIntentNo = f.RegexIntentNo
			ORDER BY a.No), 2, 1000)
			AS RegexRuleAndType
		FROM (
			 SELECT c.Intent AS IntentName, c.BertIntentNo AS IntentNo, c.Host, c.Language, c.Regex, c.No As RegexIntentNo
			 FROM RegexIntent c
			  inner join 
 (select no
 from BertIntent
 where BertItfId = 
 (select id
 from BackendInfo
 where service = 'ITF'
 and host = '1636')) d
				on c.BertIntentNo = d.No
			 WHERE c.Language = '2'
		) f
		ORDER BY f.RegexIntentNo
DEBUG: org.mybatis.spring.SqlSessionUtils - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@22c88ede]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@22c88ede]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@22c88ede]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@22c88ede]
DEBUG: first.common.logger.LoggerAspect - ServiceImpl  	:  first.builder.service.BuilderService.getRegexListAll()
DEBUG: first.common.logger.LoggerAspect - DAO  		:  first.builder.dao.BuilderDAO.getRegexListAll()
DEBUG: first.builder.dao.AbstractDAO - 	 QueryId  	:  builder.getRegexListAll
DEBUG: org.mybatis.spring.SqlSessionUtils - Creating a new SqlSession
DEBUG: org.mybatis.spring.SqlSessionUtils - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@74d7301d]
DEBUG: org.mybatis.spring.transaction.SpringManagedTransaction - JDBC Connection [net.sf.log4jdbc.ConnectionSpy@416f561b] will be managed by Spring
2024-03-04 12:51:32,438  INFO SQL(simplebot)        :  SELECT f.IntentName, f.IntentNo, f.Host, f.Language, f.Regex AS Regex, f.RegexIntentNo, SUBSTRING(
			(SELECT GROUP_CONCAT('@', a.RuleValue, '#', b.RuleType)
			FROM RegexRule a, RegexRuleType b
			WHERE a.RuleTypeNo = b.No AND a.RegexIntentNo = f.RegexIntentNo
			ORDER BY a.No), 2, 1000)
			AS RegexRuleAndType
		FROM (
			 SELECT c.Intent AS IntentName, c.BertIntentNo AS IntentNo, c.Host, c.Language, c.Regex, c.No As RegexIntentNo
			 FROM RegexIntent c
			  inner join 
 (select no
 from BertIntent
 where BertItfId = 
 (select id
 from BackendInfo
 where service = 'ITF'
 and host = '1636')) d
				on c.BertIntentNo = d.No
			 WHERE c.Language = '3'
		) f
		ORDER BY f.RegexIntentNo
DEBUG: org.mybatis.spring.SqlSessionUtils - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@74d7301d]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@74d7301d]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@74d7301d]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@74d7301d]
DEBUG: first.common.logger.LoggerAspect - ServiceImpl  	:  first.builder.service.BuilderService.getRegexListAll()
DEBUG: first.common.logger.LoggerAspect - DAO  		:  first.builder.dao.BuilderDAO.getRegexListAll()
DEBUG: first.builder.dao.AbstractDAO - 	 QueryId  	:  builder.getRegexListAll
DEBUG: org.mybatis.spring.SqlSessionUtils - Creating a new SqlSession
DEBUG: org.mybatis.spring.SqlSessionUtils - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@403bd026]
DEBUG: org.mybatis.spring.transaction.SpringManagedTransaction - JDBC Connection [net.sf.log4jdbc.ConnectionSpy@14f98431] will be managed by Spring
2024-03-04 12:51:32,442  INFO SQL(simplebot)        :  SELECT f.IntentName, f.IntentNo, f.Host, f.Language, f.Regex AS Regex, f.RegexIntentNo, SUBSTRING(
			(SELECT GROUP_CONCAT('@', a.RuleValue, '#', b.RuleType)
			FROM RegexRule a, RegexRuleType b
			WHERE a.RuleTypeNo = b.No AND a.RegexIntentNo = f.RegexIntentNo
			ORDER BY a.No), 2, 1000)
			AS RegexRuleAndType
		FROM (
			 SELECT c.Intent AS IntentName, c.BertIntentNo AS IntentNo, c.Host, c.Language, c.Regex, c.No As RegexIntentNo
			 FROM RegexIntent c
			  inner join 
 (select no
 from BertIntent
 where BertItfId = 
 (select id
 from BackendInfo
 where service = 'ITF'
 and host = '1636')) d
				on c.BertIntentNo = d.No
			 WHERE c.Language = '4'
		) f
		ORDER BY f.RegexIntentNo
DEBUG: org.mybatis.spring.SqlSessionUtils - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@403bd026]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@403bd026]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@403bd026]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@403bd026]
DEBUG: first.common.logger.LoggerAspect - ServiceImpl  	:  first.builder.service.BuilderService.getChatLang()
DEBUG: first.common.logger.LoggerAspect - DAO  		:  first.builder.dao.BuilderDAO.getChatLang()
DEBUG: first.builder.dao.AbstractDAO - 	 QueryId  	:  builder.getChatLang
DEBUG: org.mybatis.spring.SqlSessionUtils - Creating a new SqlSession
DEBUG: org.mybatis.spring.SqlSessionUtils - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@608327ec]
DEBUG: org.mybatis.spring.transaction.SpringManagedTransaction - JDBC Connection [net.sf.log4jdbc.ConnectionSpy@9783ba0] will be managed by Spring
2024-03-04 12:51:32,446  INFO SQL(simplebot)        :  SELECT Language FROM Account WHERE No = '1636'
DEBUG: org.mybatis.spring.SqlSessionUtils - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@608327ec]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@608327ec]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@608327ec]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@608327ec]
DEBUG: first.common.logger.LoggerAspect - Controller  	:  first.builder.controller.BuilderController.builderContentsAnswer()
DEBUG: first.common.logger.LoggerAspect - Controller  	:  first.builder.controller.BuilderController.builderBottomAnswer()
DEBUG: first.common.logger.LoggerAspect - Controller  	:  first.builder.controller.BuilderController.getTask()
DEBUG: first.common.logger.LoggerAspect - ServiceImpl  	:  first.builder.service.BuilderService.getTaskCount()
DEBUG: first.common.logger.LoggerAspect - DAO  		:  first.builder.dao.BuilderDAO.getTaskCount()
DEBUG: first.builder.dao.AbstractDAO - 	 QueryId  	:  builder.getTaskCount
DEBUG: org.mybatis.spring.SqlSessionUtils - Creating a new SqlSession
DEBUG: org.mybatis.spring.SqlSessionUtils - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@de27277]
DEBUG: org.mybatis.spring.transaction.SpringManagedTransaction - JDBC Connection [net.sf.log4jdbc.ConnectionSpy@33916c9d] will be managed by Spring
2024-03-04 12:51:51,590  INFO SQL(simplebot)        :  SELECT COUNT(*) FROM Intent WHERE Account=1636
 and Language=1
DEBUG: org.mybatis.spring.SqlSessionUtils - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@de27277]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@de27277]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@de27277]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@de27277]
DEBUG: first.common.logger.LoggerAspect - ServiceImpl  	:  first.builder.service.BuilderService.getAnswerList()
DEBUG: first.common.logger.LoggerAspect - DAO  		:  first.builder.dao.BuilderDAO.getAnswerList()
DEBUG: first.builder.dao.AbstractDAO - 	 QueryId  	:  builder.getAnswerList
DEBUG: org.mybatis.spring.SqlSessionUtils - Creating a new SqlSession
DEBUG: org.mybatis.spring.SqlSessionUtils - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@906d0a3]
DEBUG: org.mybatis.spring.transaction.SpringManagedTransaction - JDBC Connection [net.sf.log4jdbc.ConnectionSpy@3b870a30] will be managed by Spring
2024-03-04 12:51:51,594  INFO SQL(simplebot)        :  SELECT I.No, I.Main, I.Name, A.answer, I.Account
		FROM Intent I LEFT OUTER JOIN Answer A
		ON I.Answer = A.No
		WHERE I.Account=1636
 and I.Language=1
		ORDER BY I.No
		OFFSET 0 ROWS
		FETCH NEXT 15 ROWS ONLY
DEBUG: org.mybatis.spring.SqlSessionUtils - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@906d0a3]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@906d0a3]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@906d0a3]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@906d0a3]
DEBUG: first.common.logger.LoggerAspect - ServiceImpl  	:  first.builder.service.BuilderService.getAllIntents()
DEBUG: first.common.logger.LoggerAspect - DAO  		:  first.builder.dao.BuilderDAO.getAllIntents()
DEBUG: first.builder.dao.AbstractDAO - 	 QueryId  	:  builder.getAllIntents
DEBUG: org.mybatis.spring.SqlSessionUtils - Creating a new SqlSession
DEBUG: org.mybatis.spring.SqlSessionUtils - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@226fab7c]
DEBUG: org.mybatis.spring.transaction.SpringManagedTransaction - JDBC Connection [net.sf.log4jdbc.ConnectionSpy@950312d] will be managed by Spring
2024-03-04 12:51:51,598  INFO SQL(simplebot)        :  SELECT I.No, I.Main, I.Name,I.Next, I.URL, I.Language
		FROM Intent I
		WHERE I.Account=1636
		ORDER BY I.No
DEBUG: org.mybatis.spring.SqlSessionUtils - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@226fab7c]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@226fab7c]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@226fab7c]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@226fab7c]
DEBUG: first.common.logger.LoggerAspect - ServiceImpl  	:  first.builder.service.BuilderService.getAllBertIntents()
DEBUG: first.common.logger.LoggerAspect - DAO  		:  first.builder.dao.BuilderDAO.getAllBertIntents()
DEBUG: first.builder.dao.AbstractDAO - 	 QueryId  	:  builder.getAllBertIntents
DEBUG: org.mybatis.spring.SqlSessionUtils - Creating a new SqlSession
DEBUG: org.mybatis.spring.SqlSessionUtils - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@6b2ce0f5]
DEBUG: org.mybatis.spring.transaction.SpringManagedTransaction - JDBC Connection [net.sf.log4jdbc.ConnectionSpy@10d0fdc3] will be managed by Spring
2024-03-04 12:51:51,601  INFO SQL(simplebot)        :  SELECT B.No, B.Name, B.Language
		FROM BertIntent B LEFT OUTER JOIN BackendInfo BI
		ON B.BertItfId = BI.id
		WHERE BI.host=1636
		ORDER BY B.No
DEBUG: org.mybatis.spring.SqlSessionUtils - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@6b2ce0f5]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@6b2ce0f5]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@6b2ce0f5]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@6b2ce0f5]
DEBUG: first.common.logger.LoggerAspect - Controller  	:  first.builder.controller.BuilderController.getTask()
DEBUG: first.common.logger.LoggerAspect - ServiceImpl  	:  first.builder.service.BuilderService.getTaskCount()
DEBUG: first.common.logger.LoggerAspect - DAO  		:  first.builder.dao.BuilderDAO.getTaskCount()
DEBUG: first.builder.dao.AbstractDAO - 	 QueryId  	:  builder.getTaskCount
DEBUG: org.mybatis.spring.SqlSessionUtils - Creating a new SqlSession
DEBUG: org.mybatis.spring.SqlSessionUtils - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@43655bac]
DEBUG: org.mybatis.spring.transaction.SpringManagedTransaction - JDBC Connection [net.sf.log4jdbc.ConnectionSpy@256df30a] will be managed by Spring
2024-03-04 12:51:51,648  INFO SQL(simplebot)        :  SELECT COUNT(*) FROM Intent WHERE Account=1636
 and Language=1
DEBUG: org.mybatis.spring.SqlSessionUtils - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@43655bac]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@43655bac]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@43655bac]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@43655bac]
DEBUG: first.common.logger.LoggerAspect - ServiceImpl  	:  first.builder.service.BuilderService.getAnswerList()
DEBUG: first.common.logger.LoggerAspect - DAO  		:  first.builder.dao.BuilderDAO.getAnswerList()
DEBUG: first.builder.dao.AbstractDAO - 	 QueryId  	:  builder.getAnswerList
DEBUG: org.mybatis.spring.SqlSessionUtils - Creating a new SqlSession
DEBUG: org.mybatis.spring.SqlSessionUtils - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@17757a5d]
DEBUG: org.mybatis.spring.transaction.SpringManagedTransaction - JDBC Connection [net.sf.log4jdbc.ConnectionSpy@6d37cd7f] will be managed by Spring
2024-03-04 12:51:51,653  INFO SQL(simplebot)        :  SELECT I.No, I.Main, I.Name, A.answer, I.Account
		FROM Intent I LEFT OUTER JOIN Answer A
		ON I.Answer = A.No
		WHERE I.Account=1636
 and I.Language=1
		ORDER BY I.No
		OFFSET 0 ROWS
		FETCH NEXT 15 ROWS ONLY
DEBUG: org.mybatis.spring.SqlSessionUtils - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@17757a5d]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@17757a5d]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@17757a5d]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@17757a5d]
DEBUG: first.common.logger.LoggerAspect - ServiceImpl  	:  first.builder.service.BuilderService.getAllIntents()
DEBUG: first.common.logger.LoggerAspect - DAO  		:  first.builder.dao.BuilderDAO.getAllIntents()
DEBUG: first.builder.dao.AbstractDAO - 	 QueryId  	:  builder.getAllIntents
DEBUG: org.mybatis.spring.SqlSessionUtils - Creating a new SqlSession
DEBUG: org.mybatis.spring.SqlSessionUtils - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@6acd6a85]
DEBUG: org.mybatis.spring.transaction.SpringManagedTransaction - JDBC Connection [net.sf.log4jdbc.ConnectionSpy@44436814] will be managed by Spring
2024-03-04 12:51:51,657  INFO SQL(simplebot)        :  SELECT I.No, I.Main, I.Name,I.Next, I.URL, I.Language
		FROM Intent I
		WHERE I.Account=1636
		ORDER BY I.No
DEBUG: org.mybatis.spring.SqlSessionUtils - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@6acd6a85]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@6acd6a85]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@6acd6a85]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@6acd6a85]
DEBUG: first.common.logger.LoggerAspect - ServiceImpl  	:  first.builder.service.BuilderService.getAllBertIntents()
DEBUG: first.common.logger.LoggerAspect - DAO  		:  first.builder.dao.BuilderDAO.getAllBertIntents()
DEBUG: first.builder.dao.AbstractDAO - 	 QueryId  	:  builder.getAllBertIntents
DEBUG: org.mybatis.spring.SqlSessionUtils - Creating a new SqlSession
DEBUG: org.mybatis.spring.SqlSessionUtils - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@6a3f95af]
DEBUG: org.mybatis.spring.transaction.SpringManagedTransaction - JDBC Connection [net.sf.log4jdbc.ConnectionSpy@798a9c7b] will be managed by Spring
2024-03-04 12:51:51,662  INFO SQL(simplebot)        :  SELECT B.No, B.Name, B.Language
		FROM BertIntent B LEFT OUTER JOIN BackendInfo BI
		ON B.BertItfId = BI.id
		WHERE BI.host=1636
		ORDER BY B.No
DEBUG: org.mybatis.spring.SqlSessionUtils - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@6a3f95af]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@6a3f95af]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@6a3f95af]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@6a3f95af]
DEBUG: first.common.logger.LoggerAspect - Controller  	:  first.builder.controller.BuilderController.chatExcelDown()
DEBUG: first.common.logger.LoggerAspect - ServiceImpl  	:  first.builder.service.BuilderService.getChatLang()
DEBUG: first.common.logger.LoggerAspect - DAO  		:  first.builder.dao.BuilderDAO.getChatLang()
DEBUG: first.builder.dao.AbstractDAO - 	 QueryId  	:  builder.getChatLang
DEBUG: org.mybatis.spring.SqlSessionUtils - Creating a new SqlSession
DEBUG: org.mybatis.spring.SqlSessionUtils - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@711de2c2]
DEBUG: org.mybatis.spring.transaction.SpringManagedTransaction - JDBC Connection [net.sf.log4jdbc.ConnectionSpy@354ce09e] will be managed by Spring
2024-03-04 12:51:52,966  INFO SQL(simplebot)        :  SELECT Language FROM Account WHERE No = '1636'
DEBUG: org.mybatis.spring.SqlSessionUtils - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@711de2c2]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@711de2c2]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@711de2c2]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@711de2c2]
DEBUG: first.common.logger.LoggerAspect - ServiceImpl  	:  first.builder.service.BuilderService.getChatInfo()
DEBUG: first.common.logger.LoggerAspect - DAO  		:  first.builder.dao.BuilderDAO.getChatInfo()
DEBUG: first.builder.dao.AbstractDAO - 	 QueryId  	:  builder.getChatInfo
DEBUG: org.mybatis.spring.SqlSessionUtils - Creating a new SqlSession
DEBUG: org.mybatis.spring.SqlSessionUtils - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@63ca8775]
DEBUG: org.mybatis.spring.transaction.SpringManagedTransaction - JDBC Connection [net.sf.log4jdbc.ConnectionSpy@6daa0ece] will be managed by Spring
2024-03-04 12:51:52,971  INFO SQL(simplebot)        :  SELECT
			   ROW_NUMBER() OVER (ORDER BY a.No) AS Row
			 , IFNULL(a.No,'') as No
			 , a.Main
			 , IFNULL(a.URL,'') as URL
			 , IFNULL(a.Next,'') as TmpNextIntent
			 , IFNULL(GROUP_CONCAT(IF(b.Language = 1, b.Name, NULL),''),'') as intentNmKr
			 , IFNULL(GROUP_CONCAT(IF(b.Language = 1, b.Description, NULL),''),'') as intentDescKr
			 , IFNULL(GROUP_CONCAT(IF(b.Language = 1, c.Answer, NULL),''),'') as answerKr
			 , IFNULL(GROUP_CONCAT(IF(b.Language = 2, b.Name, NULL),''),'') as intentNmEn
			 , IFNULL(GROUP_CONCAT(IF(b.Language = 2, b.Description, NULL),''),'') as intentDescEn
			 , IFNULL(GROUP_CONCAT(IF(b.Language = 2, c.Answer, NULL),''),'') as answerEn
			 , IFNULL(GROUP_CONCAT(IF(b.Language = 3, b.Name, NULL),''),'') as intentNmJp
			 , IFNULL(GROUP_CONCAT(IF(b.Language = 3, b.Description, NULL),''),'') as intentDescJp
			 , IFNULL(GROUP_CONCAT(IF(b.Language = 3, c.Answer, NULL),''),'') as answerJp
			 , IFNULL(GROUP_CONCAT(IF(b.Language = 4, b.Name, NULL),''),'') as intentNmCh
			 , IFNULL(GROUP_CONCAT(IF(b.Language = 4, b.Description, NULL),''),'') as intentDescCh
			 , IFNULL(GROUP_CONCAT(IF(b.Language = 4, c.Answer, NULL),''),'') as answerCh
			 , IFNULL(IF(b.Language = '1', c.Url, NULL),'') as customURL
		  FROM (
				 SELECT no
		    		  , language
		    		  , main
		    		  , name
		    		  , answer
		    		  , next
		    		  , url
		    		  , description
		    		  , account
				   FROM Intent
				  WHERE Account = '1636'
				  	AND Language = '1'
			    ) a
	  LEFT JOIN Intent b
			 ON b.Account = '1636'
			AND a.Main = b.Main
      LEFT JOIN Answer c
			 ON b.Answer = c.No
	   GROUP BY a.Main, a.No, a.URL, a.Next
	   ORDER BY a.No
DEBUG: org.mybatis.spring.SqlSessionUtils - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@63ca8775]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@63ca8775]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@63ca8775]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@63ca8775]
DEBUG: first.common.logger.LoggerAspect - ServiceImpl  	:  first.builder.service.BuilderService.getBertIntent()
DEBUG: first.common.logger.LoggerAspect - DAO  		:  first.builder.dao.BuilderDAO.getBertIntent()
DEBUG: first.builder.dao.AbstractDAO - 	 QueryId  	:  builder.getBertIntent
DEBUG: org.mybatis.spring.SqlSessionUtils - Creating a new SqlSession
DEBUG: org.mybatis.spring.SqlSessionUtils - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@30001543]
DEBUG: org.mybatis.spring.transaction.SpringManagedTransaction - JDBC Connection [net.sf.log4jdbc.ConnectionSpy@2025a78b] will be managed by Spring
2024-03-04 12:51:52,989  INFO SQL(simplebot)        :  SELECT IFNULL((SELECT Name FROM BertIntent WHERE Name = a.Name AND BertItfId = a.BertItfId AND Language = 1), '') AS bertIntentKr,
		 	   IFNULL((SELECT Name FROM BertIntent WHERE Name = a.Name AND BertItfId = a.BertItfId AND Language = 2), '') AS bertIntentEn,
		 	   IFNULL((SELECT Name FROM BertIntent WHERE Name = a.Name AND BertItfId = a.BertItfId AND Language = 3), '') AS bertIntentJp,
		 	   IFNULL((SELECT Name FROM BertIntent WHERE Name = a.Name AND BertItfId = a.BertItfId AND Language = 4), '') AS bertIntentCh
		  FROM BertIntent a INNER JOIN BackendInfo b ON a.BertItfId = b.id AND b.host = '1636' GROUP BY a.Name, a.BertItfId
DEBUG: org.mybatis.spring.SqlSessionUtils - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@30001543]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@30001543]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@30001543]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@30001543]
DEBUG: first.common.logger.LoggerAspect - ServiceImpl  	:  first.builder.service.BuilderService.getIntentRel()
DEBUG: first.common.logger.LoggerAspect - DAO  		:  first.builder.dao.BuilderDAO.getIntentRel()
DEBUG: first.builder.dao.AbstractDAO - 	 QueryId  	:  builder.getIntentRel
DEBUG: org.mybatis.spring.SqlSessionUtils - Creating a new SqlSession
DEBUG: org.mybatis.spring.SqlSessionUtils - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@719f4976]
DEBUG: org.mybatis.spring.transaction.SpringManagedTransaction - JDBC Connection [net.sf.log4jdbc.ConnectionSpy@22f691df] will be managed by Spring
2024-03-04 12:51:52,997  INFO SQL(simplebot)        :  SELECT IFNULL((SELECT Main FROM Intent WHERE No = a.SrcIntent), '*') AS Src_Task,
    				  (SELECT Main FROM Intent WHERE No = a.DestIntent) AS Dest_Task,
    				  (SELECT Name FROM BertIntent WHERE No = a.BertIntent) AS Bert_Intent
		  FROM IntentRel a LEFT OUTER JOIN Intent b ON a.DestIntent = b.No AND a.SrcIntent = b.No
		  LEFT OUTER JOIN BertIntent c ON a.BertIntent = c.No LEFT OUTER JOIN BackendInfo d ON c.BertItfId = d.id
 where c.Language = 1 AND d.host = '1636'
DEBUG: org.mybatis.spring.SqlSessionUtils - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@719f4976]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@719f4976]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@719f4976]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@719f4976]
DEBUG: first.common.logger.LoggerAspect - ServiceImpl  	:  first.builder.service.BuilderService.getIntentRel()
DEBUG: first.common.logger.LoggerAspect - DAO  		:  first.builder.dao.BuilderDAO.getIntentRel()
DEBUG: first.builder.dao.AbstractDAO - 	 QueryId  	:  builder.getIntentRel
DEBUG: org.mybatis.spring.SqlSessionUtils - Creating a new SqlSession
DEBUG: org.mybatis.spring.SqlSessionUtils - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@74cea141]
DEBUG: org.mybatis.spring.transaction.SpringManagedTransaction - JDBC Connection [net.sf.log4jdbc.ConnectionSpy@11c5efb7] will be managed by Spring
2024-03-04 12:51:53,000  INFO SQL(simplebot)        :  SELECT IFNULL((SELECT Main FROM Intent WHERE No = a.SrcIntent), '*') AS Src_Task,
    				  (SELECT Main FROM Intent WHERE No = a.DestIntent) AS Dest_Task,
    				  (SELECT Name FROM BertIntent WHERE No = a.BertIntent) AS Bert_Intent
		  FROM IntentRel a LEFT OUTER JOIN Intent b ON a.DestIntent = b.No AND a.SrcIntent = b.No
		  LEFT OUTER JOIN BertIntent c ON a.BertIntent = c.No LEFT OUTER JOIN BackendInfo d ON c.BertItfId = d.id
 where c.Language = 4 AND d.host = '1636'
DEBUG: org.mybatis.spring.SqlSessionUtils - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@74cea141]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@74cea141]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@74cea141]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@74cea141]
DEBUG: first.common.logger.LoggerAspect - ServiceImpl  	:  first.builder.service.BuilderService.getIntentRel()
DEBUG: first.common.logger.LoggerAspect - DAO  		:  first.builder.dao.BuilderDAO.getIntentRel()
DEBUG: first.builder.dao.AbstractDAO - 	 QueryId  	:  builder.getIntentRel
DEBUG: org.mybatis.spring.SqlSessionUtils - Creating a new SqlSession
DEBUG: org.mybatis.spring.SqlSessionUtils - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@47ebabcb]
DEBUG: org.mybatis.spring.transaction.SpringManagedTransaction - JDBC Connection [net.sf.log4jdbc.ConnectionSpy@5bbb1c8a] will be managed by Spring
2024-03-04 12:51:53,004  INFO SQL(simplebot)        :  SELECT IFNULL((SELECT Main FROM Intent WHERE No = a.SrcIntent), '*') AS Src_Task,
    				  (SELECT Main FROM Intent WHERE No = a.DestIntent) AS Dest_Task,
    				  (SELECT Name FROM BertIntent WHERE No = a.BertIntent) AS Bert_Intent
		  FROM IntentRel a LEFT OUTER JOIN Intent b ON a.DestIntent = b.No AND a.SrcIntent = b.No
		  LEFT OUTER JOIN BertIntent c ON a.BertIntent = c.No LEFT OUTER JOIN BackendInfo d ON c.BertItfId = d.id
 where c.Language = 3 AND d.host = '1636'
DEBUG: org.mybatis.spring.SqlSessionUtils - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@47ebabcb]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@47ebabcb]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@47ebabcb]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@47ebabcb]
DEBUG: first.common.logger.LoggerAspect - ServiceImpl  	:  first.builder.service.BuilderService.getIntentRel()
DEBUG: first.common.logger.LoggerAspect - DAO  		:  first.builder.dao.BuilderDAO.getIntentRel()
DEBUG: first.builder.dao.AbstractDAO - 	 QueryId  	:  builder.getIntentRel
DEBUG: org.mybatis.spring.SqlSessionUtils - Creating a new SqlSession
DEBUG: org.mybatis.spring.SqlSessionUtils - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@37a3b937]
DEBUG: org.mybatis.spring.transaction.SpringManagedTransaction - JDBC Connection [net.sf.log4jdbc.ConnectionSpy@23705f59] will be managed by Spring
2024-03-04 12:51:53,007  INFO SQL(simplebot)        :  SELECT IFNULL((SELECT Main FROM Intent WHERE No = a.SrcIntent), '*') AS Src_Task,
    				  (SELECT Main FROM Intent WHERE No = a.DestIntent) AS Dest_Task,
    				  (SELECT Name FROM BertIntent WHERE No = a.BertIntent) AS Bert_Intent
		  FROM IntentRel a LEFT OUTER JOIN Intent b ON a.DestIntent = b.No AND a.SrcIntent = b.No
		  LEFT OUTER JOIN BertIntent c ON a.BertIntent = c.No LEFT OUTER JOIN BackendInfo d ON c.BertItfId = d.id
 where c.Language = 2 AND d.host = '1636'
DEBUG: org.mybatis.spring.SqlSessionUtils - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@37a3b937]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@37a3b937]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@37a3b937]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@37a3b937]
DEBUG: first.common.logger.LoggerAspect - ServiceImpl  	:  first.builder.service.BuilderService.getFallback()
DEBUG: first.common.logger.LoggerAspect - DAO  		:  first.builder.dao.BuilderDAO.getFallback()
DEBUG: first.builder.dao.AbstractDAO - 	 QueryId  	:  builder.getFallback
DEBUG: org.mybatis.spring.SqlSessionUtils - Creating a new SqlSession
DEBUG: org.mybatis.spring.SqlSessionUtils - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@37d38b89]
DEBUG: org.mybatis.spring.transaction.SpringManagedTransaction - JDBC Connection [net.sf.log4jdbc.ConnectionSpy@2f2694d2] will be managed by Spring
2024-03-04 12:51:53,014  INFO SQL(simplebot)        :  SELECT (SELECT Main FROM Intent WHERE No = b.Intent) AS Intent, b.language
		FROM Intent a INNER JOIN Fallback b ON a.No = b.Intent AND b.Host = '1636' ORDER BY b.Language
DEBUG: org.mybatis.spring.SqlSessionUtils - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@37d38b89]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@37d38b89]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@37d38b89]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@37d38b89]
DEBUG: first.common.logger.LoggerAspect - ServiceImpl  	:  first.builder.service.BuilderService.getEntitiesList()
DEBUG: first.common.logger.LoggerAspect - DAO  		:  first.builder.dao.BuilderDAO.getEntitiesList()
DEBUG: first.builder.dao.AbstractDAO - 	 QueryId  	:  builder.getEntitiesList
DEBUG: org.mybatis.spring.SqlSessionUtils - Creating a new SqlSession
DEBUG: org.mybatis.spring.SqlSessionUtils - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@194c126f]
DEBUG: org.mybatis.spring.transaction.SpringManagedTransaction - JDBC Connection [net.sf.log4jdbc.ConnectionSpy@716d3efd] will be managed by Spring
2024-03-04 12:51:53,019  INFO SQL(simplebot)        :  SELECT a.intent, a.name, a.Account, a.Language, a.val, a.Answer, b.Main
		FROM Entities a
				 LEFT JOIN Intent b ON a.intent = b.No AND a.Account = b.Account AND a.Language = b.Language
		WHERE a.Account = '1636' AND a.Language = 1
DEBUG: org.mybatis.spring.SqlSessionUtils - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@194c126f]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@194c126f]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@194c126f]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@194c126f]
DEBUG: first.common.logger.LoggerAspect - ServiceImpl  	:  first.builder.service.BuilderService.getEntitiesList()
DEBUG: first.common.logger.LoggerAspect - DAO  		:  first.builder.dao.BuilderDAO.getEntitiesList()
DEBUG: first.builder.dao.AbstractDAO - 	 QueryId  	:  builder.getEntitiesList
DEBUG: org.mybatis.spring.SqlSessionUtils - Creating a new SqlSession
DEBUG: org.mybatis.spring.SqlSessionUtils - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@968523]
DEBUG: org.mybatis.spring.transaction.SpringManagedTransaction - JDBC Connection [net.sf.log4jdbc.ConnectionSpy@271fc6cc] will be managed by Spring
2024-03-04 12:51:53,022  INFO SQL(simplebot)        :  SELECT a.intent, a.name, a.Account, a.Language, a.val, a.Answer, b.Main
		FROM Entities a
				 LEFT JOIN Intent b ON a.intent = b.No AND a.Account = b.Account AND a.Language = b.Language
		WHERE a.Account = '1636' AND a.Language = 4
DEBUG: org.mybatis.spring.SqlSessionUtils - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@968523]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@968523]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@968523]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@968523]
DEBUG: first.common.logger.LoggerAspect - ServiceImpl  	:  first.builder.service.BuilderService.getEntitiesList()
DEBUG: first.common.logger.LoggerAspect - DAO  		:  first.builder.dao.BuilderDAO.getEntitiesList()
DEBUG: first.builder.dao.AbstractDAO - 	 QueryId  	:  builder.getEntitiesList
DEBUG: org.mybatis.spring.SqlSessionUtils - Creating a new SqlSession
DEBUG: org.mybatis.spring.SqlSessionUtils - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@633819fb]
DEBUG: org.mybatis.spring.transaction.SpringManagedTransaction - JDBC Connection [net.sf.log4jdbc.ConnectionSpy@559ae37d] will be managed by Spring
2024-03-04 12:51:53,025  INFO SQL(simplebot)        :  SELECT a.intent, a.name, a.Account, a.Language, a.val, a.Answer, b.Main
		FROM Entities a
				 LEFT JOIN Intent b ON a.intent = b.No AND a.Account = b.Account AND a.Language = b.Language
		WHERE a.Account = '1636' AND a.Language = 3
DEBUG: org.mybatis.spring.SqlSessionUtils - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@633819fb]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@633819fb]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@633819fb]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@633819fb]
DEBUG: first.common.logger.LoggerAspect - ServiceImpl  	:  first.builder.service.BuilderService.getEntitiesList()
DEBUG: first.common.logger.LoggerAspect - DAO  		:  first.builder.dao.BuilderDAO.getEntitiesList()
DEBUG: first.builder.dao.AbstractDAO - 	 QueryId  	:  builder.getEntitiesList
DEBUG: org.mybatis.spring.SqlSessionUtils - Creating a new SqlSession
DEBUG: org.mybatis.spring.SqlSessionUtils - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@2803e761]
DEBUG: org.mybatis.spring.transaction.SpringManagedTransaction - JDBC Connection [net.sf.log4jdbc.ConnectionSpy@267202f1] will be managed by Spring
2024-03-04 12:51:53,029  INFO SQL(simplebot)        :  SELECT a.intent, a.name, a.Account, a.Language, a.val, a.Answer, b.Main
		FROM Entities a
				 LEFT JOIN Intent b ON a.intent = b.No AND a.Account = b.Account AND a.Language = b.Language
		WHERE a.Account = '1636' AND a.Language = 2
DEBUG: org.mybatis.spring.SqlSessionUtils - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@2803e761]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@2803e761]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@2803e761]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@2803e761]
04-Mar-2024 12:51:53.046 WARNING [http-nio-18090-exec-8] org.apache.coyote.http11.Http11Processor.prepareResponse The HTTP response header [Content-Disposition] with value [attachment;filename=[chatbot] TASK_ANSWER_데이터.xlsx] has been removed from the response because it is invalid
	java.lang.IllegalArgumentException: The Unicode character [데] at code point [45,936] cannot be encoded as it is outside the permitted range of 0 to 255
		at org.apache.tomcat.util.buf.MessageBytes.toBytesSimple(MessageBytes.java:310)
		at org.apache.tomcat.util.buf.MessageBytes.toBytes(MessageBytes.java:283)
		at org.apache.coyote.http11.Http11OutputBuffer.write(Http11OutputBuffer.java:438)
		at org.apache.coyote.http11.Http11OutputBuffer.sendHeader(Http11OutputBuffer.java:417)
		at org.apache.coyote.http11.Http11Processor.prepareResponse(Http11Processor.java:1269)
		at org.apache.coyote.AbstractProcessor.action(AbstractProcessor.java:380)
		at org.apache.coyote.Response.action(Response.java:206)
		at org.apache.coyote.Response.sendHeaders(Response.java:415)
		at org.apache.catalina.connector.OutputBuffer.doFlush(OutputBuffer.java:309)
		at org.apache.catalina.connector.OutputBuffer.flush(OutputBuffer.java:289)
		at org.apache.catalina.connector.CoyoteOutputStream.flush(CoyoteOutputStream.java:120)
		at org.apache.commons.compress.archivers.zip.ZipArchiveOutputStream.flush(ZipArchiveOutputStream.java:979)
		at java.io.FilterOutputStream.flush(FilterOutputStream.java:140)
		at com.sun.org.apache.xml.internal.serializer.WriterToUTF8Buffered.flush(WriterToUTF8Buffered.java:472)
		at com.sun.org.apache.xml.internal.serializer.ToStream.flushWriter(ToStream.java:290)
		at com.sun.org.apache.xml.internal.serializer.ToXMLStream.endDocument(ToXMLStream.java:213)
		at com.sun.org.apache.xml.internal.serializer.ToUnknownStream.endDocument(ToUnknownStream.java:829)
		at com.sun.org.apache.xalan.internal.xsltc.trax.DOM2TO.parse(DOM2TO.java:137)
		at com.sun.org.apache.xalan.internal.xsltc.trax.DOM2TO.parse(DOM2TO.java:96)
		at com.sun.org.apache.xalan.internal.xsltc.trax.TransformerImpl.transformIdentity(TransformerImpl.java:686)
		at com.sun.org.apache.xalan.internal.xsltc.trax.TransformerImpl.transform(TransformerImpl.java:730)
		at com.sun.org.apache.xalan.internal.xsltc.trax.TransformerImpl.transform(TransformerImpl.java:345)
		at org.apache.poi.openxml4j.opc.StreamHelper.saveXmlInStream(StreamHelper.java:84)
		at org.apache.poi.openxml4j.opc.internal.ZipContentTypeManager.saveImpl(ZipContentTypeManager.java:69)
		at org.apache.poi.openxml4j.opc.internal.ContentTypeManager.save(ContentTypeManager.java:449)
		at org.apache.poi.openxml4j.opc.ZipPackage.saveImpl(ZipPackage.java:518)
		at org.apache.poi.openxml4j.opc.OPCPackage.save(OPCPackage.java:1489)
		at org.apache.poi.ooxml.POIXMLDocument.write(POIXMLDocument.java:242)
		at first.builder.controller.BuilderController.chatExcelDown(BuilderController.java:2118)
		at first.builder.controller.BuilderController$$FastClassBySpringCGLIB$$c1e54596.invoke(<generated>)
		at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
		at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:736)
		at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:157)
		at org.springframework.aop.aspectj.MethodInvocationProceedingJoinPoint.proceed(MethodInvocationProceedingJoinPoint.java:84)
		at first.common.logger.LoggerAspect.logPrint(LoggerAspect.java:29)
		at sun.reflect.GeneratedMethodAccessor69.invoke(Unknown Source)
		at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
		at java.lang.reflect.Method.invoke(Method.java:498)
		at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:627)
		at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:616)
		at org.springframework.aop.aspectj.AspectJAroundAdvice.invoke(AspectJAroundAdvice.java:70)
		at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
		at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:92)
		at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
		at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:671)
		at first.builder.controller.BuilderController$$EnhancerBySpringCGLIB$$16f07cbd.chatExcelDown(<generated>)
		at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
		at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
		at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
		at java.lang.reflect.Method.invoke(Method.java:498)
		at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:205)
		at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:133)
		at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:97)
		at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:849)
		at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:760)
		at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:85)
		at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:967)
		at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:901)
		at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:970)
		at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:861)
		at javax.servlet.http.HttpServlet.service(HttpServlet.java:489)
		at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:846)
		at javax.servlet.http.HttpServlet.service(HttpServlet.java:583)
		at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:212)
		at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:156)
		at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
		at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:181)
		at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:156)
		at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:197)
		at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
		at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:181)
		at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:156)
		at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:168)
		at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
		at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:483)
		at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:130)
		at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
		at org.apache.catalina.valves.AbstractAccessLogValve.invoke(AbstractAccessLogValve.java:679)
		at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
		at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:346)
		at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:617)
		at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
		at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:934)
		at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1698)
		at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
		at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
		at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
		at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
		at java.lang.Thread.run(Thread.java:750)
DEBUG: first.common.logger.LoggerAspect - Controller  	:  first.builder.controller.BuilderController.builderBottomReplaceDict()
DEBUG: first.common.logger.LoggerAspect - Controller  	:  first.builder.controller.BuilderController.builderContentsReplaceDict()
DEBUG: first.common.logger.LoggerAspect - Controller  	:  first.builder.controller.BuilderController.getReplaceDict()
DEBUG: first.common.logger.LoggerAspect - ServiceImpl  	:  first.builder.service.BuilderService.getReplaceDictCount()
DEBUG: first.common.logger.LoggerAspect - DAO  		:  first.builder.dao.BuilderDAO.getReplaceDictCount()
DEBUG: first.builder.dao.AbstractDAO - 	 QueryId  	:  builder.getReplaceDictCount
DEBUG: org.mybatis.spring.SqlSessionUtils - Creating a new SqlSession
DEBUG: org.mybatis.spring.SqlSessionUtils - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@323f35c6]
DEBUG: org.mybatis.spring.transaction.SpringManagedTransaction - JDBC Connection [net.sf.log4jdbc.ConnectionSpy@30705604] will be managed by Spring
2024-03-04 12:55:35,642  INFO SQL(simplebot)        :  SELECT COUNT(*) 
		  FROM ReplaceDict 
		 WHERE Host = 1636 
		   AND Lang = 1
DEBUG: org.mybatis.spring.SqlSessionUtils - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@323f35c6]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@323f35c6]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@323f35c6]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@323f35c6]
DEBUG: first.common.logger.LoggerAspect - ServiceImpl  	:  first.builder.service.BuilderService.getReplaceDictLst()
DEBUG: first.common.logger.LoggerAspect - DAO  		:  first.builder.dao.BuilderDAO.getReplaceDictLst()
DEBUG: first.builder.dao.AbstractDAO - 	 QueryId  	:  builder.getReplaceDictLst
DEBUG: org.mybatis.spring.SqlSessionUtils - Creating a new SqlSession
DEBUG: org.mybatis.spring.SqlSessionUtils - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1183be6f]
DEBUG: org.mybatis.spring.transaction.SpringManagedTransaction - JDBC Connection [net.sf.log4jdbc.ConnectionSpy@221f7b52] will be managed by Spring
2024-03-04 12:55:35,649  INFO SQL(simplebot)        :  SELECT T.* FROM (
		SELECT @rownum := @rownum + 1 AS RNUM
			 , No
			 , Host
			 , Lang
			 , `Before`
			 , `After`
		  FROM ReplaceDict
		  JOIN (SELECT @rownum := 0) AS R
		 WHERE Host = 1636
		   AND Lang = 1
		 
		 
				ORDER BY No desc
			 
		) T
		LIMIT 100 OFFSET 0
DEBUG: org.mybatis.spring.SqlSessionUtils - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1183be6f]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1183be6f]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1183be6f]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1183be6f]
DEBUG: first.common.logger.LoggerAspect - Controller  	:  first.builder.controller.BuilderController.getReplaceDict()
DEBUG: first.common.logger.LoggerAspect - ServiceImpl  	:  first.builder.service.BuilderService.getReplaceDictCount()
DEBUG: first.common.logger.LoggerAspect - DAO  		:  first.builder.dao.BuilderDAO.getReplaceDictCount()
DEBUG: first.builder.dao.AbstractDAO - 	 QueryId  	:  builder.getReplaceDictCount
DEBUG: org.mybatis.spring.SqlSessionUtils - Creating a new SqlSession
DEBUG: org.mybatis.spring.SqlSessionUtils - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@4c4cab2d]
DEBUG: org.mybatis.spring.transaction.SpringManagedTransaction - JDBC Connection [net.sf.log4jdbc.ConnectionSpy@616fcaff] will be managed by Spring
2024-03-04 12:55:35,687  INFO SQL(simplebot)        :  SELECT COUNT(*) 
		  FROM ReplaceDict 
		 WHERE Host = 1636 
		   AND Lang = 1
DEBUG: org.mybatis.spring.SqlSessionUtils - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@4c4cab2d]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@4c4cab2d]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@4c4cab2d]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@4c4cab2d]
DEBUG: first.common.logger.LoggerAspect - ServiceImpl  	:  first.builder.service.BuilderService.getReplaceDictLst()
DEBUG: first.common.logger.LoggerAspect - DAO  		:  first.builder.dao.BuilderDAO.getReplaceDictLst()
DEBUG: first.builder.dao.AbstractDAO - 	 QueryId  	:  builder.getReplaceDictLst
DEBUG: org.mybatis.spring.SqlSessionUtils - Creating a new SqlSession
DEBUG: org.mybatis.spring.SqlSessionUtils - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@78f0d410]
DEBUG: org.mybatis.spring.transaction.SpringManagedTransaction - JDBC Connection [net.sf.log4jdbc.ConnectionSpy@7490784d] will be managed by Spring
2024-03-04 12:55:35,690  INFO SQL(simplebot)        :  SELECT T.* FROM (
		SELECT @rownum := @rownum + 1 AS RNUM
			 , No
			 , Host
			 , Lang
			 , `Before`
			 , `After`
		  FROM ReplaceDict
		  JOIN (SELECT @rownum := 0) AS R
		 WHERE Host = 1636
		   AND Lang = 1
		 
		 
				ORDER BY No desc
			 
		) T
		LIMIT 100 OFFSET 0
DEBUG: org.mybatis.spring.SqlSessionUtils - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@78f0d410]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@78f0d410]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@78f0d410]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@78f0d410]
DEBUG: first.common.logger.LoggerAspect - Controller  	:  first.builder.controller.BuilderController.ReplaceDictExcelDown()
DEBUG: first.common.logger.LoggerAspect - ServiceImpl  	:  first.builder.service.BuilderService.getReplaceDictCount()
DEBUG: first.common.logger.LoggerAspect - DAO  		:  first.builder.dao.BuilderDAO.getReplaceDictCount()
DEBUG: first.builder.dao.AbstractDAO - 	 QueryId  	:  builder.getReplaceDictCount
DEBUG: org.mybatis.spring.SqlSessionUtils - Creating a new SqlSession
DEBUG: org.mybatis.spring.SqlSessionUtils - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@84fa5e]
DEBUG: org.mybatis.spring.transaction.SpringManagedTransaction - JDBC Connection [net.sf.log4jdbc.ConnectionSpy@530c9cb2] will be managed by Spring
2024-03-04 12:55:37,202  INFO SQL(simplebot)        :  SELECT COUNT(*) 
		  FROM ReplaceDict 
		 WHERE Host = 1636 
		   AND Lang = '1'
DEBUG: org.mybatis.spring.SqlSessionUtils - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@84fa5e]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@84fa5e]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@84fa5e]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@84fa5e]
DEBUG: first.common.logger.LoggerAspect - ServiceImpl  	:  first.builder.service.BuilderService.getReplaceDictLst()
DEBUG: first.common.logger.LoggerAspect - DAO  		:  first.builder.dao.BuilderDAO.getReplaceDictLst()
DEBUG: first.builder.dao.AbstractDAO - 	 QueryId  	:  builder.getReplaceDictLst
DEBUG: org.mybatis.spring.SqlSessionUtils - Creating a new SqlSession
DEBUG: org.mybatis.spring.SqlSessionUtils - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@3f6fcd2d]
DEBUG: org.mybatis.spring.transaction.SpringManagedTransaction - JDBC Connection [net.sf.log4jdbc.ConnectionSpy@3b12e40d] will be managed by Spring
2024-03-04 12:55:37,204  INFO SQL(simplebot)        :  SELECT T.* FROM (
		SELECT @rownum := @rownum + 1 AS RNUM
			 , No
			 , Host
			 , Lang
			 , `Before`
			 , `After`
		  FROM ReplaceDict
		  JOIN (SELECT @rownum := 0) AS R
		 WHERE Host = '1636'
		   AND Lang = '1'
		 
		 
				ORDER BY No desc
			 
		) T
		LIMIT 0 OFFSET 0
DEBUG: org.mybatis.spring.SqlSessionUtils - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@3f6fcd2d]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@3f6fcd2d]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@3f6fcd2d]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@3f6fcd2d]
DEBUG: first.common.logger.LoggerAspect - Controller  	:  first.builder.controller.BuilderController.ReplaceDictExcelDown()
DEBUG: first.common.logger.LoggerAspect - ServiceImpl  	:  first.builder.service.BuilderService.getReplaceDictCount()
DEBUG: first.common.logger.LoggerAspect - DAO  		:  first.builder.dao.BuilderDAO.getReplaceDictCount()
DEBUG: first.builder.dao.AbstractDAO - 	 QueryId  	:  builder.getReplaceDictCount
DEBUG: org.mybatis.spring.SqlSessionUtils - Creating a new SqlSession
DEBUG: org.mybatis.spring.SqlSessionUtils - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@4454ef75]
DEBUG: org.mybatis.spring.transaction.SpringManagedTransaction - JDBC Connection [net.sf.log4jdbc.ConnectionSpy@2535e2] will be managed by Spring
2024-03-04 12:56:17,273  INFO SQL(simplebot)        :  SELECT COUNT(*) 
		  FROM ReplaceDict 
		 WHERE Host = 1636 
		   AND Lang = '1'
DEBUG: org.mybatis.spring.SqlSessionUtils - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@4454ef75]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@4454ef75]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@4454ef75]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@4454ef75]
DEBUG: first.common.logger.LoggerAspect - ServiceImpl  	:  first.builder.service.BuilderService.getReplaceDictLst()
DEBUG: first.common.logger.LoggerAspect - DAO  		:  first.builder.dao.BuilderDAO.getReplaceDictLst()
DEBUG: first.builder.dao.AbstractDAO - 	 QueryId  	:  builder.getReplaceDictLst
DEBUG: org.mybatis.spring.SqlSessionUtils - Creating a new SqlSession
DEBUG: org.mybatis.spring.SqlSessionUtils - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@63eac1f7]
DEBUG: org.mybatis.spring.transaction.SpringManagedTransaction - JDBC Connection [net.sf.log4jdbc.ConnectionSpy@4d295b24] will be managed by Spring
2024-03-04 12:56:17,277  INFO SQL(simplebot)        :  SELECT T.* FROM (
		SELECT @rownum := @rownum + 1 AS RNUM
			 , No
			 , Host
			 , Lang
			 , `Before`
			 , `After`
		  FROM ReplaceDict
		  JOIN (SELECT @rownum := 0) AS R
		 WHERE Host = '1636'
		   AND Lang = '1'
		 
		 
				ORDER BY No desc
			 
		) T
		LIMIT 0 OFFSET 0
DEBUG: org.mybatis.spring.SqlSessionUtils - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@63eac1f7]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@63eac1f7]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@63eac1f7]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@63eac1f7]
04-Mar-2024 12:58:20.828 INFO [ContainerBackgroundProcessor[StandardEngine[Catalina]]] org.apache.catalina.startup.HostConfig.undeploy Undeploying context [/sds-builder]
04-Mar-2024 12:58:20.859 WARNING [ContainerBackgroundProcessor[StandardEngine[Catalina]]] org.apache.catalina.loader.WebappClassLoaderBase.clearReferencesJdbc The web application [sds-builder] registered the JDBC driver [com.mysql.jdbc.Driver] but failed to unregister it when the web application was stopped. To prevent a memory leak, the JDBC Driver has been forcibly unregistered.
04-Mar-2024 12:58:20.859 WARNING [ContainerBackgroundProcessor[StandardEngine[Catalina]]] org.apache.catalina.loader.WebappClassLoaderBase.clearReferencesJdbc The web application [sds-builder] registered the JDBC driver [net.sf.log4jdbc.DriverSpy] but failed to unregister it when the web application was stopped. To prevent a memory leak, the JDBC Driver has been forcibly unregistered.
04-Mar-2024 12:58:20.860 WARNING [ContainerBackgroundProcessor[StandardEngine[Catalina]]] org.apache.catalina.loader.WebappClassLoaderBase.clearReferencesJdbc The web application [sds-builder] registered the JDBC driver [com.microsoft.sqlserver.jdbc.SQLServerDriver] but failed to unregister it when the web application was stopped. To prevent a memory leak, the JDBC Driver has been forcibly unregistered.
04-Mar-2024 12:58:20.861 WARNING [ContainerBackgroundProcessor[StandardEngine[Catalina]]] org.apache.catalina.loader.WebappClassLoaderBase.clearReferencesThreads The web application [sds-builder] appears to have started a thread named [mysql-cj-abandoned-connection-cleanup] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 java.lang.Object.wait(Native Method)
 java.lang.ref.ReferenceQueue.remove(ReferenceQueue.java:144)
 com.mysql.jdbc.AbandonedConnectionCleanupThread.run(AbandonedConnectionCleanupThread.java:80)
 java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
 java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
 java.lang.Thread.run(Thread.java:750)
04-Mar-2024 12:58:20.922 INFO [localhost-startStop-2] org.apache.catalina.startup.HostConfig.deployWAR Deploying web application archive [/home/minds/maum/sds-builder/apache-tomcat-8.5.99/webapps/sds-builder.war]
04-Mar-2024 12:58:23.386 INFO [localhost-startStop-2] org.apache.jasper.servlet.TldScanner.scanJars At least one JAR was scanned for TLDs yet contained no TLDs. Enable debug logging for this logger for a complete list of JARs that were scanned but no TLDs were found in them. Skipping unneeded JARs during scanning can improve startup time and JSP compilation time.
DEBUG: org.mybatis.spring.SqlSessionFactoryBean - Property 'configuration' or 'configLocation' not specified, using default MyBatis Configuration
DEBUG: org.mybatis.spring.SqlSessionFactoryBean - Parsed mapper file: 'file [/home/minds/maum/sds-builder/apache-tomcat-8.5.99/webapps/sds-builder/WEB-INF/classes/mapper/maria/Chatbot/Builder_SQL.xml]'
DEBUG: org.mybatis.spring.SqlSessionFactoryBean - Parsed mapper file: 'file [/home/minds/maum/sds-builder/apache-tomcat-8.5.99/webapps/sds-builder/WEB-INF/classes/mapper/maria/Chatbot/MaumSDS_SQL.xml]'
DEBUG: org.mybatis.spring.SqlSessionFactoryBean - Property 'configuration' or 'configLocation' not specified, using default MyBatis Configuration
DEBUG: org.mybatis.spring.SqlSessionFactoryBean - Parsed mapper file: 'file [/home/minds/maum/sds-builder/apache-tomcat-8.5.99/webapps/sds-builder/WEB-INF/classes/mapper/maria/HAPPYCALL4/NQA_SQL.xml]'
DEBUG: org.mybatis.spring.SqlSessionFactoryBean - Parsed mapper file: 'file [/home/minds/maum/sds-builder/apache-tomcat-8.5.99/webapps/sds-builder/WEB-INF/classes/mapper/maria/HAPPYCALL4/SimpleBot_SQL.xml]'
SimpleBot Execution Environment : prod
SimpleBot BertIntent itfIP : 0
SimpleBot BertIntent nerIP : 0
SimpleBot BL IP : 125.132.250.244
SimpleBot CM IP : 121.133.247.250
SimpleBot M2U rest address : http://localhost:9990
SimpleBot Style Resources Path : /home/minds/maum/sds-builder/imgUpload
Default Resources Make : chatbot.css
Default Resources Make : chatbot_custom.css
Default Resources Make : chatbot_floating.css
Default Resources Make : IconImg
Default Resources Make : logoImg
Default Resources Make : default
Default Resources Make : mindslab
Default Resources Make : redtie
Default Resource constructed.
DEBUG: first.common.logger.LoggerAspect - ServiceImpl  	:  first.builder.service.BuilderService.getNqaStatusChatbotList()
DEBUG: first.common.logger.LoggerAspect - DAO  		:  first.builder.dao.BuilderDAO.getNqaStatusChatbotList()
DEBUG: first.builder.dao.AbstractDAO - 	 QueryId  	:  builder.getNqaStatusChatbotList
DEBUG: org.mybatis.spring.SqlSessionUtils - Creating a new SqlSession
DEBUG: org.mybatis.spring.SqlSessionUtils - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@7b7b376b]
DEBUG: org.mybatis.spring.transaction.SpringManagedTransaction - JDBC Connection [net.sf.log4jdbc.ConnectionSpy@2df1ab77] will be managed by Spring
2024-03-04 12:58:25,071  INFO SQL(simplebot)        :  SELECT No as host, Name, 'preparation' as nqaUploadStatus
 from Account
		ORDER BY No
DEBUG: org.mybatis.spring.SqlSessionUtils - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@7b7b376b]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@7b7b376b]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@7b7b376b]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@7b7b376b]
04-Mar-2024 12:58:25.580 INFO [mysql-cj-abandoned-connection-cleanup] org.apache.catalina.loader.WebappClassLoaderBase.checkStateForResourceLoading Illegal access: this web application instance has been stopped already. Could not load []. The following stack trace is thrown for debugging purposes as well as to attempt to terminate the thread which caused the illegal access.
	java.lang.IllegalStateException: Illegal access: this web application instance has been stopped already. Could not load []. The following stack trace is thrown for debugging purposes as well as to attempt to terminate the thread which caused the illegal access.
		at org.apache.catalina.loader.WebappClassLoaderBase.checkStateForResourceLoading(WebappClassLoaderBase.java:1358)
		at org.apache.catalina.loader.WebappClassLoaderBase.getResource(WebappClassLoaderBase.java:990)
		at com.mysql.jdbc.AbandonedConnectionCleanupThread.checkThreadContextClassLoader(AbandonedConnectionCleanupThread.java:112)
		at com.mysql.jdbc.AbandonedConnectionCleanupThread.run(AbandonedConnectionCleanupThread.java:79)
		at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
		at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
		at java.lang.Thread.run(Thread.java:750)
04-Mar-2024 12:58:26.021 INFO [localhost-startStop-2] org.apache.catalina.startup.HostConfig.deployWAR Deployment of web application archive [/home/minds/maum/sds-builder/apache-tomcat-8.5.99/webapps/sds-builder.war] has finished in [5,099] ms
04-Mar-2024 12:58:49.451 INFO [main] org.apache.catalina.core.StandardServer.await A valid shutdown command was received via the shutdown port. Stopping the Server instance.
04-Mar-2024 12:58:49.451 INFO [main] org.apache.coyote.AbstractProtocol.pause Pausing ProtocolHandler ["http-nio-18090"]
04-Mar-2024 12:58:49.453 INFO [main] org.apache.catalina.core.StandardService.stopInternal Stopping service [Catalina]
04-Mar-2024 12:58:49.467 WARNING [localhost-startStop-3] org.apache.catalina.loader.WebappClassLoaderBase.clearReferencesJdbc The web application [sds-builder] registered the JDBC driver [com.mysql.jdbc.Driver] but failed to unregister it when the web application was stopped. To prevent a memory leak, the JDBC Driver has been forcibly unregistered.
04-Mar-2024 12:58:49.467 WARNING [localhost-startStop-3] org.apache.catalina.loader.WebappClassLoaderBase.clearReferencesJdbc The web application [sds-builder] registered the JDBC driver [net.sf.log4jdbc.DriverSpy] but failed to unregister it when the web application was stopped. To prevent a memory leak, the JDBC Driver has been forcibly unregistered.
04-Mar-2024 12:58:49.467 WARNING [localhost-startStop-3] org.apache.catalina.loader.WebappClassLoaderBase.clearReferencesJdbc The web application [sds-builder] registered the JDBC driver [com.microsoft.sqlserver.jdbc.SQLServerDriver] but failed to unregister it when the web application was stopped. To prevent a memory leak, the JDBC Driver has been forcibly unregistered.
04-Mar-2024 12:58:49.467 WARNING [localhost-startStop-3] org.apache.catalina.loader.WebappClassLoaderBase.clearReferencesThreads The web application [sds-builder] appears to have started a thread named [mysql-cj-abandoned-connection-cleanup] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 java.lang.Object.wait(Native Method)
 java.lang.ref.ReferenceQueue.remove(ReferenceQueue.java:144)
 com.mysql.jdbc.AbandonedConnectionCleanupThread.run(AbandonedConnectionCleanupThread.java:80)
 java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
 java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
 java.lang.Thread.run(Thread.java:750)
04-Mar-2024 12:58:49.499 INFO [main] org.apache.coyote.AbstractProtocol.stop Stopping ProtocolHandler ["http-nio-18090"]
04-Mar-2024 12:58:49.510 INFO [main] org.apache.coyote.AbstractProtocol.destroy Destroying ProtocolHandler ["http-nio-18090"]
04-Mar-2024 12:58:51.918 INFO [main] org.apache.catalina.startup.VersionLoggerListener.log Server version name:   Apache Tomcat/8.5.99
04-Mar-2024 12:58:51.919 INFO [main] org.apache.catalina.startup.VersionLoggerListener.log Server built:          Feb 14 2024 22:52:13 UTC
04-Mar-2024 12:58:51.919 INFO [main] org.apache.catalina.startup.VersionLoggerListener.log Server version number: 8.5.99.0
04-Mar-2024 12:58:51.920 INFO [main] org.apache.catalina.startup.VersionLoggerListener.log OS Name:               Linux
04-Mar-2024 12:58:51.920 INFO [main] org.apache.catalina.startup.VersionLoggerListener.log OS Version:            5.15.0-97-generic
04-Mar-2024 12:58:51.920 INFO [main] org.apache.catalina.startup.VersionLoggerListener.log Architecture:          amd64
04-Mar-2024 12:58:51.920 INFO [main] org.apache.catalina.startup.VersionLoggerListener.log Java Home:             /usr/lib/jvm/java-8-openjdk-amd64/jre
04-Mar-2024 12:58:51.920 INFO [main] org.apache.catalina.startup.VersionLoggerListener.log JVM Version:           1.8.0_392-8u392-ga-1~22.04-b08
04-Mar-2024 12:58:51.920 INFO [main] org.apache.catalina.startup.VersionLoggerListener.log JVM Vendor:            Private Build
04-Mar-2024 12:58:51.920 INFO [main] org.apache.catalina.startup.VersionLoggerListener.log CATALINA_BASE:         /home/minds/maum/sds-builder/apache-tomcat-8.5.99
04-Mar-2024 12:58:51.920 INFO [main] org.apache.catalina.startup.VersionLoggerListener.log CATALINA_HOME:         /home/minds/maum/sds-builder/apache-tomcat-8.5.99
04-Mar-2024 12:58:51.920 INFO [main] org.apache.catalina.startup.VersionLoggerListener.log Command line argument: -Djava.util.logging.config.file=/home/minds/maum/sds-builder/apache-tomcat-8.5.99/conf/logging.properties
04-Mar-2024 12:58:51.920 INFO [main] org.apache.catalina.startup.VersionLoggerListener.log Command line argument: -Djava.util.logging.manager=org.apache.juli.ClassLoaderLogManager
04-Mar-2024 12:58:51.920 INFO [main] org.apache.catalina.startup.VersionLoggerListener.log Command line argument: -Djdk.tls.ephemeralDHKeySize=2048
04-Mar-2024 12:58:51.921 INFO [main] org.apache.catalina.startup.VersionLoggerListener.log Command line argument: -Djava.protocol.handler.pkgs=org.apache.catalina.webresources
04-Mar-2024 12:58:51.921 INFO [main] org.apache.catalina.startup.VersionLoggerListener.log Command line argument: -Dorg.apache.catalina.security.SecurityListener.UMASK=0027
04-Mar-2024 12:58:51.921 INFO [main] org.apache.catalina.startup.VersionLoggerListener.log Command line argument: -Dignore.endorsed.dirs=
04-Mar-2024 12:58:51.921 INFO [main] org.apache.catalina.startup.VersionLoggerListener.log Command line argument: -Dcatalina.base=/home/minds/maum/sds-builder/apache-tomcat-8.5.99
04-Mar-2024 12:58:51.921 INFO [main] org.apache.catalina.startup.VersionLoggerListener.log Command line argument: -Dcatalina.home=/home/minds/maum/sds-builder/apache-tomcat-8.5.99
04-Mar-2024 12:58:51.921 INFO [main] org.apache.catalina.startup.VersionLoggerListener.log Command line argument: -Djava.io.tmpdir=/home/minds/maum/sds-builder/apache-tomcat-8.5.99/temp
04-Mar-2024 12:58:51.921 INFO [main] org.apache.catalina.core.AprLifecycleListener.lifecycleEvent The Apache Tomcat Native library which allows using OpenSSL was not found on the java.library.path: [/usr/java/packages/lib/amd64:/usr/lib/x86_64-linux-gnu/jni:/lib/x86_64-linux-gnu:/usr/lib/x86_64-linux-gnu:/usr/lib/jni:/lib:/usr/lib]
04-Mar-2024 12:58:51.979 INFO [main] org.apache.coyote.AbstractProtocol.init Initializing ProtocolHandler ["http-nio-18090"]
04-Mar-2024 12:58:51.995 INFO [main] org.apache.catalina.startup.Catalina.load Initialization processed in 445 ms
04-Mar-2024 12:58:52.037 INFO [main] org.apache.catalina.core.StandardService.startInternal Starting service [Catalina]
04-Mar-2024 12:58:52.038 INFO [main] org.apache.catalina.core.StandardEngine.startInternal Starting Servlet engine: [Apache Tomcat/8.5.99]
04-Mar-2024 12:58:52.064 INFO [localhost-startStop-1] org.apache.catalina.startup.HostConfig.deployWAR Deploying web application archive [/home/minds/maum/sds-builder/apache-tomcat-8.5.99/webapps/sds-builder.war]
04-Mar-2024 12:58:54.610 INFO [localhost-startStop-1] org.apache.jasper.servlet.TldScanner.scanJars At least one JAR was scanned for TLDs yet contained no TLDs. Enable debug logging for this logger for a complete list of JARs that were scanned but no TLDs were found in them. Skipping unneeded JARs during scanning can improve startup time and JSP compilation time.
DEBUG: org.mybatis.spring.SqlSessionFactoryBean - Property 'configuration' or 'configLocation' not specified, using default MyBatis Configuration
DEBUG: org.mybatis.spring.SqlSessionFactoryBean - Parsed mapper file: 'file [/home/minds/maum/sds-builder/apache-tomcat-8.5.99/webapps/sds-builder/WEB-INF/classes/mapper/maria/Chatbot/Builder_SQL.xml]'
DEBUG: org.mybatis.spring.SqlSessionFactoryBean - Parsed mapper file: 'file [/home/minds/maum/sds-builder/apache-tomcat-8.5.99/webapps/sds-builder/WEB-INF/classes/mapper/maria/Chatbot/MaumSDS_SQL.xml]'
DEBUG: org.mybatis.spring.SqlSessionFactoryBean - Property 'configuration' or 'configLocation' not specified, using default MyBatis Configuration
DEBUG: org.mybatis.spring.SqlSessionFactoryBean - Parsed mapper file: 'file [/home/minds/maum/sds-builder/apache-tomcat-8.5.99/webapps/sds-builder/WEB-INF/classes/mapper/maria/HAPPYCALL4/NQA_SQL.xml]'
DEBUG: org.mybatis.spring.SqlSessionFactoryBean - Parsed mapper file: 'file [/home/minds/maum/sds-builder/apache-tomcat-8.5.99/webapps/sds-builder/WEB-INF/classes/mapper/maria/HAPPYCALL4/SimpleBot_SQL.xml]'
SimpleBot Execution Environment : prod
SimpleBot BertIntent itfIP : 0
SimpleBot BertIntent nerIP : 0
SimpleBot BL IP : 125.132.250.244
SimpleBot CM IP : 121.133.247.250
SimpleBot M2U rest address : http://localhost:9990
SimpleBot Style Resources Path : /home/minds/maum/sds-builder/imgUpload
Default Resources Make : chatbot.css
Default Resources Make : chatbot_custom.css
Default Resources Make : chatbot_floating.css
Default Resources Make : IconImg
Default Resources Make : logoImg
Default Resources Make : default
Default Resources Make : mindslab
Default Resources Make : redtie
Default Resource constructed.
DEBUG: first.common.logger.LoggerAspect - ServiceImpl  	:  first.builder.service.BuilderService.getNqaStatusChatbotList()
DEBUG: first.common.logger.LoggerAspect - DAO  		:  first.builder.dao.BuilderDAO.getNqaStatusChatbotList()
DEBUG: first.builder.dao.AbstractDAO - 	 QueryId  	:  builder.getNqaStatusChatbotList
DEBUG: org.mybatis.spring.SqlSessionUtils - Creating a new SqlSession
DEBUG: org.mybatis.spring.SqlSessionUtils - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@27bd332]
DEBUG: org.mybatis.spring.transaction.SpringManagedTransaction - JDBC Connection [net.sf.log4jdbc.ConnectionSpy@5b1b34f1] will be managed by Spring
2024-03-04 12:58:56,703  INFO SQL(simplebot)        :  SELECT No as host, Name, 'preparation' as nqaUploadStatus
 from Account
		ORDER BY No
DEBUG: org.mybatis.spring.SqlSessionUtils - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@27bd332]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@27bd332]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@27bd332]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@27bd332]
04-Mar-2024 12:58:57.686 INFO [localhost-startStop-1] org.apache.catalina.startup.HostConfig.deployWAR Deployment of web application archive [/home/minds/maum/sds-builder/apache-tomcat-8.5.99/webapps/sds-builder.war] has finished in [5,621] ms
04-Mar-2024 12:58:57.686 INFO [localhost-startStop-1] org.apache.catalina.startup.HostConfig.deployDirectory Deploying web application directory [/home/minds/maum/sds-builder/apache-tomcat-8.5.99/webapps/examples]
04-Mar-2024 12:58:57.785 INFO [localhost-startStop-1] org.apache.catalina.startup.HostConfig.deployDirectory Deployment of web application directory [/home/minds/maum/sds-builder/apache-tomcat-8.5.99/webapps/examples] has finished in [99] ms
04-Mar-2024 12:58:57.785 INFO [localhost-startStop-1] org.apache.catalina.startup.HostConfig.deployDirectory Deploying web application directory [/home/minds/maum/sds-builder/apache-tomcat-8.5.99/webapps/manager]
04-Mar-2024 12:58:57.801 INFO [localhost-startStop-1] org.apache.catalina.startup.HostConfig.deployDirectory Deployment of web application directory [/home/minds/maum/sds-builder/apache-tomcat-8.5.99/webapps/manager] has finished in [16] ms
04-Mar-2024 12:58:57.801 INFO [localhost-startStop-1] org.apache.catalina.startup.HostConfig.deployDirectory Deploying web application directory [/home/minds/maum/sds-builder/apache-tomcat-8.5.99/webapps/host-manager]
04-Mar-2024 12:58:57.814 INFO [localhost-startStop-1] org.apache.catalina.startup.HostConfig.deployDirectory Deployment of web application directory [/home/minds/maum/sds-builder/apache-tomcat-8.5.99/webapps/host-manager] has finished in [13] ms
04-Mar-2024 12:58:57.814 INFO [localhost-startStop-1] org.apache.catalina.startup.HostConfig.deployDirectory Deploying web application directory [/home/minds/maum/sds-builder/apache-tomcat-8.5.99/webapps/docs]
04-Mar-2024 12:58:57.825 INFO [localhost-startStop-1] org.apache.catalina.startup.HostConfig.deployDirectory Deployment of web application directory [/home/minds/maum/sds-builder/apache-tomcat-8.5.99/webapps/docs] has finished in [11] ms
04-Mar-2024 12:58:57.830 INFO [main] org.apache.coyote.AbstractProtocol.start Starting ProtocolHandler ["http-nio-18090"]
04-Mar-2024 12:58:57.844 INFO [main] org.apache.catalina.startup.Catalina.start Server startup in 5848 ms
DEBUG: first.common.logger.LoggerAspect - Controller  	:  first.builder.controller.BuilderController.chatbotBuilderCommon()
DEBUG: first.common.logger.LoggerAspect - Controller  	:  first.builder.controller.BuilderController.getChatList()
DEBUG: first.common.logger.LoggerAspect - ServiceImpl  	:  first.builder.service.BuilderService.getChatbotList()
DEBUG: first.common.logger.LoggerAspect - DAO  		:  first.builder.dao.BuilderDAO.getChatbotList()
DEBUG: first.builder.dao.AbstractDAO - 	 QueryId  	:  builder.getChatbotList
DEBUG: org.mybatis.spring.SqlSessionUtils - Creating a new SqlSession
DEBUG: org.mybatis.spring.SqlSessionUtils - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@647c8021]
DEBUG: org.mybatis.spring.transaction.SpringManagedTransaction - JDBC Connection [net.sf.log4jdbc.ConnectionSpy@66ca9458] will be managed by Spring
2024-03-04 12:59:03,026  INFO SQL(simplebot)        :  SELECT  /* No, Name, Host, Language */
			*
		from Account WHERE 1=1
		AND No IN
		 
				 (  
					'1636'
				 ) 
			 

		 
		ORDER BY No
DEBUG: org.mybatis.spring.SqlSessionUtils - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@647c8021]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@647c8021]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@647c8021]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@647c8021]
DEBUG: first.common.logger.LoggerAspect - Controller  	:  first.builder.controller.BuilderController.builderContentsAnswer()
DEBUG: first.common.logger.LoggerAspect - Controller  	:  first.builder.controller.BuilderController.builderBottomAnswer()
DEBUG: first.common.logger.LoggerAspect - Controller  	:  first.builder.controller.BuilderController.getTask()
DEBUG: first.common.logger.LoggerAspect - ServiceImpl  	:  first.builder.service.BuilderService.getTaskCount()
DEBUG: first.common.logger.LoggerAspect - DAO  		:  first.builder.dao.BuilderDAO.getTaskCount()
DEBUG: first.builder.dao.AbstractDAO - 	 QueryId  	:  builder.getTaskCount
DEBUG: org.mybatis.spring.SqlSessionUtils - Creating a new SqlSession
DEBUG: org.mybatis.spring.SqlSessionUtils - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@660c873a]
DEBUG: org.mybatis.spring.transaction.SpringManagedTransaction - JDBC Connection [net.sf.log4jdbc.ConnectionSpy@1635e7eb] will be managed by Spring
2024-03-04 12:59:03,271  INFO SQL(simplebot)        :  SELECT COUNT(*) FROM Intent WHERE Account=1636
 and Language=1
DEBUG: org.mybatis.spring.SqlSessionUtils - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@660c873a]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@660c873a]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@660c873a]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@660c873a]
DEBUG: first.common.logger.LoggerAspect - ServiceImpl  	:  first.builder.service.BuilderService.getAnswerList()
DEBUG: first.common.logger.LoggerAspect - DAO  		:  first.builder.dao.BuilderDAO.getAnswerList()
DEBUG: first.builder.dao.AbstractDAO - 	 QueryId  	:  builder.getAnswerList
DEBUG: org.mybatis.spring.SqlSessionUtils - Creating a new SqlSession
DEBUG: org.mybatis.spring.SqlSessionUtils - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@26e1482b]
DEBUG: org.mybatis.spring.transaction.SpringManagedTransaction - JDBC Connection [net.sf.log4jdbc.ConnectionSpy@1f83d1f5] will be managed by Spring
2024-03-04 12:59:03,280  INFO SQL(simplebot)        :  SELECT I.No, I.Main, I.Name, A.answer, I.Account
		FROM Intent I LEFT OUTER JOIN Answer A
		ON I.Answer = A.No
		WHERE I.Account=1636
 and I.Language=1
		ORDER BY I.No
		OFFSET 0 ROWS
		FETCH NEXT 15 ROWS ONLY
DEBUG: first.common.logger.LoggerAspect - Controller  	:  first.builder.controller.BuilderController.getTask()
DEBUG: first.common.logger.LoggerAspect - ServiceImpl  	:  first.builder.service.BuilderService.getTaskCount()
DEBUG: first.common.logger.LoggerAspect - DAO  		:  first.builder.dao.BuilderDAO.getTaskCount()
DEBUG: org.mybatis.spring.SqlSessionUtils - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@26e1482b]
DEBUG: first.builder.dao.AbstractDAO - 	 QueryId  	:  builder.getTaskCount
DEBUG: org.mybatis.spring.SqlSessionUtils - Creating a new SqlSession
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@26e1482b]
DEBUG: org.mybatis.spring.SqlSessionUtils - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@21125c93]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@26e1482b]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@26e1482b]
DEBUG: org.mybatis.spring.transaction.SpringManagedTransaction - JDBC Connection [net.sf.log4jdbc.ConnectionSpy@43ac7889] will be managed by Spring
2024-03-04 12:59:03,294  INFO SQL(simplebot)        :  SELECT COUNT(*) FROM Intent WHERE Account=1636
 and Language=1
DEBUG: org.mybatis.spring.SqlSessionUtils - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@21125c93]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@21125c93]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@21125c93]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@21125c93]
DEBUG: first.common.logger.LoggerAspect - ServiceImpl  	:  first.builder.service.BuilderService.getAllIntents()
DEBUG: first.common.logger.LoggerAspect - DAO  		:  first.builder.dao.BuilderDAO.getAllIntents()
DEBUG: first.builder.dao.AbstractDAO - 	 QueryId  	:  builder.getAllIntents
DEBUG: org.mybatis.spring.SqlSessionUtils - Creating a new SqlSession
DEBUG: org.mybatis.spring.SqlSessionUtils - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1fece2d7]
DEBUG: org.mybatis.spring.transaction.SpringManagedTransaction - JDBC Connection [net.sf.log4jdbc.ConnectionSpy@50ad6e18] will be managed by Spring
DEBUG: first.common.logger.LoggerAspect - ServiceImpl  	:  first.builder.service.BuilderService.getAnswerList()
DEBUG: first.common.logger.LoggerAspect - DAO  		:  first.builder.dao.BuilderDAO.getAnswerList()
DEBUG: first.builder.dao.AbstractDAO - 	 QueryId  	:  builder.getAnswerList
DEBUG: org.mybatis.spring.SqlSessionUtils - Creating a new SqlSession
DEBUG: org.mybatis.spring.SqlSessionUtils - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1e9a6327]
2024-03-04 12:59:03,299  INFO SQL(simplebot)        :  SELECT I.No, I.Main, I.Name,I.Next, I.URL, I.Language
		FROM Intent I
		WHERE I.Account=1636
		ORDER BY I.No
DEBUG: org.mybatis.spring.transaction.SpringManagedTransaction - JDBC Connection [net.sf.log4jdbc.ConnectionSpy@108d35d2] will be managed by Spring
2024-03-04 12:59:03,299  INFO SQL(simplebot)        :  SELECT I.No, I.Main, I.Name, A.answer, I.Account
		FROM Intent I LEFT OUTER JOIN Answer A
		ON I.Answer = A.No
		WHERE I.Account=1636
 and I.Language=1
		ORDER BY I.No
		OFFSET 0 ROWS
		FETCH NEXT 15 ROWS ONLY
DEBUG: org.mybatis.spring.SqlSessionUtils - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1fece2d7]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1fece2d7]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1fece2d7]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1fece2d7]
DEBUG: org.mybatis.spring.SqlSessionUtils - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1e9a6327]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1e9a6327]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1e9a6327]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1e9a6327]
DEBUG: first.common.logger.LoggerAspect - ServiceImpl  	:  first.builder.service.BuilderService.getAllIntents()
DEBUG: first.common.logger.LoggerAspect - DAO  		:  first.builder.dao.BuilderDAO.getAllIntents()
DEBUG: first.builder.dao.AbstractDAO - 	 QueryId  	:  builder.getAllIntents
DEBUG: org.mybatis.spring.SqlSessionUtils - Creating a new SqlSession
DEBUG: org.mybatis.spring.SqlSessionUtils - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@a7dc0a3]
DEBUG: first.common.logger.LoggerAspect - ServiceImpl  	:  first.builder.service.BuilderService.getAllBertIntents()
DEBUG: org.mybatis.spring.transaction.SpringManagedTransaction - JDBC Connection [net.sf.log4jdbc.ConnectionSpy@171d529f] will be managed by Spring
DEBUG: first.common.logger.LoggerAspect - DAO  		:  first.builder.dao.BuilderDAO.getAllBertIntents()
DEBUG: first.builder.dao.AbstractDAO - 	 QueryId  	:  builder.getAllBertIntents
DEBUG: org.mybatis.spring.SqlSessionUtils - Creating a new SqlSession
DEBUG: org.mybatis.spring.SqlSessionUtils - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@19a2e31b]
2024-03-04 12:59:03,305  INFO SQL(simplebot)        :  SELECT I.No, I.Main, I.Name,I.Next, I.URL, I.Language
		FROM Intent I
		WHERE I.Account=1636
		ORDER BY I.No
DEBUG: org.mybatis.spring.transaction.SpringManagedTransaction - JDBC Connection [net.sf.log4jdbc.ConnectionSpy@3af43560] will be managed by Spring
2024-03-04 12:59:03,305  INFO SQL(simplebot)        :  SELECT B.No, B.Name, B.Language
		FROM BertIntent B LEFT OUTER JOIN BackendInfo BI
		ON B.BertItfId = BI.id
		WHERE BI.host=1636
		ORDER BY B.No
DEBUG: org.mybatis.spring.SqlSessionUtils - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@a7dc0a3]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@a7dc0a3]
DEBUG: org.mybatis.spring.SqlSessionUtils - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@19a2e31b]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@a7dc0a3]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@a7dc0a3]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@19a2e31b]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@19a2e31b]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@19a2e31b]
DEBUG: first.common.logger.LoggerAspect - ServiceImpl  	:  first.builder.service.BuilderService.getAllBertIntents()
DEBUG: first.common.logger.LoggerAspect - DAO  		:  first.builder.dao.BuilderDAO.getAllBertIntents()
DEBUG: first.builder.dao.AbstractDAO - 	 QueryId  	:  builder.getAllBertIntents
DEBUG: org.mybatis.spring.SqlSessionUtils - Creating a new SqlSession
DEBUG: org.mybatis.spring.SqlSessionUtils - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@5890d6bb]
DEBUG: org.mybatis.spring.transaction.SpringManagedTransaction - JDBC Connection [net.sf.log4jdbc.ConnectionSpy@1c0eda3e] will be managed by Spring
2024-03-04 12:59:03,310  INFO SQL(simplebot)        :  SELECT B.No, B.Name, B.Language
		FROM BertIntent B LEFT OUTER JOIN BackendInfo BI
		ON B.BertItfId = BI.id
		WHERE BI.host=1636
		ORDER BY B.No
DEBUG: org.mybatis.spring.SqlSessionUtils - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@5890d6bb]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@5890d6bb]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@5890d6bb]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@5890d6bb]
DEBUG: first.common.logger.LoggerAspect - Controller  	:  first.builder.controller.BuilderController.excelSampleDown()
DEBUG: first.common.logger.LoggerAspect - ServiceImpl  	:  first.builder.service.BuilderService.getChatLang()
DEBUG: first.common.logger.LoggerAspect - DAO  		:  first.builder.dao.BuilderDAO.getChatLang()
DEBUG: first.builder.dao.AbstractDAO - 	 QueryId  	:  builder.getChatLang
DEBUG: org.mybatis.spring.SqlSessionUtils - Creating a new SqlSession
DEBUG: org.mybatis.spring.SqlSessionUtils - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1971325a]
DEBUG: org.mybatis.spring.transaction.SpringManagedTransaction - JDBC Connection [net.sf.log4jdbc.ConnectionSpy@61eea861] will be managed by Spring
2024-03-04 12:59:06,958  INFO SQL(simplebot)        :  SELECT Language FROM Account WHERE No = '1636'
DEBUG: org.mybatis.spring.SqlSessionUtils - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1971325a]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1971325a]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1971325a]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1971325a]
04-Mar-2024 12:59:07.025 WARNING [http-nio-18090-exec-2] org.apache.coyote.http11.Http11Processor.prepareResponse The HTTP response header [Content-Disposition] with value [attachment;filename=TASK_ANSWER_샘플데이터.xlsx] has been removed from the response because it is invalid
	java.lang.IllegalArgumentException: The Unicode character [샘] at code point [49,368] cannot be encoded as it is outside the permitted range of 0 to 255
		at org.apache.tomcat.util.buf.MessageBytes.toBytesSimple(MessageBytes.java:310)
		at org.apache.tomcat.util.buf.MessageBytes.toBytes(MessageBytes.java:283)
		at org.apache.coyote.http11.Http11OutputBuffer.write(Http11OutputBuffer.java:438)
		at org.apache.coyote.http11.Http11OutputBuffer.sendHeader(Http11OutputBuffer.java:417)
		at org.apache.coyote.http11.Http11Processor.prepareResponse(Http11Processor.java:1269)
		at org.apache.coyote.AbstractProcessor.action(AbstractProcessor.java:380)
		at org.apache.coyote.Response.action(Response.java:206)
		at org.apache.coyote.Response.sendHeaders(Response.java:415)
		at org.apache.catalina.connector.OutputBuffer.doFlush(OutputBuffer.java:309)
		at org.apache.catalina.connector.OutputBuffer.flush(OutputBuffer.java:289)
		at org.apache.catalina.connector.CoyoteOutputStream.flush(CoyoteOutputStream.java:120)
		at org.apache.commons.compress.archivers.zip.ZipArchiveOutputStream.flush(ZipArchiveOutputStream.java:979)
		at java.io.FilterOutputStream.flush(FilterOutputStream.java:140)
		at com.sun.org.apache.xml.internal.serializer.WriterToUTF8Buffered.flush(WriterToUTF8Buffered.java:472)
		at com.sun.org.apache.xml.internal.serializer.ToStream.flushWriter(ToStream.java:290)
		at com.sun.org.apache.xml.internal.serializer.ToXMLStream.endDocument(ToXMLStream.java:213)
		at com.sun.org.apache.xml.internal.serializer.ToUnknownStream.endDocument(ToUnknownStream.java:829)
		at com.sun.org.apache.xalan.internal.xsltc.trax.DOM2TO.parse(DOM2TO.java:137)
		at com.sun.org.apache.xalan.internal.xsltc.trax.DOM2TO.parse(DOM2TO.java:96)
		at com.sun.org.apache.xalan.internal.xsltc.trax.TransformerImpl.transformIdentity(TransformerImpl.java:686)
		at com.sun.org.apache.xalan.internal.xsltc.trax.TransformerImpl.transform(TransformerImpl.java:730)
		at com.sun.org.apache.xalan.internal.xsltc.trax.TransformerImpl.transform(TransformerImpl.java:345)
		at org.apache.poi.openxml4j.opc.StreamHelper.saveXmlInStream(StreamHelper.java:84)
		at org.apache.poi.openxml4j.opc.internal.ZipContentTypeManager.saveImpl(ZipContentTypeManager.java:69)
		at org.apache.poi.openxml4j.opc.internal.ContentTypeManager.save(ContentTypeManager.java:449)
		at org.apache.poi.openxml4j.opc.ZipPackage.saveImpl(ZipPackage.java:518)
		at org.apache.poi.openxml4j.opc.OPCPackage.save(OPCPackage.java:1489)
		at org.apache.poi.ooxml.POIXMLDocument.write(POIXMLDocument.java:242)
		at first.builder.controller.BuilderController.excelSampleDown(BuilderController.java:1362)
		at first.builder.controller.BuilderController$$FastClassBySpringCGLIB$$c1e54596.invoke(<generated>)
		at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
		at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:736)
		at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:157)
		at org.springframework.aop.aspectj.MethodInvocationProceedingJoinPoint.proceed(MethodInvocationProceedingJoinPoint.java:84)
		at first.common.logger.LoggerAspect.logPrint(LoggerAspect.java:29)
		at sun.reflect.GeneratedMethodAccessor69.invoke(Unknown Source)
		at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
		at java.lang.reflect.Method.invoke(Method.java:498)
		at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:627)
		at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:616)
		at org.springframework.aop.aspectj.AspectJAroundAdvice.invoke(AspectJAroundAdvice.java:70)
		at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
		at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:92)
		at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
		at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:671)
		at first.builder.controller.BuilderController$$EnhancerBySpringCGLIB$$16f07cbd.excelSampleDown(<generated>)
		at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
		at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
		at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
		at java.lang.reflect.Method.invoke(Method.java:498)
		at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:205)
		at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:133)
		at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:97)
		at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:849)
		at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:760)
		at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:85)
		at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:967)
		at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:901)
		at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:970)
		at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:861)
		at javax.servlet.http.HttpServlet.service(HttpServlet.java:489)
		at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:846)
		at javax.servlet.http.HttpServlet.service(HttpServlet.java:583)
		at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:212)
		at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:156)
		at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
		at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:181)
		at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:156)
		at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:197)
		at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
		at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:181)
		at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:156)
		at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:168)
		at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
		at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:483)
		at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:130)
		at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
		at org.apache.catalina.valves.AbstractAccessLogValve.invoke(AbstractAccessLogValve.java:679)
		at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
		at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:346)
		at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:617)
		at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
		at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:934)
		at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1698)
		at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
		at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
		at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
		at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
		at java.lang.Thread.run(Thread.java:750)
04-Mar-2024 13:06:47.911 INFO [ContainerBackgroundProcessor[StandardEngine[Catalina]]] org.apache.catalina.startup.HostConfig.undeploy Undeploying context [/sds-builder]
04-Mar-2024 13:06:47.943 WARNING [ContainerBackgroundProcessor[StandardEngine[Catalina]]] org.apache.catalina.loader.WebappClassLoaderBase.clearReferencesJdbc The web application [sds-builder] registered the JDBC driver [com.mysql.jdbc.Driver] but failed to unregister it when the web application was stopped. To prevent a memory leak, the JDBC Driver has been forcibly unregistered.
04-Mar-2024 13:06:47.943 WARNING [ContainerBackgroundProcessor[StandardEngine[Catalina]]] org.apache.catalina.loader.WebappClassLoaderBase.clearReferencesJdbc The web application [sds-builder] registered the JDBC driver [net.sf.log4jdbc.DriverSpy] but failed to unregister it when the web application was stopped. To prevent a memory leak, the JDBC Driver has been forcibly unregistered.
04-Mar-2024 13:06:47.943 WARNING [ContainerBackgroundProcessor[StandardEngine[Catalina]]] org.apache.catalina.loader.WebappClassLoaderBase.clearReferencesJdbc The web application [sds-builder] registered the JDBC driver [com.microsoft.sqlserver.jdbc.SQLServerDriver] but failed to unregister it when the web application was stopped. To prevent a memory leak, the JDBC Driver has been forcibly unregistered.
04-Mar-2024 13:06:47.944 WARNING [ContainerBackgroundProcessor[StandardEngine[Catalina]]] org.apache.catalina.loader.WebappClassLoaderBase.clearReferencesThreads The web application [sds-builder] appears to have started a thread named [mysql-cj-abandoned-connection-cleanup] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 java.lang.Object.wait(Native Method)
 java.lang.ref.ReferenceQueue.remove(ReferenceQueue.java:144)
 com.mysql.jdbc.AbandonedConnectionCleanupThread.run(AbandonedConnectionCleanupThread.java:80)
 java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
 java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
 java.lang.Thread.run(Thread.java:750)
04-Mar-2024 13:06:47.988 INFO [localhost-startStop-2] org.apache.catalina.startup.HostConfig.deployWAR Deploying web application archive [/home/minds/maum/sds-builder/apache-tomcat-8.5.99/webapps/sds-builder.war]
04-Mar-2024 13:06:50.481 INFO [localhost-startStop-2] org.apache.jasper.servlet.TldScanner.scanJars At least one JAR was scanned for TLDs yet contained no TLDs. Enable debug logging for this logger for a complete list of JARs that were scanned but no TLDs were found in them. Skipping unneeded JARs during scanning can improve startup time and JSP compilation time.
DEBUG: org.mybatis.spring.SqlSessionFactoryBean - Property 'configuration' or 'configLocation' not specified, using default MyBatis Configuration
DEBUG: org.mybatis.spring.SqlSessionFactoryBean - Parsed mapper file: 'file [/home/minds/maum/sds-builder/apache-tomcat-8.5.99/webapps/sds-builder/WEB-INF/classes/mapper/maria/Chatbot/Builder_SQL.xml]'
DEBUG: org.mybatis.spring.SqlSessionFactoryBean - Parsed mapper file: 'file [/home/minds/maum/sds-builder/apache-tomcat-8.5.99/webapps/sds-builder/WEB-INF/classes/mapper/maria/Chatbot/MaumSDS_SQL.xml]'
DEBUG: org.mybatis.spring.SqlSessionFactoryBean - Property 'configuration' or 'configLocation' not specified, using default MyBatis Configuration
DEBUG: org.mybatis.spring.SqlSessionFactoryBean - Parsed mapper file: 'file [/home/minds/maum/sds-builder/apache-tomcat-8.5.99/webapps/sds-builder/WEB-INF/classes/mapper/maria/HAPPYCALL4/NQA_SQL.xml]'
DEBUG: org.mybatis.spring.SqlSessionFactoryBean - Parsed mapper file: 'file [/home/minds/maum/sds-builder/apache-tomcat-8.5.99/webapps/sds-builder/WEB-INF/classes/mapper/maria/HAPPYCALL4/SimpleBot_SQL.xml]'
SimpleBot Execution Environment : prod
SimpleBot BertIntent itfIP : 0
SimpleBot BertIntent nerIP : 0
SimpleBot BL IP : 125.132.250.244
SimpleBot CM IP : 121.133.247.250
SimpleBot M2U rest address : http://localhost:9990
SimpleBot Style Resources Path : /home/minds/maum/sds-builder/imgUpload
Default Resources Make : chatbot.css
Default Resources Make : chatbot_custom.css
Default Resources Make : chatbot_floating.css
Default Resources Make : IconImg
Default Resources Make : logoImg
Default Resources Make : default
Default Resources Make : mindslab
Default Resources Make : redtie
Default Resource constructed.
04-Mar-2024 13:06:51.951 INFO [mysql-cj-abandoned-connection-cleanup] org.apache.catalina.loader.WebappClassLoaderBase.checkStateForResourceLoading Illegal access: this web application instance has been stopped already. Could not load []. The following stack trace is thrown for debugging purposes as well as to attempt to terminate the thread which caused the illegal access.
	java.lang.IllegalStateException: Illegal access: this web application instance has been stopped already. Could not load []. The following stack trace is thrown for debugging purposes as well as to attempt to terminate the thread which caused the illegal access.
		at org.apache.catalina.loader.WebappClassLoaderBase.checkStateForResourceLoading(WebappClassLoaderBase.java:1358)
		at org.apache.catalina.loader.WebappClassLoaderBase.getResource(WebappClassLoaderBase.java:990)
		at com.mysql.jdbc.AbandonedConnectionCleanupThread.checkThreadContextClassLoader(AbandonedConnectionCleanupThread.java:112)
		at com.mysql.jdbc.AbandonedConnectionCleanupThread.run(AbandonedConnectionCleanupThread.java:79)
		at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
		at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
		at java.lang.Thread.run(Thread.java:750)
DEBUG: first.common.logger.LoggerAspect - ServiceImpl  	:  first.builder.service.BuilderService.getNqaStatusChatbotList()
DEBUG: first.common.logger.LoggerAspect - DAO  		:  first.builder.dao.BuilderDAO.getNqaStatusChatbotList()
DEBUG: first.builder.dao.AbstractDAO - 	 QueryId  	:  builder.getNqaStatusChatbotList
DEBUG: org.mybatis.spring.SqlSessionUtils - Creating a new SqlSession
DEBUG: org.mybatis.spring.SqlSessionUtils - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@9cd49bc]
DEBUG: org.mybatis.spring.transaction.SpringManagedTransaction - JDBC Connection [net.sf.log4jdbc.ConnectionSpy@4a692673] will be managed by Spring
2024-03-04 13:06:52,197  INFO SQL(simplebot)        :  SELECT No as host, Name, 'preparation' as nqaUploadStatus
 from Account
		ORDER BY No
DEBUG: org.mybatis.spring.SqlSessionUtils - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@9cd49bc]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@9cd49bc]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@9cd49bc]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@9cd49bc]
04-Mar-2024 13:06:53.102 INFO [localhost-startStop-2] org.apache.catalina.startup.HostConfig.deployWAR Deployment of web application archive [/home/minds/maum/sds-builder/apache-tomcat-8.5.99/webapps/sds-builder.war] has finished in [5,114] ms
DEBUG: first.common.logger.LoggerAspect - Controller  	:  first.builder.controller.BuilderController.chatbotBuilderCommon()
DEBUG: first.common.logger.LoggerAspect - Controller  	:  first.builder.controller.BuilderController.getChatList()
DEBUG: first.common.logger.LoggerAspect - ServiceImpl  	:  first.builder.service.BuilderService.getChatbotList()
DEBUG: first.common.logger.LoggerAspect - DAO  		:  first.builder.dao.BuilderDAO.getChatbotList()
DEBUG: first.builder.dao.AbstractDAO - 	 QueryId  	:  builder.getChatbotList
DEBUG: org.mybatis.spring.SqlSessionUtils - Creating a new SqlSession
DEBUG: org.mybatis.spring.SqlSessionUtils - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@450e608b]
DEBUG: org.mybatis.spring.transaction.SpringManagedTransaction - JDBC Connection [net.sf.log4jdbc.ConnectionSpy@1cd1caf0] will be managed by Spring
2024-03-04 13:07:27,222  INFO SQL(simplebot)        :  SELECT  /* No, Name, Host, Language */
			*
		from Account WHERE 1=1
		AND No IN
		 
				 (  
					'1636'
				 ) 
			 

		 
		ORDER BY No
DEBUG: org.mybatis.spring.SqlSessionUtils - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@450e608b]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@450e608b]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@450e608b]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@450e608b]
DEBUG: first.common.logger.LoggerAspect - Controller  	:  first.builder.controller.BuilderController.builderBottomAnswer()
DEBUG: first.common.logger.LoggerAspect - Controller  	:  first.builder.controller.BuilderController.builderContentsAnswer()
DEBUG: first.common.logger.LoggerAspect - Controller  	:  first.builder.controller.BuilderController.getTask()
DEBUG: first.common.logger.LoggerAspect - ServiceImpl  	:  first.builder.service.BuilderService.getTaskCount()
DEBUG: first.common.logger.LoggerAspect - DAO  		:  first.builder.dao.BuilderDAO.getTaskCount()
DEBUG: first.builder.dao.AbstractDAO - 	 QueryId  	:  builder.getTaskCount
DEBUG: org.mybatis.spring.SqlSessionUtils - Creating a new SqlSession
DEBUG: org.mybatis.spring.SqlSessionUtils - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@298271fa]
DEBUG: org.mybatis.spring.transaction.SpringManagedTransaction - JDBC Connection [net.sf.log4jdbc.ConnectionSpy@2c4bdfbd] will be managed by Spring
2024-03-04 13:07:27,422  INFO SQL(simplebot)        :  SELECT COUNT(*) FROM Intent WHERE Account=1636
 and Language=1
DEBUG: org.mybatis.spring.SqlSessionUtils - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@298271fa]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@298271fa]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@298271fa]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@298271fa]
DEBUG: first.common.logger.LoggerAspect - ServiceImpl  	:  first.builder.service.BuilderService.getAnswerList()
DEBUG: first.common.logger.LoggerAspect - DAO  		:  first.builder.dao.BuilderDAO.getAnswerList()
DEBUG: first.builder.dao.AbstractDAO - 	 QueryId  	:  builder.getAnswerList
DEBUG: org.mybatis.spring.SqlSessionUtils - Creating a new SqlSession
DEBUG: org.mybatis.spring.SqlSessionUtils - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@6be516c2]
DEBUG: org.mybatis.spring.transaction.SpringManagedTransaction - JDBC Connection [net.sf.log4jdbc.ConnectionSpy@4b703f73] will be managed by Spring
2024-03-04 13:07:27,427  INFO SQL(simplebot)        :  SELECT I.No, I.Main, I.Name, A.answer, I.Account
		FROM Intent I LEFT OUTER JOIN Answer A
		ON I.Answer = A.No
		WHERE I.Account=1636
 and I.Language=1
		ORDER BY I.No
		OFFSET 0 ROWS
		FETCH NEXT 15 ROWS ONLY
DEBUG: org.mybatis.spring.SqlSessionUtils - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@6be516c2]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@6be516c2]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@6be516c2]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@6be516c2]
DEBUG: first.common.logger.LoggerAspect - ServiceImpl  	:  first.builder.service.BuilderService.getAllIntents()
DEBUG: first.common.logger.LoggerAspect - DAO  		:  first.builder.dao.BuilderDAO.getAllIntents()
DEBUG: first.builder.dao.AbstractDAO - 	 QueryId  	:  builder.getAllIntents
DEBUG: org.mybatis.spring.SqlSessionUtils - Creating a new SqlSession
DEBUG: org.mybatis.spring.SqlSessionUtils - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@435d4973]
DEBUG: org.mybatis.spring.transaction.SpringManagedTransaction - JDBC Connection [net.sf.log4jdbc.ConnectionSpy@4de8e3b] will be managed by Spring
2024-03-04 13:07:27,436  INFO SQL(simplebot)        :  SELECT I.No, I.Main, I.Name,I.Next, I.URL, I.Language
		FROM Intent I
		WHERE I.Account=1636
		ORDER BY I.No
DEBUG: org.mybatis.spring.SqlSessionUtils - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@435d4973]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@435d4973]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@435d4973]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@435d4973]
DEBUG: first.common.logger.LoggerAspect - ServiceImpl  	:  first.builder.service.BuilderService.getAllBertIntents()
DEBUG: first.common.logger.LoggerAspect - DAO  		:  first.builder.dao.BuilderDAO.getAllBertIntents()
DEBUG: first.builder.dao.AbstractDAO - 	 QueryId  	:  builder.getAllBertIntents
DEBUG: org.mybatis.spring.SqlSessionUtils - Creating a new SqlSession
DEBUG: org.mybatis.spring.SqlSessionUtils - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@7617f9ca]
DEBUG: org.mybatis.spring.transaction.SpringManagedTransaction - JDBC Connection [net.sf.log4jdbc.ConnectionSpy@7a49a46c] will be managed by Spring
2024-03-04 13:07:27,440  INFO SQL(simplebot)        :  SELECT B.No, B.Name, B.Language
		FROM BertIntent B LEFT OUTER JOIN BackendInfo BI
		ON B.BertItfId = BI.id
		WHERE BI.host=1636
		ORDER BY B.No
DEBUG: org.mybatis.spring.SqlSessionUtils - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@7617f9ca]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@7617f9ca]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@7617f9ca]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@7617f9ca]
DEBUG: first.common.logger.LoggerAspect - Controller  	:  first.builder.controller.BuilderController.getTask()
DEBUG: first.common.logger.LoggerAspect - ServiceImpl  	:  first.builder.service.BuilderService.getTaskCount()
DEBUG: first.common.logger.LoggerAspect - DAO  		:  first.builder.dao.BuilderDAO.getTaskCount()
DEBUG: first.builder.dao.AbstractDAO - 	 QueryId  	:  builder.getTaskCount
DEBUG: org.mybatis.spring.SqlSessionUtils - Creating a new SqlSession
DEBUG: org.mybatis.spring.SqlSessionUtils - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@6819d073]
DEBUG: org.mybatis.spring.transaction.SpringManagedTransaction - JDBC Connection [net.sf.log4jdbc.ConnectionSpy@283ac216] will be managed by Spring
2024-03-04 13:07:27,449  INFO SQL(simplebot)        :  SELECT COUNT(*) FROM Intent WHERE Account=1636
 and Language=1
DEBUG: org.mybatis.spring.SqlSessionUtils - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@6819d073]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@6819d073]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@6819d073]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@6819d073]
DEBUG: first.common.logger.LoggerAspect - ServiceImpl  	:  first.builder.service.BuilderService.getAnswerList()
DEBUG: first.common.logger.LoggerAspect - DAO  		:  first.builder.dao.BuilderDAO.getAnswerList()
DEBUG: first.builder.dao.AbstractDAO - 	 QueryId  	:  builder.getAnswerList
DEBUG: org.mybatis.spring.SqlSessionUtils - Creating a new SqlSession
DEBUG: org.mybatis.spring.SqlSessionUtils - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@442f4478]
DEBUG: org.mybatis.spring.transaction.SpringManagedTransaction - JDBC Connection [net.sf.log4jdbc.ConnectionSpy@388c7be9] will be managed by Spring
2024-03-04 13:07:27,451  INFO SQL(simplebot)        :  SELECT I.No, I.Main, I.Name, A.answer, I.Account
		FROM Intent I LEFT OUTER JOIN Answer A
		ON I.Answer = A.No
		WHERE I.Account=1636
 and I.Language=1
		ORDER BY I.No
		OFFSET 0 ROWS
		FETCH NEXT 15 ROWS ONLY
DEBUG: org.mybatis.spring.SqlSessionUtils - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@442f4478]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@442f4478]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@442f4478]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@442f4478]
DEBUG: first.common.logger.LoggerAspect - ServiceImpl  	:  first.builder.service.BuilderService.getAllIntents()
DEBUG: first.common.logger.LoggerAspect - DAO  		:  first.builder.dao.BuilderDAO.getAllIntents()
DEBUG: first.builder.dao.AbstractDAO - 	 QueryId  	:  builder.getAllIntents
DEBUG: org.mybatis.spring.SqlSessionUtils - Creating a new SqlSession
DEBUG: org.mybatis.spring.SqlSessionUtils - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@6744fa06]
DEBUG: org.mybatis.spring.transaction.SpringManagedTransaction - JDBC Connection [net.sf.log4jdbc.ConnectionSpy@a5020cc] will be managed by Spring
2024-03-04 13:07:27,454  INFO SQL(simplebot)        :  SELECT I.No, I.Main, I.Name,I.Next, I.URL, I.Language
		FROM Intent I
		WHERE I.Account=1636
		ORDER BY I.No
DEBUG: org.mybatis.spring.SqlSessionUtils - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@6744fa06]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@6744fa06]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@6744fa06]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@6744fa06]
DEBUG: first.common.logger.LoggerAspect - ServiceImpl  	:  first.builder.service.BuilderService.getAllBertIntents()
DEBUG: first.common.logger.LoggerAspect - DAO  		:  first.builder.dao.BuilderDAO.getAllBertIntents()
DEBUG: first.builder.dao.AbstractDAO - 	 QueryId  	:  builder.getAllBertIntents
DEBUG: org.mybatis.spring.SqlSessionUtils - Creating a new SqlSession
DEBUG: org.mybatis.spring.SqlSessionUtils - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@4070cd3e]
DEBUG: org.mybatis.spring.transaction.SpringManagedTransaction - JDBC Connection [net.sf.log4jdbc.ConnectionSpy@5c2485cc] will be managed by Spring
2024-03-04 13:07:27,458  INFO SQL(simplebot)        :  SELECT B.No, B.Name, B.Language
		FROM BertIntent B LEFT OUTER JOIN BackendInfo BI
		ON B.BertItfId = BI.id
		WHERE BI.host=1636
		ORDER BY B.No
DEBUG: org.mybatis.spring.SqlSessionUtils - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@4070cd3e]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@4070cd3e]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@4070cd3e]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@4070cd3e]
DEBUG: first.common.logger.LoggerAspect - Controller  	:  first.builder.controller.BuilderController.excelSampleDown()
DEBUG: first.common.logger.LoggerAspect - ServiceImpl  	:  first.builder.service.BuilderService.getChatLang()
DEBUG: first.common.logger.LoggerAspect - DAO  		:  first.builder.dao.BuilderDAO.getChatLang()
DEBUG: first.builder.dao.AbstractDAO - 	 QueryId  	:  builder.getChatLang
DEBUG: org.mybatis.spring.SqlSessionUtils - Creating a new SqlSession
DEBUG: org.mybatis.spring.SqlSessionUtils - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@69a65920]
DEBUG: org.mybatis.spring.transaction.SpringManagedTransaction - JDBC Connection [net.sf.log4jdbc.ConnectionSpy@66b08ffb] will be managed by Spring
2024-03-04 13:07:33,193  INFO SQL(simplebot)        :  SELECT Language FROM Account WHERE No = '1636'
DEBUG: org.mybatis.spring.SqlSessionUtils - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@69a65920]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@69a65920]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@69a65920]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@69a65920]
04-Mar-2024 13:07:33.253 WARNING [http-nio-18090-exec-11] org.apache.coyote.http11.Http11Processor.prepareResponse The HTTP response header [Content-Disposition] with value [attachment;filename=[chatbot] TASK_ANSWER_샘플데이터.xlsx] has been removed from the response because it is invalid
	java.lang.IllegalArgumentException: The Unicode character [샘] at code point [49,368] cannot be encoded as it is outside the permitted range of 0 to 255
		at org.apache.tomcat.util.buf.MessageBytes.toBytesSimple(MessageBytes.java:310)
		at org.apache.tomcat.util.buf.MessageBytes.toBytes(MessageBytes.java:283)
		at org.apache.coyote.http11.Http11OutputBuffer.write(Http11OutputBuffer.java:438)
		at org.apache.coyote.http11.Http11OutputBuffer.sendHeader(Http11OutputBuffer.java:417)
		at org.apache.coyote.http11.Http11Processor.prepareResponse(Http11Processor.java:1269)
		at org.apache.coyote.AbstractProcessor.action(AbstractProcessor.java:380)
		at org.apache.coyote.Response.action(Response.java:206)
		at org.apache.coyote.Response.sendHeaders(Response.java:415)
		at org.apache.catalina.connector.OutputBuffer.doFlush(OutputBuffer.java:309)
		at org.apache.catalina.connector.OutputBuffer.flush(OutputBuffer.java:289)
		at org.apache.catalina.connector.CoyoteOutputStream.flush(CoyoteOutputStream.java:120)
		at org.apache.commons.compress.archivers.zip.ZipArchiveOutputStream.flush(ZipArchiveOutputStream.java:979)
		at java.io.FilterOutputStream.flush(FilterOutputStream.java:140)
		at com.sun.org.apache.xml.internal.serializer.WriterToUTF8Buffered.flush(WriterToUTF8Buffered.java:472)
		at com.sun.org.apache.xml.internal.serializer.ToStream.flushWriter(ToStream.java:290)
		at com.sun.org.apache.xml.internal.serializer.ToXMLStream.endDocument(ToXMLStream.java:213)
		at com.sun.org.apache.xml.internal.serializer.ToUnknownStream.endDocument(ToUnknownStream.java:829)
		at com.sun.org.apache.xalan.internal.xsltc.trax.DOM2TO.parse(DOM2TO.java:137)
		at com.sun.org.apache.xalan.internal.xsltc.trax.DOM2TO.parse(DOM2TO.java:96)
		at com.sun.org.apache.xalan.internal.xsltc.trax.TransformerImpl.transformIdentity(TransformerImpl.java:686)
		at com.sun.org.apache.xalan.internal.xsltc.trax.TransformerImpl.transform(TransformerImpl.java:730)
		at com.sun.org.apache.xalan.internal.xsltc.trax.TransformerImpl.transform(TransformerImpl.java:345)
		at org.apache.poi.openxml4j.opc.StreamHelper.saveXmlInStream(StreamHelper.java:84)
		at org.apache.poi.openxml4j.opc.internal.ZipContentTypeManager.saveImpl(ZipContentTypeManager.java:69)
		at org.apache.poi.openxml4j.opc.internal.ContentTypeManager.save(ContentTypeManager.java:449)
		at org.apache.poi.openxml4j.opc.ZipPackage.saveImpl(ZipPackage.java:518)
		at org.apache.poi.openxml4j.opc.OPCPackage.save(OPCPackage.java:1489)
		at org.apache.poi.ooxml.POIXMLDocument.write(POIXMLDocument.java:242)
		at first.builder.controller.BuilderController.excelSampleDown(BuilderController.java:1362)
		at first.builder.controller.BuilderController$$FastClassBySpringCGLIB$$c1e54596.invoke(<generated>)
		at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
		at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:736)
		at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:157)
		at org.springframework.aop.aspectj.MethodInvocationProceedingJoinPoint.proceed(MethodInvocationProceedingJoinPoint.java:84)
		at first.common.logger.LoggerAspect.logPrint(LoggerAspect.java:29)
		at sun.reflect.GeneratedMethodAccessor95.invoke(Unknown Source)
		at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
		at java.lang.reflect.Method.invoke(Method.java:498)
		at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:627)
		at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:616)
		at org.springframework.aop.aspectj.AspectJAroundAdvice.invoke(AspectJAroundAdvice.java:70)
		at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
		at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:92)
		at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
		at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:671)
		at first.builder.controller.BuilderController$$EnhancerBySpringCGLIB$$6f6232f6.excelSampleDown(<generated>)
		at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
		at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
		at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
		at java.lang.reflect.Method.invoke(Method.java:498)
		at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:205)
		at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:133)
		at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:97)
		at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:849)
		at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:760)
		at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:85)
		at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:967)
		at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:901)
		at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:970)
		at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:861)
		at javax.servlet.http.HttpServlet.service(HttpServlet.java:489)
		at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:846)
		at javax.servlet.http.HttpServlet.service(HttpServlet.java:583)
		at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:212)
		at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:156)
		at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
		at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:181)
		at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:156)
		at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:197)
		at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
		at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:181)
		at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:156)
		at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:168)
		at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
		at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:483)
		at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:130)
		at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
		at org.apache.catalina.valves.AbstractAccessLogValve.invoke(AbstractAccessLogValve.java:679)
		at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
		at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:346)
		at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:617)
		at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
		at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:934)
		at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1698)
		at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
		at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
		at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
		at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
		at java.lang.Thread.run(Thread.java:750)
04-Mar-2024 13:09:13.131 INFO [ContainerBackgroundProcessor[StandardEngine[Catalina]]] org.apache.catalina.startup.HostConfig.undeploy Undeploying context [/sds-builder]
04-Mar-2024 13:09:13.147 WARNING [ContainerBackgroundProcessor[StandardEngine[Catalina]]] org.apache.catalina.loader.WebappClassLoaderBase.clearReferencesJdbc The web application [sds-builder] registered the JDBC driver [com.mysql.jdbc.Driver] but failed to unregister it when the web application was stopped. To prevent a memory leak, the JDBC Driver has been forcibly unregistered.
04-Mar-2024 13:09:13.147 WARNING [ContainerBackgroundProcessor[StandardEngine[Catalina]]] org.apache.catalina.loader.WebappClassLoaderBase.clearReferencesJdbc The web application [sds-builder] registered the JDBC driver [net.sf.log4jdbc.DriverSpy] but failed to unregister it when the web application was stopped. To prevent a memory leak, the JDBC Driver has been forcibly unregistered.
04-Mar-2024 13:09:13.147 WARNING [ContainerBackgroundProcessor[StandardEngine[Catalina]]] org.apache.catalina.loader.WebappClassLoaderBase.clearReferencesJdbc The web application [sds-builder] registered the JDBC driver [com.microsoft.sqlserver.jdbc.SQLServerDriver] but failed to unregister it when the web application was stopped. To prevent a memory leak, the JDBC Driver has been forcibly unregistered.
04-Mar-2024 13:09:13.148 WARNING [ContainerBackgroundProcessor[StandardEngine[Catalina]]] org.apache.catalina.loader.WebappClassLoaderBase.clearReferencesThreads The web application [sds-builder] appears to have started a thread named [mysql-cj-abandoned-connection-cleanup] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 java.lang.Object.wait(Native Method)
 java.lang.ref.ReferenceQueue.remove(ReferenceQueue.java:144)
 com.mysql.jdbc.AbandonedConnectionCleanupThread.run(AbandonedConnectionCleanupThread.java:80)
 java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
 java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
 java.lang.Thread.run(Thread.java:750)
04-Mar-2024 13:09:13.215 INFO [localhost-startStop-3] org.apache.catalina.startup.HostConfig.deployWAR Deploying web application archive [/home/minds/maum/sds-builder/apache-tomcat-8.5.99/webapps/sds-builder.war]
04-Mar-2024 13:09:15.003 INFO [mysql-cj-abandoned-connection-cleanup] org.apache.catalina.loader.WebappClassLoaderBase.checkStateForResourceLoading Illegal access: this web application instance has been stopped already. Could not load []. The following stack trace is thrown for debugging purposes as well as to attempt to terminate the thread which caused the illegal access.
	java.lang.IllegalStateException: Illegal access: this web application instance has been stopped already. Could not load []. The following stack trace is thrown for debugging purposes as well as to attempt to terminate the thread which caused the illegal access.
		at org.apache.catalina.loader.WebappClassLoaderBase.checkStateForResourceLoading(WebappClassLoaderBase.java:1358)
		at org.apache.catalina.loader.WebappClassLoaderBase.getResource(WebappClassLoaderBase.java:990)
		at com.mysql.jdbc.AbandonedConnectionCleanupThread.checkThreadContextClassLoader(AbandonedConnectionCleanupThread.java:112)
		at com.mysql.jdbc.AbandonedConnectionCleanupThread.run(AbandonedConnectionCleanupThread.java:79)
		at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
		at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
		at java.lang.Thread.run(Thread.java:750)
04-Mar-2024 13:09:15.004 INFO [mysql-cj-abandoned-connection-cleanup] org.apache.catalina.loader.WebappClassLoaderBase.checkStateForResourceLoading Illegal access: this web application instance has been stopped already. Could not load []. The following stack trace is thrown for debugging purposes as well as to attempt to terminate the thread which caused the illegal access.
	java.lang.IllegalStateException: Illegal access: this web application instance has been stopped already. Could not load []. The following stack trace is thrown for debugging purposes as well as to attempt to terminate the thread which caused the illegal access.
		at org.apache.catalina.loader.WebappClassLoaderBase.checkStateForResourceLoading(WebappClassLoaderBase.java:1358)
		at org.apache.catalina.loader.WebappClassLoaderBase.getResource(WebappClassLoaderBase.java:990)
		at com.mysql.jdbc.AbandonedConnectionCleanupThread.checkThreadContextClassLoader(AbandonedConnectionCleanupThread.java:112)
		at com.mysql.jdbc.AbandonedConnectionCleanupThread.run(AbandonedConnectionCleanupThread.java:79)
		at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
		at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
		at java.lang.Thread.run(Thread.java:750)
04-Mar-2024 13:09:15.005 INFO [mysql-cj-abandoned-connection-cleanup] org.apache.catalina.loader.WebappClassLoaderBase.checkStateForResourceLoading Illegal access: this web application instance has been stopped already. Could not load []. The following stack trace is thrown for debugging purposes as well as to attempt to terminate the thread which caused the illegal access.
	java.lang.IllegalStateException: Illegal access: this web application instance has been stopped already. Could not load []. The following stack trace is thrown for debugging purposes as well as to attempt to terminate the thread which caused the illegal access.
		at org.apache.catalina.loader.WebappClassLoaderBase.checkStateForResourceLoading(WebappClassLoaderBase.java:1358)
		at org.apache.catalina.loader.WebappClassLoaderBase.getResource(WebappClassLoaderBase.java:990)
		at com.mysql.jdbc.AbandonedConnectionCleanupThread.checkThreadContextClassLoader(AbandonedConnectionCleanupThread.java:112)
		at com.mysql.jdbc.AbandonedConnectionCleanupThread.run(AbandonedConnectionCleanupThread.java:79)
		at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
		at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
		at java.lang.Thread.run(Thread.java:750)
04-Mar-2024 13:09:15.005 INFO [mysql-cj-abandoned-connection-cleanup] org.apache.catalina.loader.WebappClassLoaderBase.checkStateForResourceLoading Illegal access: this web application instance has been stopped already. Could not load []. The following stack trace is thrown for debugging purposes as well as to attempt to terminate the thread which caused the illegal access.
	java.lang.IllegalStateException: Illegal access: this web application instance has been stopped already. Could not load []. The following stack trace is thrown for debugging purposes as well as to attempt to terminate the thread which caused the illegal access.
		at org.apache.catalina.loader.WebappClassLoaderBase.checkStateForResourceLoading(WebappClassLoaderBase.java:1358)
		at org.apache.catalina.loader.WebappClassLoaderBase.getResource(WebappClassLoaderBase.java:990)
		at com.mysql.jdbc.AbandonedConnectionCleanupThread.checkThreadContextClassLoader(AbandonedConnectionCleanupThread.java:112)
		at com.mysql.jdbc.AbandonedConnectionCleanupThread.run(AbandonedConnectionCleanupThread.java:79)
		at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
		at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
		at java.lang.Thread.run(Thread.java:750)
04-Mar-2024 13:09:15.515 INFO [localhost-startStop-3] org.apache.jasper.servlet.TldScanner.scanJars At least one JAR was scanned for TLDs yet contained no TLDs. Enable debug logging for this logger for a complete list of JARs that were scanned but no TLDs were found in them. Skipping unneeded JARs during scanning can improve startup time and JSP compilation time.
DEBUG: org.mybatis.spring.SqlSessionFactoryBean - Property 'configuration' or 'configLocation' not specified, using default MyBatis Configuration
DEBUG: org.mybatis.spring.SqlSessionFactoryBean - Parsed mapper file: 'file [/home/minds/maum/sds-builder/apache-tomcat-8.5.99/webapps/sds-builder/WEB-INF/classes/mapper/maria/Chatbot/Builder_SQL.xml]'
DEBUG: org.mybatis.spring.SqlSessionFactoryBean - Parsed mapper file: 'file [/home/minds/maum/sds-builder/apache-tomcat-8.5.99/webapps/sds-builder/WEB-INF/classes/mapper/maria/Chatbot/MaumSDS_SQL.xml]'
DEBUG: org.mybatis.spring.SqlSessionFactoryBean - Property 'configuration' or 'configLocation' not specified, using default MyBatis Configuration
DEBUG: org.mybatis.spring.SqlSessionFactoryBean - Parsed mapper file: 'file [/home/minds/maum/sds-builder/apache-tomcat-8.5.99/webapps/sds-builder/WEB-INF/classes/mapper/maria/HAPPYCALL4/NQA_SQL.xml]'
DEBUG: org.mybatis.spring.SqlSessionFactoryBean - Parsed mapper file: 'file [/home/minds/maum/sds-builder/apache-tomcat-8.5.99/webapps/sds-builder/WEB-INF/classes/mapper/maria/HAPPYCALL4/SimpleBot_SQL.xml]'
SimpleBot Execution Environment : prod
SimpleBot BertIntent itfIP : 0
SimpleBot BertIntent nerIP : 0
SimpleBot BL IP : 125.132.250.244
SimpleBot CM IP : 121.133.247.250
SimpleBot M2U rest address : http://localhost:9990
SimpleBot Style Resources Path : /home/minds/maum/sds-builder/imgUpload
Default Resources Make : chatbot.css
Default Resources Make : chatbot_custom.css
Default Resources Make : chatbot_floating.css
Default Resources Make : IconImg
Default Resources Make : logoImg
Default Resources Make : default
Default Resources Make : mindslab
Default Resources Make : redtie
Default Resource constructed.
DEBUG: first.common.logger.LoggerAspect - ServiceImpl  	:  first.builder.service.BuilderService.getNqaStatusChatbotList()
DEBUG: first.common.logger.LoggerAspect - DAO  		:  first.builder.dao.BuilderDAO.getNqaStatusChatbotList()
DEBUG: first.builder.dao.AbstractDAO - 	 QueryId  	:  builder.getNqaStatusChatbotList
DEBUG: org.mybatis.spring.SqlSessionUtils - Creating a new SqlSession
DEBUG: org.mybatis.spring.SqlSessionUtils - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@137249ff]
DEBUG: org.mybatis.spring.transaction.SpringManagedTransaction - JDBC Connection [net.sf.log4jdbc.ConnectionSpy@54c8eb22] will be managed by Spring
2024-03-04 13:09:17,083  INFO SQL(simplebot)        :  SELECT No as host, Name, 'preparation' as nqaUploadStatus
 from Account
		ORDER BY No
DEBUG: org.mybatis.spring.SqlSessionUtils - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@137249ff]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@137249ff]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@137249ff]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@137249ff]
04-Mar-2024 13:09:18.004 INFO [localhost-startStop-3] org.apache.catalina.startup.HostConfig.deployWAR Deployment of web application archive [/home/minds/maum/sds-builder/apache-tomcat-8.5.99/webapps/sds-builder.war] has finished in [4,789] ms
DEBUG: first.common.logger.LoggerAspect - Controller  	:  first.builder.controller.BuilderController.chatbotBuilderCommon()
DEBUG: first.common.logger.LoggerAspect - Controller  	:  first.builder.controller.BuilderController.getChatList()
DEBUG: first.common.logger.LoggerAspect - ServiceImpl  	:  first.builder.service.BuilderService.getChatbotList()
DEBUG: first.common.logger.LoggerAspect - DAO  		:  first.builder.dao.BuilderDAO.getChatbotList()
DEBUG: first.builder.dao.AbstractDAO - 	 QueryId  	:  builder.getChatbotList
DEBUG: org.mybatis.spring.SqlSessionUtils - Creating a new SqlSession
DEBUG: org.mybatis.spring.SqlSessionUtils - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@4ab0fd7d]
DEBUG: org.mybatis.spring.transaction.SpringManagedTransaction - JDBC Connection [net.sf.log4jdbc.ConnectionSpy@3b2129b8] will be managed by Spring
2024-03-04 13:09:37,152  INFO SQL(simplebot)        :  SELECT  /* No, Name, Host, Language */
			*
		from Account WHERE 1=1
		AND No IN
		 
				 (  
					'1636'
				 ) 
			 

		 
		ORDER BY No
DEBUG: org.mybatis.spring.SqlSessionUtils - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@4ab0fd7d]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@4ab0fd7d]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@4ab0fd7d]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@4ab0fd7d]
DEBUG: first.common.logger.LoggerAspect - Controller  	:  first.builder.controller.BuilderController.builderBottomAnswer()
DEBUG: first.common.logger.LoggerAspect - Controller  	:  first.builder.controller.BuilderController.builderContentsAnswer()
DEBUG: first.common.logger.LoggerAspect - Controller  	:  first.builder.controller.BuilderController.getTask()
DEBUG: first.common.logger.LoggerAspect - ServiceImpl  	:  first.builder.service.BuilderService.getTaskCount()
DEBUG: first.common.logger.LoggerAspect - DAO  		:  first.builder.dao.BuilderDAO.getTaskCount()
DEBUG: first.builder.dao.AbstractDAO - 	 QueryId  	:  builder.getTaskCount
DEBUG: org.mybatis.spring.SqlSessionUtils - Creating a new SqlSession
DEBUG: org.mybatis.spring.SqlSessionUtils - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@3e711434]
DEBUG: org.mybatis.spring.transaction.SpringManagedTransaction - JDBC Connection [net.sf.log4jdbc.ConnectionSpy@73f29ef5] will be managed by Spring
2024-03-04 13:09:37,346  INFO SQL(simplebot)        :  SELECT COUNT(*) FROM Intent WHERE Account=1636
 and Language=1
DEBUG: org.mybatis.spring.SqlSessionUtils - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@3e711434]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@3e711434]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@3e711434]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@3e711434]
DEBUG: first.common.logger.LoggerAspect - ServiceImpl  	:  first.builder.service.BuilderService.getAnswerList()
DEBUG: first.common.logger.LoggerAspect - DAO  		:  first.builder.dao.BuilderDAO.getAnswerList()
DEBUG: first.builder.dao.AbstractDAO - 	 QueryId  	:  builder.getAnswerList
DEBUG: org.mybatis.spring.SqlSessionUtils - Creating a new SqlSession
DEBUG: org.mybatis.spring.SqlSessionUtils - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@27100423]
DEBUG: org.mybatis.spring.transaction.SpringManagedTransaction - JDBC Connection [net.sf.log4jdbc.ConnectionSpy@266bb1c7] will be managed by Spring
2024-03-04 13:09:37,354  INFO SQL(simplebot)        :  SELECT I.No, I.Main, I.Name, A.answer, I.Account
		FROM Intent I LEFT OUTER JOIN Answer A
		ON I.Answer = A.No
		WHERE I.Account=1636
 and I.Language=1
		ORDER BY I.No
		OFFSET 0 ROWS
		FETCH NEXT 15 ROWS ONLY
DEBUG: org.mybatis.spring.SqlSessionUtils - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@27100423]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@27100423]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@27100423]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@27100423]
DEBUG: first.common.logger.LoggerAspect - Controller  	:  first.builder.controller.BuilderController.getTask()
DEBUG: first.common.logger.LoggerAspect - ServiceImpl  	:  first.builder.service.BuilderService.getTaskCount()
DEBUG: first.common.logger.LoggerAspect - DAO  		:  first.builder.dao.BuilderDAO.getTaskCount()
DEBUG: first.builder.dao.AbstractDAO - 	 QueryId  	:  builder.getTaskCount
DEBUG: org.mybatis.spring.SqlSessionUtils - Creating a new SqlSession
DEBUG: org.mybatis.spring.SqlSessionUtils - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@b55a893]
DEBUG: org.mybatis.spring.transaction.SpringManagedTransaction - JDBC Connection [net.sf.log4jdbc.ConnectionSpy@6b39ea4c] will be managed by Spring
2024-03-04 13:09:37,365  INFO SQL(simplebot)        :  SELECT COUNT(*) FROM Intent WHERE Account=1636
 and Language=1
DEBUG: org.mybatis.spring.SqlSessionUtils - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@b55a893]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@b55a893]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@b55a893]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@b55a893]
DEBUG: first.common.logger.LoggerAspect - ServiceImpl  	:  first.builder.service.BuilderService.getAllIntents()
DEBUG: first.common.logger.LoggerAspect - DAO  		:  first.builder.dao.BuilderDAO.getAllIntents()
DEBUG: first.builder.dao.AbstractDAO - 	 QueryId  	:  builder.getAllIntents
DEBUG: org.mybatis.spring.SqlSessionUtils - Creating a new SqlSession
DEBUG: org.mybatis.spring.SqlSessionUtils - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@67df5395]
DEBUG: org.mybatis.spring.transaction.SpringManagedTransaction - JDBC Connection [net.sf.log4jdbc.ConnectionSpy@483266a] will be managed by Spring
2024-03-04 13:09:37,371  INFO SQL(simplebot)        :  SELECT I.No, I.Main, I.Name,I.Next, I.URL, I.Language
		FROM Intent I
		WHERE I.Account=1636
		ORDER BY I.No
DEBUG: org.mybatis.spring.SqlSessionUtils - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@67df5395]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@67df5395]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@67df5395]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@67df5395]
DEBUG: first.common.logger.LoggerAspect - ServiceImpl  	:  first.builder.service.BuilderService.getAnswerList()
DEBUG: first.common.logger.LoggerAspect - DAO  		:  first.builder.dao.BuilderDAO.getAnswerList()
DEBUG: first.builder.dao.AbstractDAO - 	 QueryId  	:  builder.getAnswerList
DEBUG: org.mybatis.spring.SqlSessionUtils - Creating a new SqlSession
DEBUG: org.mybatis.spring.SqlSessionUtils - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@79a53127]
DEBUG: org.mybatis.spring.transaction.SpringManagedTransaction - JDBC Connection [net.sf.log4jdbc.ConnectionSpy@38f0f622] will be managed by Spring
2024-03-04 13:09:37,375  INFO SQL(simplebot)        :  SELECT I.No, I.Main, I.Name, A.answer, I.Account
		FROM Intent I LEFT OUTER JOIN Answer A
		ON I.Answer = A.No
		WHERE I.Account=1636
 and I.Language=1
		ORDER BY I.No
		OFFSET 0 ROWS
		FETCH NEXT 15 ROWS ONLY
DEBUG: first.common.logger.LoggerAspect - ServiceImpl  	:  first.builder.service.BuilderService.getAllBertIntents()
DEBUG: first.common.logger.LoggerAspect - DAO  		:  first.builder.dao.BuilderDAO.getAllBertIntents()
DEBUG: first.builder.dao.AbstractDAO - 	 QueryId  	:  builder.getAllBertIntents
DEBUG: org.mybatis.spring.SqlSessionUtils - Creating a new SqlSession
DEBUG: org.mybatis.spring.SqlSessionUtils - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@6177b135]
DEBUG: org.mybatis.spring.transaction.SpringManagedTransaction - JDBC Connection [net.sf.log4jdbc.ConnectionSpy@7003b983] will be managed by Spring
2024-03-04 13:09:37,376  INFO SQL(simplebot)        :  SELECT B.No, B.Name, B.Language
		FROM BertIntent B LEFT OUTER JOIN BackendInfo BI
		ON B.BertItfId = BI.id
		WHERE BI.host=1636
		ORDER BY B.No
DEBUG: org.mybatis.spring.SqlSessionUtils - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@79a53127]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@79a53127]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@79a53127]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@79a53127]
DEBUG: org.mybatis.spring.SqlSessionUtils - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@6177b135]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@6177b135]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@6177b135]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@6177b135]
DEBUG: first.common.logger.LoggerAspect - ServiceImpl  	:  first.builder.service.BuilderService.getAllIntents()
DEBUG: first.common.logger.LoggerAspect - DAO  		:  first.builder.dao.BuilderDAO.getAllIntents()
DEBUG: first.builder.dao.AbstractDAO - 	 QueryId  	:  builder.getAllIntents
DEBUG: org.mybatis.spring.SqlSessionUtils - Creating a new SqlSession
DEBUG: org.mybatis.spring.SqlSessionUtils - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@77d537d9]
DEBUG: org.mybatis.spring.transaction.SpringManagedTransaction - JDBC Connection [net.sf.log4jdbc.ConnectionSpy@7afdcdbd] will be managed by Spring
2024-03-04 13:09:37,381  INFO SQL(simplebot)        :  SELECT I.No, I.Main, I.Name,I.Next, I.URL, I.Language
		FROM Intent I
		WHERE I.Account=1636
		ORDER BY I.No
DEBUG: org.mybatis.spring.SqlSessionUtils - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@77d537d9]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@77d537d9]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@77d537d9]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@77d537d9]
DEBUG: first.common.logger.LoggerAspect - ServiceImpl  	:  first.builder.service.BuilderService.getAllBertIntents()
DEBUG: first.common.logger.LoggerAspect - DAO  		:  first.builder.dao.BuilderDAO.getAllBertIntents()
DEBUG: first.builder.dao.AbstractDAO - 	 QueryId  	:  builder.getAllBertIntents
DEBUG: org.mybatis.spring.SqlSessionUtils - Creating a new SqlSession
DEBUG: org.mybatis.spring.SqlSessionUtils - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@413cbaf6]
DEBUG: org.mybatis.spring.transaction.SpringManagedTransaction - JDBC Connection [net.sf.log4jdbc.ConnectionSpy@121633a3] will be managed by Spring
2024-03-04 13:09:37,386  INFO SQL(simplebot)        :  SELECT B.No, B.Name, B.Language
		FROM BertIntent B LEFT OUTER JOIN BackendInfo BI
		ON B.BertItfId = BI.id
		WHERE BI.host=1636
		ORDER BY B.No
DEBUG: org.mybatis.spring.SqlSessionUtils - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@413cbaf6]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@413cbaf6]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@413cbaf6]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@413cbaf6]
DEBUG: first.common.logger.LoggerAspect - Controller  	:  first.builder.controller.BuilderController.excelSampleDown()
DEBUG: first.common.logger.LoggerAspect - ServiceImpl  	:  first.builder.service.BuilderService.getChatLang()
DEBUG: first.common.logger.LoggerAspect - DAO  		:  first.builder.dao.BuilderDAO.getChatLang()
DEBUG: first.builder.dao.AbstractDAO - 	 QueryId  	:  builder.getChatLang
DEBUG: org.mybatis.spring.SqlSessionUtils - Creating a new SqlSession
DEBUG: org.mybatis.spring.SqlSessionUtils - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@72d7395e]
DEBUG: org.mybatis.spring.transaction.SpringManagedTransaction - JDBC Connection [net.sf.log4jdbc.ConnectionSpy@203be1b6] will be managed by Spring
2024-03-04 13:09:42,105  INFO SQL(simplebot)        :  SELECT Language FROM Account WHERE No = '1636'
DEBUG: org.mybatis.spring.SqlSessionUtils - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@72d7395e]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@72d7395e]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@72d7395e]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@72d7395e]
04-Mar-2024 13:09:42.172 WARNING [http-nio-18090-exec-9] org.apache.coyote.http11.Http11Processor.prepareResponse The HTTP response header [Content-Disposition] with value [attachment;filename=[chatbot] TASK_ANSWER_샘플데이터.xlsx] has been removed from the response because it is invalid
	java.lang.IllegalArgumentException: The Unicode character [샘] at code point [49,368] cannot be encoded as it is outside the permitted range of 0 to 255
		at org.apache.tomcat.util.buf.MessageBytes.toBytesSimple(MessageBytes.java:310)
		at org.apache.tomcat.util.buf.MessageBytes.toBytes(MessageBytes.java:283)
		at org.apache.coyote.http11.Http11OutputBuffer.write(Http11OutputBuffer.java:438)
		at org.apache.coyote.http11.Http11OutputBuffer.sendHeader(Http11OutputBuffer.java:417)
		at org.apache.coyote.http11.Http11Processor.prepareResponse(Http11Processor.java:1269)
		at org.apache.coyote.AbstractProcessor.action(AbstractProcessor.java:380)
		at org.apache.coyote.Response.action(Response.java:206)
		at org.apache.coyote.Response.sendHeaders(Response.java:415)
		at org.apache.catalina.connector.OutputBuffer.doFlush(OutputBuffer.java:309)
		at org.apache.catalina.connector.OutputBuffer.flush(OutputBuffer.java:289)
		at org.apache.catalina.connector.CoyoteOutputStream.flush(CoyoteOutputStream.java:120)
		at org.apache.commons.compress.archivers.zip.ZipArchiveOutputStream.flush(ZipArchiveOutputStream.java:979)
		at java.io.FilterOutputStream.flush(FilterOutputStream.java:140)
		at com.sun.org.apache.xml.internal.serializer.WriterToUTF8Buffered.flush(WriterToUTF8Buffered.java:472)
		at com.sun.org.apache.xml.internal.serializer.ToStream.flushWriter(ToStream.java:290)
		at com.sun.org.apache.xml.internal.serializer.ToXMLStream.endDocument(ToXMLStream.java:213)
		at com.sun.org.apache.xml.internal.serializer.ToUnknownStream.endDocument(ToUnknownStream.java:829)
		at com.sun.org.apache.xalan.internal.xsltc.trax.DOM2TO.parse(DOM2TO.java:137)
		at com.sun.org.apache.xalan.internal.xsltc.trax.DOM2TO.parse(DOM2TO.java:96)
		at com.sun.org.apache.xalan.internal.xsltc.trax.TransformerImpl.transformIdentity(TransformerImpl.java:686)
		at com.sun.org.apache.xalan.internal.xsltc.trax.TransformerImpl.transform(TransformerImpl.java:730)
		at com.sun.org.apache.xalan.internal.xsltc.trax.TransformerImpl.transform(TransformerImpl.java:345)
		at org.apache.poi.openxml4j.opc.StreamHelper.saveXmlInStream(StreamHelper.java:84)
		at org.apache.poi.openxml4j.opc.internal.ZipContentTypeManager.saveImpl(ZipContentTypeManager.java:69)
		at org.apache.poi.openxml4j.opc.internal.ContentTypeManager.save(ContentTypeManager.java:449)
		at org.apache.poi.openxml4j.opc.ZipPackage.saveImpl(ZipPackage.java:518)
		at org.apache.poi.openxml4j.opc.OPCPackage.save(OPCPackage.java:1489)
		at org.apache.poi.ooxml.POIXMLDocument.write(POIXMLDocument.java:242)
		at first.builder.controller.BuilderController.excelSampleDown(BuilderController.java:1362)
		at first.builder.controller.BuilderController$$FastClassBySpringCGLIB$$c1e54596.invoke(<generated>)
		at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
		at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:736)
		at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:157)
		at org.springframework.aop.aspectj.MethodInvocationProceedingJoinPoint.proceed(MethodInvocationProceedingJoinPoint.java:84)
		at first.common.logger.LoggerAspect.logPrint(LoggerAspect.java:29)
		at sun.reflect.GeneratedMethodAccessor117.invoke(Unknown Source)
		at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
		at java.lang.reflect.Method.invoke(Method.java:498)
		at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:627)
		at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:616)
		at org.springframework.aop.aspectj.AspectJAroundAdvice.invoke(AspectJAroundAdvice.java:70)
		at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
		at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:92)
		at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
		at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:671)
		at first.builder.controller.BuilderController$$EnhancerBySpringCGLIB$$60ebeab5.excelSampleDown(<generated>)
		at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
		at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
		at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
		at java.lang.reflect.Method.invoke(Method.java:498)
		at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:205)
		at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:133)
		at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:97)
		at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:849)
		at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:760)
		at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:85)
		at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:967)
		at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:901)
		at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:970)
		at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:861)
		at javax.servlet.http.HttpServlet.service(HttpServlet.java:489)
		at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:846)
		at javax.servlet.http.HttpServlet.service(HttpServlet.java:583)
		at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:212)
		at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:156)
		at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
		at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:181)
		at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:156)
		at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:197)
		at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
		at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:181)
		at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:156)
		at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:168)
		at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
		at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:483)
		at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:130)
		at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
		at org.apache.catalina.valves.AbstractAccessLogValve.invoke(AbstractAccessLogValve.java:679)
		at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
		at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:346)
		at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:617)
		at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
		at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:934)
		at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1698)
		at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
		at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
		at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
		at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
		at java.lang.Thread.run(Thread.java:750)
04-Mar-2024 13:15:33.340 INFO [main] org.apache.catalina.core.StandardServer.await A valid shutdown command was received via the shutdown port. Stopping the Server instance.
04-Mar-2024 13:15:33.340 INFO [main] org.apache.coyote.AbstractProtocol.pause Pausing ProtocolHandler ["http-nio-18090"]
04-Mar-2024 13:15:33.342 INFO [main] org.apache.catalina.core.StandardService.stopInternal Stopping service [Catalina]
04-Mar-2024 13:15:33.363 WARNING [localhost-startStop-4] org.apache.catalina.loader.WebappClassLoaderBase.clearReferencesJdbc The web application [sds-builder] registered the JDBC driver [com.mysql.jdbc.Driver] but failed to unregister it when the web application was stopped. To prevent a memory leak, the JDBC Driver has been forcibly unregistered.
04-Mar-2024 13:15:33.363 WARNING [localhost-startStop-4] org.apache.catalina.loader.WebappClassLoaderBase.clearReferencesJdbc The web application [sds-builder] registered the JDBC driver [net.sf.log4jdbc.DriverSpy] but failed to unregister it when the web application was stopped. To prevent a memory leak, the JDBC Driver has been forcibly unregistered.
04-Mar-2024 13:15:33.364 WARNING [localhost-startStop-4] org.apache.catalina.loader.WebappClassLoaderBase.clearReferencesJdbc The web application [sds-builder] registered the JDBC driver [com.microsoft.sqlserver.jdbc.SQLServerDriver] but failed to unregister it when the web application was stopped. To prevent a memory leak, the JDBC Driver has been forcibly unregistered.
04-Mar-2024 13:15:33.364 WARNING [localhost-startStop-4] org.apache.catalina.loader.WebappClassLoaderBase.clearReferencesThreads The web application [sds-builder] appears to have started a thread named [mysql-cj-abandoned-connection-cleanup] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 java.lang.Object.wait(Native Method)
 java.lang.ref.ReferenceQueue.remove(ReferenceQueue.java:144)
 com.mysql.jdbc.AbandonedConnectionCleanupThread.run(AbandonedConnectionCleanupThread.java:80)
 java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
 java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
 java.lang.Thread.run(Thread.java:750)
04-Mar-2024 13:15:33.395 INFO [main] org.apache.coyote.AbstractProtocol.stop Stopping ProtocolHandler ["http-nio-18090"]
04-Mar-2024 13:15:33.409 INFO [main] org.apache.coyote.AbstractProtocol.destroy Destroying ProtocolHandler ["http-nio-18090"]
04-Mar-2024 13:15:37.460 INFO [main] org.apache.catalina.startup.VersionLoggerListener.log Server version name:   Apache Tomcat/8.5.99
04-Mar-2024 13:15:37.461 INFO [main] org.apache.catalina.startup.VersionLoggerListener.log Server built:          Feb 14 2024 22:52:13 UTC
04-Mar-2024 13:15:37.461 INFO [main] org.apache.catalina.startup.VersionLoggerListener.log Server version number: 8.5.99.0
04-Mar-2024 13:15:37.461 INFO [main] org.apache.catalina.startup.VersionLoggerListener.log OS Name:               Linux
04-Mar-2024 13:15:37.461 INFO [main] org.apache.catalina.startup.VersionLoggerListener.log OS Version:            5.15.0-97-generic
04-Mar-2024 13:15:37.462 INFO [main] org.apache.catalina.startup.VersionLoggerListener.log Architecture:          amd64
04-Mar-2024 13:15:37.462 INFO [main] org.apache.catalina.startup.VersionLoggerListener.log Java Home:             /usr/lib/jvm/java-8-openjdk-amd64/jre
04-Mar-2024 13:15:37.462 INFO [main] org.apache.catalina.startup.VersionLoggerListener.log JVM Version:           1.8.0_392-8u392-ga-1~22.04-b08
04-Mar-2024 13:15:37.462 INFO [main] org.apache.catalina.startup.VersionLoggerListener.log JVM Vendor:            Private Build
04-Mar-2024 13:15:37.462 INFO [main] org.apache.catalina.startup.VersionLoggerListener.log CATALINA_BASE:         /home/minds/maum/sds-builder/apache-tomcat-8.5.99
04-Mar-2024 13:15:37.462 INFO [main] org.apache.catalina.startup.VersionLoggerListener.log CATALINA_HOME:         /home/minds/maum/sds-builder/apache-tomcat-8.5.99
04-Mar-2024 13:15:37.462 INFO [main] org.apache.catalina.startup.VersionLoggerListener.log Command line argument: -Djava.util.logging.config.file=/home/minds/maum/sds-builder/apache-tomcat-8.5.99/conf/logging.properties
04-Mar-2024 13:15:37.462 INFO [main] org.apache.catalina.startup.VersionLoggerListener.log Command line argument: -Djava.util.logging.manager=org.apache.juli.ClassLoaderLogManager
04-Mar-2024 13:15:37.462 INFO [main] org.apache.catalina.startup.VersionLoggerListener.log Command line argument: -Djdk.tls.ephemeralDHKeySize=2048
04-Mar-2024 13:15:37.462 INFO [main] org.apache.catalina.startup.VersionLoggerListener.log Command line argument: -Djava.protocol.handler.pkgs=org.apache.catalina.webresources
04-Mar-2024 13:15:37.462 INFO [main] org.apache.catalina.startup.VersionLoggerListener.log Command line argument: -Dorg.apache.catalina.security.SecurityListener.UMASK=0027
04-Mar-2024 13:15:37.463 INFO [main] org.apache.catalina.startup.VersionLoggerListener.log Command line argument: -Dignore.endorsed.dirs=
04-Mar-2024 13:15:37.463 INFO [main] org.apache.catalina.startup.VersionLoggerListener.log Command line argument: -Dcatalina.base=/home/minds/maum/sds-builder/apache-tomcat-8.5.99
04-Mar-2024 13:15:37.463 INFO [main] org.apache.catalina.startup.VersionLoggerListener.log Command line argument: -Dcatalina.home=/home/minds/maum/sds-builder/apache-tomcat-8.5.99
04-Mar-2024 13:15:37.463 INFO [main] org.apache.catalina.startup.VersionLoggerListener.log Command line argument: -Djava.io.tmpdir=/home/minds/maum/sds-builder/apache-tomcat-8.5.99/temp
04-Mar-2024 13:15:37.463 INFO [main] org.apache.catalina.core.AprLifecycleListener.lifecycleEvent The Apache Tomcat Native library which allows using OpenSSL was not found on the java.library.path: [/usr/java/packages/lib/amd64:/usr/lib/x86_64-linux-gnu/jni:/lib/x86_64-linux-gnu:/usr/lib/x86_64-linux-gnu:/usr/lib/jni:/lib:/usr/lib]
04-Mar-2024 13:15:37.524 INFO [main] org.apache.coyote.AbstractProtocol.init Initializing ProtocolHandler ["http-nio-18090"]
04-Mar-2024 13:15:37.545 INFO [main] org.apache.catalina.startup.Catalina.load Initialization processed in 455 ms
04-Mar-2024 13:15:37.582 INFO [main] org.apache.catalina.core.StandardService.startInternal Starting service [Catalina]
04-Mar-2024 13:15:37.582 INFO [main] org.apache.catalina.core.StandardEngine.startInternal Starting Servlet engine: [Apache Tomcat/8.5.99]
04-Mar-2024 13:15:37.615 INFO [localhost-startStop-1] org.apache.catalina.startup.HostConfig.deployWAR Deploying web application archive [/home/minds/maum/sds-builder/apache-tomcat-8.5.99/webapps/sds-builder.war]
04-Mar-2024 13:15:40.214 INFO [localhost-startStop-1] org.apache.jasper.servlet.TldScanner.scanJars At least one JAR was scanned for TLDs yet contained no TLDs. Enable debug logging for this logger for a complete list of JARs that were scanned but no TLDs were found in them. Skipping unneeded JARs during scanning can improve startup time and JSP compilation time.
DEBUG: org.mybatis.spring.SqlSessionFactoryBean - Property 'configuration' or 'configLocation' not specified, using default MyBatis Configuration
DEBUG: org.mybatis.spring.SqlSessionFactoryBean - Parsed mapper file: 'file [/home/minds/maum/sds-builder/apache-tomcat-8.5.99/webapps/sds-builder/WEB-INF/classes/mapper/maria/Chatbot/Builder_SQL.xml]'
DEBUG: org.mybatis.spring.SqlSessionFactoryBean - Parsed mapper file: 'file [/home/minds/maum/sds-builder/apache-tomcat-8.5.99/webapps/sds-builder/WEB-INF/classes/mapper/maria/Chatbot/MaumSDS_SQL.xml]'
DEBUG: org.mybatis.spring.SqlSessionFactoryBean - Property 'configuration' or 'configLocation' not specified, using default MyBatis Configuration
DEBUG: org.mybatis.spring.SqlSessionFactoryBean - Parsed mapper file: 'file [/home/minds/maum/sds-builder/apache-tomcat-8.5.99/webapps/sds-builder/WEB-INF/classes/mapper/maria/HAPPYCALL4/NQA_SQL.xml]'
DEBUG: org.mybatis.spring.SqlSessionFactoryBean - Parsed mapper file: 'file [/home/minds/maum/sds-builder/apache-tomcat-8.5.99/webapps/sds-builder/WEB-INF/classes/mapper/maria/HAPPYCALL4/SimpleBot_SQL.xml]'
SimpleBot Execution Environment : prod
SimpleBot BertIntent itfIP : 0
SimpleBot BertIntent nerIP : 0
SimpleBot BL IP : 125.132.250.244
SimpleBot CM IP : 121.133.247.250
SimpleBot M2U rest address : http://localhost:9990
SimpleBot Style Resources Path : /home/minds/maum/sds-builder/imgUpload
Default Resources Make : chatbot.css
Default Resources Make : chatbot_custom.css
Default Resources Make : chatbot_floating.css
Default Resources Make : IconImg
Default Resources Make : logoImg
Default Resources Make : default
Default Resources Make : mindslab
Default Resources Make : redtie
Default Resource constructed.
DEBUG: first.common.logger.LoggerAspect - ServiceImpl  	:  first.builder.service.BuilderService.getNqaStatusChatbotList()
DEBUG: first.common.logger.LoggerAspect - DAO  		:  first.builder.dao.BuilderDAO.getNqaStatusChatbotList()
DEBUG: first.builder.dao.AbstractDAO - 	 QueryId  	:  builder.getNqaStatusChatbotList
DEBUG: org.mybatis.spring.SqlSessionUtils - Creating a new SqlSession
DEBUG: org.mybatis.spring.SqlSessionUtils - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@27bd332]
DEBUG: org.mybatis.spring.transaction.SpringManagedTransaction - JDBC Connection [net.sf.log4jdbc.ConnectionSpy@5b1b34f1] will be managed by Spring
2024-03-04 13:15:42,327  INFO SQL(simplebot)        :  SELECT No as host, Name, 'preparation' as nqaUploadStatus
 from Account
		ORDER BY No
DEBUG: org.mybatis.spring.SqlSessionUtils - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@27bd332]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@27bd332]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@27bd332]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@27bd332]
04-Mar-2024 13:15:43.412 INFO [localhost-startStop-1] org.apache.catalina.startup.HostConfig.deployWAR Deployment of web application archive [/home/minds/maum/sds-builder/apache-tomcat-8.5.99/webapps/sds-builder.war] has finished in [5,796] ms
04-Mar-2024 13:15:43.413 INFO [localhost-startStop-1] org.apache.catalina.startup.HostConfig.deployDirectory Deploying web application directory [/home/minds/maum/sds-builder/apache-tomcat-8.5.99/webapps/examples]
04-Mar-2024 13:15:43.524 INFO [localhost-startStop-1] org.apache.catalina.startup.HostConfig.deployDirectory Deployment of web application directory [/home/minds/maum/sds-builder/apache-tomcat-8.5.99/webapps/examples] has finished in [111] ms
04-Mar-2024 13:15:43.524 INFO [localhost-startStop-1] org.apache.catalina.startup.HostConfig.deployDirectory Deploying web application directory [/home/minds/maum/sds-builder/apache-tomcat-8.5.99/webapps/manager]
04-Mar-2024 13:15:43.541 INFO [localhost-startStop-1] org.apache.catalina.startup.HostConfig.deployDirectory Deployment of web application directory [/home/minds/maum/sds-builder/apache-tomcat-8.5.99/webapps/manager] has finished in [17] ms
04-Mar-2024 13:15:43.541 INFO [localhost-startStop-1] org.apache.catalina.startup.HostConfig.deployDirectory Deploying web application directory [/home/minds/maum/sds-builder/apache-tomcat-8.5.99/webapps/host-manager]
04-Mar-2024 13:15:43.553 INFO [localhost-startStop-1] org.apache.catalina.startup.HostConfig.deployDirectory Deployment of web application directory [/home/minds/maum/sds-builder/apache-tomcat-8.5.99/webapps/host-manager] has finished in [12] ms
04-Mar-2024 13:15:43.553 INFO [localhost-startStop-1] org.apache.catalina.startup.HostConfig.deployDirectory Deploying web application directory [/home/minds/maum/sds-builder/apache-tomcat-8.5.99/webapps/docs]
04-Mar-2024 13:15:43.562 INFO [localhost-startStop-1] org.apache.catalina.startup.HostConfig.deployDirectory Deployment of web application directory [/home/minds/maum/sds-builder/apache-tomcat-8.5.99/webapps/docs] has finished in [9] ms
04-Mar-2024 13:15:43.566 INFO [main] org.apache.coyote.AbstractProtocol.start Starting ProtocolHandler ["http-nio-18090"]
04-Mar-2024 13:15:43.576 INFO [main] org.apache.catalina.startup.Catalina.start Server startup in 6030 ms
DEBUG: first.common.logger.LoggerAspect - Controller  	:  first.builder.controller.BuilderController.chatbotBuilderCommon()
DEBUG: first.common.logger.LoggerAspect - Controller  	:  first.builder.controller.BuilderController.getChatList()
DEBUG: first.common.logger.LoggerAspect - ServiceImpl  	:  first.builder.service.BuilderService.getChatbotList()
DEBUG: first.common.logger.LoggerAspect - DAO  		:  first.builder.dao.BuilderDAO.getChatbotList()
DEBUG: first.builder.dao.AbstractDAO - 	 QueryId  	:  builder.getChatbotList
DEBUG: org.mybatis.spring.SqlSessionUtils - Creating a new SqlSession
DEBUG: org.mybatis.spring.SqlSessionUtils - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@34311a12]
DEBUG: org.mybatis.spring.transaction.SpringManagedTransaction - JDBC Connection [net.sf.log4jdbc.ConnectionSpy@96659c3] will be managed by Spring
2024-03-04 13:15:46,173  INFO SQL(simplebot)        :  SELECT  /* No, Name, Host, Language */
			*
		from Account WHERE 1=1
		AND No IN
		 
				 (  
					'1636'
				 ) 
			 

		 
		ORDER BY No
DEBUG: org.mybatis.spring.SqlSessionUtils - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@34311a12]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@34311a12]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@34311a12]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@34311a12]
DEBUG: first.common.logger.LoggerAspect - Controller  	:  first.builder.controller.BuilderController.builderBottomAnswer()
DEBUG: first.common.logger.LoggerAspect - Controller  	:  first.builder.controller.BuilderController.builderContentsAnswer()
DEBUG: first.common.logger.LoggerAspect - Controller  	:  first.builder.controller.BuilderController.getTask()
DEBUG: first.common.logger.LoggerAspect - ServiceImpl  	:  first.builder.service.BuilderService.getTaskCount()
DEBUG: first.common.logger.LoggerAspect - DAO  		:  first.builder.dao.BuilderDAO.getTaskCount()
DEBUG: first.builder.dao.AbstractDAO - 	 QueryId  	:  builder.getTaskCount
DEBUG: org.mybatis.spring.SqlSessionUtils - Creating a new SqlSession
DEBUG: org.mybatis.spring.SqlSessionUtils - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@65c7844d]
DEBUG: org.mybatis.spring.transaction.SpringManagedTransaction - JDBC Connection [net.sf.log4jdbc.ConnectionSpy@ee62bd] will be managed by Spring
2024-03-04 13:15:46,308  INFO SQL(simplebot)        :  SELECT COUNT(*) FROM Intent WHERE Account=1636
 and Language=1
DEBUG: org.mybatis.spring.SqlSessionUtils - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@65c7844d]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@65c7844d]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@65c7844d]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@65c7844d]
DEBUG: first.common.logger.LoggerAspect - ServiceImpl  	:  first.builder.service.BuilderService.getAnswerList()
DEBUG: first.common.logger.LoggerAspect - DAO  		:  first.builder.dao.BuilderDAO.getAnswerList()
DEBUG: first.builder.dao.AbstractDAO - 	 QueryId  	:  builder.getAnswerList
DEBUG: org.mybatis.spring.SqlSessionUtils - Creating a new SqlSession
DEBUG: org.mybatis.spring.SqlSessionUtils - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@657aad0b]
DEBUG: org.mybatis.spring.transaction.SpringManagedTransaction - JDBC Connection [net.sf.log4jdbc.ConnectionSpy@231378f7] will be managed by Spring
2024-03-04 13:15:46,313  INFO SQL(simplebot)        :  SELECT I.No, I.Main, I.Name, A.answer, I.Account
		FROM Intent I LEFT OUTER JOIN Answer A
		ON I.Answer = A.No
		WHERE I.Account=1636
 and I.Language=1
		ORDER BY I.No
		OFFSET 0 ROWS
		FETCH NEXT 15 ROWS ONLY
DEBUG: org.mybatis.spring.SqlSessionUtils - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@657aad0b]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@657aad0b]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@657aad0b]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@657aad0b]
DEBUG: first.common.logger.LoggerAspect - ServiceImpl  	:  first.builder.service.BuilderService.getAllIntents()
DEBUG: first.common.logger.LoggerAspect - DAO  		:  first.builder.dao.BuilderDAO.getAllIntents()
DEBUG: first.builder.dao.AbstractDAO - 	 QueryId  	:  builder.getAllIntents
DEBUG: org.mybatis.spring.SqlSessionUtils - Creating a new SqlSession
DEBUG: org.mybatis.spring.SqlSessionUtils - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@29f53bf4]
DEBUG: org.mybatis.spring.transaction.SpringManagedTransaction - JDBC Connection [net.sf.log4jdbc.ConnectionSpy@1102eee3] will be managed by Spring
2024-03-04 13:15:46,322  INFO SQL(simplebot)        :  SELECT I.No, I.Main, I.Name,I.Next, I.URL, I.Language
		FROM Intent I
		WHERE I.Account=1636
		ORDER BY I.No
DEBUG: org.mybatis.spring.SqlSessionUtils - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@29f53bf4]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@29f53bf4]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@29f53bf4]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@29f53bf4]
DEBUG: first.common.logger.LoggerAspect - ServiceImpl  	:  first.builder.service.BuilderService.getAllBertIntents()
DEBUG: first.common.logger.LoggerAspect - DAO  		:  first.builder.dao.BuilderDAO.getAllBertIntents()
DEBUG: first.builder.dao.AbstractDAO - 	 QueryId  	:  builder.getAllBertIntents
DEBUG: org.mybatis.spring.SqlSessionUtils - Creating a new SqlSession
DEBUG: org.mybatis.spring.SqlSessionUtils - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@5d788ba]
DEBUG: org.mybatis.spring.transaction.SpringManagedTransaction - JDBC Connection [net.sf.log4jdbc.ConnectionSpy@52edde1b] will be managed by Spring
2024-03-04 13:15:46,327  INFO SQL(simplebot)        :  SELECT B.No, B.Name, B.Language
		FROM BertIntent B LEFT OUTER JOIN BackendInfo BI
		ON B.BertItfId = BI.id
		WHERE BI.host=1636
		ORDER BY B.No
DEBUG: org.mybatis.spring.SqlSessionUtils - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@5d788ba]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@5d788ba]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@5d788ba]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@5d788ba]
DEBUG: first.common.logger.LoggerAspect - Controller  	:  first.builder.controller.BuilderController.getTask()
DEBUG: first.common.logger.LoggerAspect - ServiceImpl  	:  first.builder.service.BuilderService.getTaskCount()
DEBUG: first.common.logger.LoggerAspect - DAO  		:  first.builder.dao.BuilderDAO.getTaskCount()
DEBUG: first.builder.dao.AbstractDAO - 	 QueryId  	:  builder.getTaskCount
DEBUG: org.mybatis.spring.SqlSessionUtils - Creating a new SqlSession
DEBUG: org.mybatis.spring.SqlSessionUtils - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@2d2f3fb2]
DEBUG: org.mybatis.spring.transaction.SpringManagedTransaction - JDBC Connection [net.sf.log4jdbc.ConnectionSpy@75c18cf0] will be managed by Spring
2024-03-04 13:15:46,342  INFO SQL(simplebot)        :  SELECT COUNT(*) FROM Intent WHERE Account=1636
 and Language=1
DEBUG: org.mybatis.spring.SqlSessionUtils - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@2d2f3fb2]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@2d2f3fb2]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@2d2f3fb2]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@2d2f3fb2]
DEBUG: first.common.logger.LoggerAspect - ServiceImpl  	:  first.builder.service.BuilderService.getAnswerList()
DEBUG: first.common.logger.LoggerAspect - DAO  		:  first.builder.dao.BuilderDAO.getAnswerList()
DEBUG: first.builder.dao.AbstractDAO - 	 QueryId  	:  builder.getAnswerList
DEBUG: org.mybatis.spring.SqlSessionUtils - Creating a new SqlSession
DEBUG: org.mybatis.spring.SqlSessionUtils - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@c4c2797]
DEBUG: org.mybatis.spring.transaction.SpringManagedTransaction - JDBC Connection [net.sf.log4jdbc.ConnectionSpy@613d7834] will be managed by Spring
2024-03-04 13:15:46,349  INFO SQL(simplebot)        :  SELECT I.No, I.Main, I.Name, A.answer, I.Account
		FROM Intent I LEFT OUTER JOIN Answer A
		ON I.Answer = A.No
		WHERE I.Account=1636
 and I.Language=1
		ORDER BY I.No
		OFFSET 0 ROWS
		FETCH NEXT 15 ROWS ONLY
DEBUG: org.mybatis.spring.SqlSessionUtils - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@c4c2797]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@c4c2797]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@c4c2797]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@c4c2797]
DEBUG: first.common.logger.LoggerAspect - ServiceImpl  	:  first.builder.service.BuilderService.getAllIntents()
DEBUG: first.common.logger.LoggerAspect - DAO  		:  first.builder.dao.BuilderDAO.getAllIntents()
DEBUG: first.builder.dao.AbstractDAO - 	 QueryId  	:  builder.getAllIntents
DEBUG: org.mybatis.spring.SqlSessionUtils - Creating a new SqlSession
DEBUG: org.mybatis.spring.SqlSessionUtils - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1d091b00]
DEBUG: org.mybatis.spring.transaction.SpringManagedTransaction - JDBC Connection [net.sf.log4jdbc.ConnectionSpy@1de13fdd] will be managed by Spring
2024-03-04 13:15:46,355  INFO SQL(simplebot)        :  SELECT I.No, I.Main, I.Name,I.Next, I.URL, I.Language
		FROM Intent I
		WHERE I.Account=1636
		ORDER BY I.No
DEBUG: org.mybatis.spring.SqlSessionUtils - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1d091b00]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1d091b00]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1d091b00]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1d091b00]
DEBUG: first.common.logger.LoggerAspect - ServiceImpl  	:  first.builder.service.BuilderService.getAllBertIntents()
DEBUG: first.common.logger.LoggerAspect - DAO  		:  first.builder.dao.BuilderDAO.getAllBertIntents()
DEBUG: first.builder.dao.AbstractDAO - 	 QueryId  	:  builder.getAllBertIntents
DEBUG: org.mybatis.spring.SqlSessionUtils - Creating a new SqlSession
DEBUG: org.mybatis.spring.SqlSessionUtils - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@ee1d040]
DEBUG: org.mybatis.spring.transaction.SpringManagedTransaction - JDBC Connection [net.sf.log4jdbc.ConnectionSpy@407cc66b] will be managed by Spring
2024-03-04 13:15:46,362  INFO SQL(simplebot)        :  SELECT B.No, B.Name, B.Language
		FROM BertIntent B LEFT OUTER JOIN BackendInfo BI
		ON B.BertItfId = BI.id
		WHERE BI.host=1636
		ORDER BY B.No
DEBUG: org.mybatis.spring.SqlSessionUtils - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@ee1d040]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@ee1d040]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@ee1d040]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@ee1d040]
DEBUG: first.common.logger.LoggerAspect - Controller  	:  first.builder.controller.BuilderController.excelSampleDown()
java.io.FileNotFoundException: /home/minds/maum/sds-builder/excel/sample/[chatbot] TASK_ANSWER_샘플데이터.xlsx (No such file or directory)
	at java.io.FileInputStream.open0(Native Method)
	at java.io.FileInputStream.open(FileInputStream.java:195)
	at java.io.FileInputStream.<init>(FileInputStream.java:138)
	at java.io.FileInputStream.<init>(FileInputStream.java:93)
	at first.builder.controller.BuilderController.excelSampleDown(BuilderController.java:1300)
	at first.builder.controller.BuilderController$$FastClassBySpringCGLIB$$c1e54596.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:736)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:157)
	at org.springframework.aop.aspectj.MethodInvocationProceedingJoinPoint.proceed(MethodInvocationProceedingJoinPoint.java:84)
	at first.common.logger.LoggerAspect.logPrint(LoggerAspect.java:29)
	at sun.reflect.GeneratedMethodAccessor69.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:627)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:616)
	at org.springframework.aop.aspectj.AspectJAroundAdvice.invoke(AspectJAroundAdvice.java:70)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:92)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:671)
	at first.builder.controller.BuilderController$$EnhancerBySpringCGLIB$$16f07cbd.excelSampleDown(<generated>)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:205)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:133)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:97)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:849)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:760)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:85)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:967)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:901)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:970)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:861)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:489)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:846)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:583)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:212)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:156)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:181)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:156)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:197)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:181)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:156)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:168)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:483)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:130)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.valves.AbstractAccessLogValve.invoke(AbstractAccessLogValve.java:679)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:346)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:617)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:934)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1698)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
	at java.lang.Thread.run(Thread.java:750)
04-Mar-2024 13:18:33.602 INFO [ContainerBackgroundProcessor[StandardEngine[Catalina]]] org.apache.catalina.startup.HostConfig.undeploy Undeploying context [/sds-builder]
04-Mar-2024 13:18:33.628 WARNING [ContainerBackgroundProcessor[StandardEngine[Catalina]]] org.apache.catalina.loader.WebappClassLoaderBase.clearReferencesJdbc The web application [sds-builder] registered the JDBC driver [com.mysql.jdbc.Driver] but failed to unregister it when the web application was stopped. To prevent a memory leak, the JDBC Driver has been forcibly unregistered.
04-Mar-2024 13:18:33.629 WARNING [ContainerBackgroundProcessor[StandardEngine[Catalina]]] org.apache.catalina.loader.WebappClassLoaderBase.clearReferencesJdbc The web application [sds-builder] registered the JDBC driver [net.sf.log4jdbc.DriverSpy] but failed to unregister it when the web application was stopped. To prevent a memory leak, the JDBC Driver has been forcibly unregistered.
04-Mar-2024 13:18:33.629 WARNING [ContainerBackgroundProcessor[StandardEngine[Catalina]]] org.apache.catalina.loader.WebappClassLoaderBase.clearReferencesJdbc The web application [sds-builder] registered the JDBC driver [com.microsoft.sqlserver.jdbc.SQLServerDriver] but failed to unregister it when the web application was stopped. To prevent a memory leak, the JDBC Driver has been forcibly unregistered.
04-Mar-2024 13:18:33.630 WARNING [ContainerBackgroundProcessor[StandardEngine[Catalina]]] org.apache.catalina.loader.WebappClassLoaderBase.clearReferencesThreads The web application [sds-builder] appears to have started a thread named [mysql-cj-abandoned-connection-cleanup] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 java.lang.Object.wait(Native Method)
 java.lang.ref.ReferenceQueue.remove(ReferenceQueue.java:144)
 com.mysql.jdbc.AbandonedConnectionCleanupThread.run(AbandonedConnectionCleanupThread.java:80)
 java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
 java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
 java.lang.Thread.run(Thread.java:750)
04-Mar-2024 13:18:33.697 INFO [localhost-startStop-2] org.apache.catalina.startup.HostConfig.deployWAR Deploying web application archive [/home/minds/maum/sds-builder/apache-tomcat-8.5.99/webapps/sds-builder.war]
04-Mar-2024 13:18:35.239 INFO [mysql-cj-abandoned-connection-cleanup] org.apache.catalina.loader.WebappClassLoaderBase.checkStateForResourceLoading Illegal access: this web application instance has been stopped already. Could not load []. The following stack trace is thrown for debugging purposes as well as to attempt to terminate the thread which caused the illegal access.
	java.lang.IllegalStateException: Illegal access: this web application instance has been stopped already. Could not load []. The following stack trace is thrown for debugging purposes as well as to attempt to terminate the thread which caused the illegal access.
		at org.apache.catalina.loader.WebappClassLoaderBase.checkStateForResourceLoading(WebappClassLoaderBase.java:1358)
		at org.apache.catalina.loader.WebappClassLoaderBase.getResource(WebappClassLoaderBase.java:990)
		at com.mysql.jdbc.AbandonedConnectionCleanupThread.checkThreadContextClassLoader(AbandonedConnectionCleanupThread.java:112)
		at com.mysql.jdbc.AbandonedConnectionCleanupThread.run(AbandonedConnectionCleanupThread.java:79)
		at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
		at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
		at java.lang.Thread.run(Thread.java:750)
04-Mar-2024 13:18:35.240 INFO [mysql-cj-abandoned-connection-cleanup] org.apache.catalina.loader.WebappClassLoaderBase.checkStateForResourceLoading Illegal access: this web application instance has been stopped already. Could not load []. The following stack trace is thrown for debugging purposes as well as to attempt to terminate the thread which caused the illegal access.
	java.lang.IllegalStateException: Illegal access: this web application instance has been stopped already. Could not load []. The following stack trace is thrown for debugging purposes as well as to attempt to terminate the thread which caused the illegal access.
		at org.apache.catalina.loader.WebappClassLoaderBase.checkStateForResourceLoading(WebappClassLoaderBase.java:1358)
		at org.apache.catalina.loader.WebappClassLoaderBase.getResource(WebappClassLoaderBase.java:990)
		at com.mysql.jdbc.AbandonedConnectionCleanupThread.checkThreadContextClassLoader(AbandonedConnectionCleanupThread.java:112)
		at com.mysql.jdbc.AbandonedConnectionCleanupThread.run(AbandonedConnectionCleanupThread.java:79)
		at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
		at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
		at java.lang.Thread.run(Thread.java:750)
04-Mar-2024 13:18:35.241 INFO [mysql-cj-abandoned-connection-cleanup] org.apache.catalina.loader.WebappClassLoaderBase.checkStateForResourceLoading Illegal access: this web application instance has been stopped already. Could not load []. The following stack trace is thrown for debugging purposes as well as to attempt to terminate the thread which caused the illegal access.
	java.lang.IllegalStateException: Illegal access: this web application instance has been stopped already. Could not load []. The following stack trace is thrown for debugging purposes as well as to attempt to terminate the thread which caused the illegal access.
		at org.apache.catalina.loader.WebappClassLoaderBase.checkStateForResourceLoading(WebappClassLoaderBase.java:1358)
		at org.apache.catalina.loader.WebappClassLoaderBase.getResource(WebappClassLoaderBase.java:990)
		at com.mysql.jdbc.AbandonedConnectionCleanupThread.checkThreadContextClassLoader(AbandonedConnectionCleanupThread.java:112)
		at com.mysql.jdbc.AbandonedConnectionCleanupThread.run(AbandonedConnectionCleanupThread.java:79)
		at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
		at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
		at java.lang.Thread.run(Thread.java:750)
04-Mar-2024 13:18:36.267 INFO [localhost-startStop-2] org.apache.jasper.servlet.TldScanner.scanJars At least one JAR was scanned for TLDs yet contained no TLDs. Enable debug logging for this logger for a complete list of JARs that were scanned but no TLDs were found in them. Skipping unneeded JARs during scanning can improve startup time and JSP compilation time.
DEBUG: org.mybatis.spring.SqlSessionFactoryBean - Property 'configuration' or 'configLocation' not specified, using default MyBatis Configuration
DEBUG: org.mybatis.spring.SqlSessionFactoryBean - Parsed mapper file: 'file [/home/minds/maum/sds-builder/apache-tomcat-8.5.99/webapps/sds-builder/WEB-INF/classes/mapper/maria/Chatbot/Builder_SQL.xml]'
DEBUG: org.mybatis.spring.SqlSessionFactoryBean - Parsed mapper file: 'file [/home/minds/maum/sds-builder/apache-tomcat-8.5.99/webapps/sds-builder/WEB-INF/classes/mapper/maria/Chatbot/MaumSDS_SQL.xml]'
DEBUG: org.mybatis.spring.SqlSessionFactoryBean - Property 'configuration' or 'configLocation' not specified, using default MyBatis Configuration
DEBUG: org.mybatis.spring.SqlSessionFactoryBean - Parsed mapper file: 'file [/home/minds/maum/sds-builder/apache-tomcat-8.5.99/webapps/sds-builder/WEB-INF/classes/mapper/maria/HAPPYCALL4/NQA_SQL.xml]'
DEBUG: org.mybatis.spring.SqlSessionFactoryBean - Parsed mapper file: 'file [/home/minds/maum/sds-builder/apache-tomcat-8.5.99/webapps/sds-builder/WEB-INF/classes/mapper/maria/HAPPYCALL4/SimpleBot_SQL.xml]'
SimpleBot Execution Environment : prod
SimpleBot BertIntent itfIP : 0
SimpleBot BertIntent nerIP : 0
SimpleBot BL IP : 125.132.250.244
SimpleBot CM IP : 121.133.247.250
SimpleBot M2U rest address : http://localhost:9990
SimpleBot Style Resources Path : /home/minds/maum/sds-builder/imgUpload
Default Resources Make : chatbot.css
Default Resources Make : chatbot_custom.css
Default Resources Make : chatbot_floating.css
Default Resources Make : IconImg
Default Resources Make : logoImg
Default Resources Make : default
Default Resources Make : mindslab
Default Resources Make : redtie
Default Resource constructed.
DEBUG: first.common.logger.LoggerAspect - ServiceImpl  	:  first.builder.service.BuilderService.getNqaStatusChatbotList()
DEBUG: first.common.logger.LoggerAspect - DAO  		:  first.builder.dao.BuilderDAO.getNqaStatusChatbotList()
DEBUG: first.builder.dao.AbstractDAO - 	 QueryId  	:  builder.getNqaStatusChatbotList
DEBUG: org.mybatis.spring.SqlSessionUtils - Creating a new SqlSession
DEBUG: org.mybatis.spring.SqlSessionUtils - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@23bd7b6d]
DEBUG: org.mybatis.spring.transaction.SpringManagedTransaction - JDBC Connection [net.sf.log4jdbc.ConnectionSpy@79d6765a] will be managed by Spring
2024-03-04 13:18:38,095  INFO SQL(simplebot)        :  SELECT No as host, Name, 'preparation' as nqaUploadStatus
 from Account
		ORDER BY No
DEBUG: org.mybatis.spring.SqlSessionUtils - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@23bd7b6d]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@23bd7b6d]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@23bd7b6d]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@23bd7b6d]
04-Mar-2024 13:18:38.968 INFO [localhost-startStop-2] org.apache.catalina.startup.HostConfig.deployWAR Deployment of web application archive [/home/minds/maum/sds-builder/apache-tomcat-8.5.99/webapps/sds-builder.war] has finished in [5,271] ms
DEBUG: first.common.logger.LoggerAspect - Controller  	:  first.builder.controller.BuilderController.chatbotBuilderCommon()
DEBUG: first.common.logger.LoggerAspect - Controller  	:  first.builder.controller.BuilderController.getChatList()
DEBUG: first.common.logger.LoggerAspect - ServiceImpl  	:  first.builder.service.BuilderService.getChatbotList()
DEBUG: first.common.logger.LoggerAspect - DAO  		:  first.builder.dao.BuilderDAO.getChatbotList()
DEBUG: first.builder.dao.AbstractDAO - 	 QueryId  	:  builder.getChatbotList
DEBUG: org.mybatis.spring.SqlSessionUtils - Creating a new SqlSession
DEBUG: org.mybatis.spring.SqlSessionUtils - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@5b3b619]
DEBUG: org.mybatis.spring.transaction.SpringManagedTransaction - JDBC Connection [net.sf.log4jdbc.ConnectionSpy@3b14529b] will be managed by Spring
2024-03-04 13:18:42,139  INFO SQL(simplebot)        :  SELECT  /* No, Name, Host, Language */
			*
		from Account WHERE 1=1
		AND No IN
		 
				 (  
					'1636'
				 ) 
			 

		 
		ORDER BY No
DEBUG: org.mybatis.spring.SqlSessionUtils - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@5b3b619]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@5b3b619]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@5b3b619]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@5b3b619]
DEBUG: first.common.logger.LoggerAspect - Controller  	:  first.builder.controller.BuilderController.builderContentsAnswer()
DEBUG: first.common.logger.LoggerAspect - Controller  	:  first.builder.controller.BuilderController.builderBottomAnswer()
DEBUG: first.common.logger.LoggerAspect - Controller  	:  first.builder.controller.BuilderController.getTask()
DEBUG: first.common.logger.LoggerAspect - ServiceImpl  	:  first.builder.service.BuilderService.getTaskCount()
DEBUG: first.common.logger.LoggerAspect - DAO  		:  first.builder.dao.BuilderDAO.getTaskCount()
DEBUG: first.builder.dao.AbstractDAO - 	 QueryId  	:  builder.getTaskCount
DEBUG: org.mybatis.spring.SqlSessionUtils - Creating a new SqlSession
DEBUG: org.mybatis.spring.SqlSessionUtils - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@67d23fcf]
DEBUG: org.mybatis.spring.transaction.SpringManagedTransaction - JDBC Connection [net.sf.log4jdbc.ConnectionSpy@6fcfcac3] will be managed by Spring
2024-03-04 13:18:42,348  INFO SQL(simplebot)        :  SELECT COUNT(*) FROM Intent WHERE Account=1636
 and Language=1
DEBUG: org.mybatis.spring.SqlSessionUtils - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@67d23fcf]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@67d23fcf]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@67d23fcf]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@67d23fcf]
DEBUG: first.common.logger.LoggerAspect - ServiceImpl  	:  first.builder.service.BuilderService.getAnswerList()
DEBUG: first.common.logger.LoggerAspect - DAO  		:  first.builder.dao.BuilderDAO.getAnswerList()
DEBUG: first.builder.dao.AbstractDAO - 	 QueryId  	:  builder.getAnswerList
DEBUG: org.mybatis.spring.SqlSessionUtils - Creating a new SqlSession
DEBUG: org.mybatis.spring.SqlSessionUtils - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@294522d3]
DEBUG: org.mybatis.spring.transaction.SpringManagedTransaction - JDBC Connection [net.sf.log4jdbc.ConnectionSpy@7332387c] will be managed by Spring
2024-03-04 13:18:42,352  INFO SQL(simplebot)        :  SELECT I.No, I.Main, I.Name, A.answer, I.Account
		FROM Intent I LEFT OUTER JOIN Answer A
		ON I.Answer = A.No
		WHERE I.Account=1636
 and I.Language=1
		ORDER BY I.No
		OFFSET 0 ROWS
		FETCH NEXT 15 ROWS ONLY
DEBUG: org.mybatis.spring.SqlSessionUtils - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@294522d3]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@294522d3]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@294522d3]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@294522d3]
DEBUG: first.common.logger.LoggerAspect - ServiceImpl  	:  first.builder.service.BuilderService.getAllIntents()
DEBUG: first.common.logger.LoggerAspect - DAO  		:  first.builder.dao.BuilderDAO.getAllIntents()
DEBUG: first.builder.dao.AbstractDAO - 	 QueryId  	:  builder.getAllIntents
DEBUG: org.mybatis.spring.SqlSessionUtils - Creating a new SqlSession
DEBUG: org.mybatis.spring.SqlSessionUtils - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@10f72fdc]
DEBUG: org.mybatis.spring.transaction.SpringManagedTransaction - JDBC Connection [net.sf.log4jdbc.ConnectionSpy@7940e7c] will be managed by Spring
2024-03-04 13:18:42,360  INFO SQL(simplebot)        :  SELECT I.No, I.Main, I.Name,I.Next, I.URL, I.Language
		FROM Intent I
		WHERE I.Account=1636
		ORDER BY I.No
DEBUG: org.mybatis.spring.SqlSessionUtils - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@10f72fdc]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@10f72fdc]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@10f72fdc]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@10f72fdc]
DEBUG: first.common.logger.LoggerAspect - ServiceImpl  	:  first.builder.service.BuilderService.getAllBertIntents()
DEBUG: first.common.logger.LoggerAspect - DAO  		:  first.builder.dao.BuilderDAO.getAllBertIntents()
DEBUG: first.builder.dao.AbstractDAO - 	 QueryId  	:  builder.getAllBertIntents
DEBUG: org.mybatis.spring.SqlSessionUtils - Creating a new SqlSession
DEBUG: org.mybatis.spring.SqlSessionUtils - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@2ef66a4d]
DEBUG: org.mybatis.spring.transaction.SpringManagedTransaction - JDBC Connection [net.sf.log4jdbc.ConnectionSpy@5b35a816] will be managed by Spring
2024-03-04 13:18:42,363  INFO SQL(simplebot)        :  SELECT B.No, B.Name, B.Language
		FROM BertIntent B LEFT OUTER JOIN BackendInfo BI
		ON B.BertItfId = BI.id
		WHERE BI.host=1636
		ORDER BY B.No
DEBUG: org.mybatis.spring.SqlSessionUtils - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@2ef66a4d]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@2ef66a4d]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@2ef66a4d]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@2ef66a4d]
DEBUG: first.common.logger.LoggerAspect - Controller  	:  first.builder.controller.BuilderController.getTask()
DEBUG: first.common.logger.LoggerAspect - ServiceImpl  	:  first.builder.service.BuilderService.getTaskCount()
DEBUG: first.common.logger.LoggerAspect - DAO  		:  first.builder.dao.BuilderDAO.getTaskCount()
DEBUG: first.builder.dao.AbstractDAO - 	 QueryId  	:  builder.getTaskCount
DEBUG: org.mybatis.spring.SqlSessionUtils - Creating a new SqlSession
DEBUG: org.mybatis.spring.SqlSessionUtils - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@6729408b]
DEBUG: org.mybatis.spring.transaction.SpringManagedTransaction - JDBC Connection [net.sf.log4jdbc.ConnectionSpy@41d32925] will be managed by Spring
2024-03-04 13:18:42,373  INFO SQL(simplebot)        :  SELECT COUNT(*) FROM Intent WHERE Account=1636
 and Language=1
DEBUG: org.mybatis.spring.SqlSessionUtils - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@6729408b]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@6729408b]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@6729408b]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@6729408b]
DEBUG: first.common.logger.LoggerAspect - ServiceImpl  	:  first.builder.service.BuilderService.getAnswerList()
DEBUG: first.common.logger.LoggerAspect - DAO  		:  first.builder.dao.BuilderDAO.getAnswerList()
DEBUG: first.builder.dao.AbstractDAO - 	 QueryId  	:  builder.getAnswerList
DEBUG: org.mybatis.spring.SqlSessionUtils - Creating a new SqlSession
DEBUG: org.mybatis.spring.SqlSessionUtils - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@4930f76c]
DEBUG: org.mybatis.spring.transaction.SpringManagedTransaction - JDBC Connection [net.sf.log4jdbc.ConnectionSpy@42ea8791] will be managed by Spring
2024-03-04 13:18:42,376  INFO SQL(simplebot)        :  SELECT I.No, I.Main, I.Name, A.answer, I.Account
		FROM Intent I LEFT OUTER JOIN Answer A
		ON I.Answer = A.No
		WHERE I.Account=1636
 and I.Language=1
		ORDER BY I.No
		OFFSET 0 ROWS
		FETCH NEXT 15 ROWS ONLY
DEBUG: org.mybatis.spring.SqlSessionUtils - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@4930f76c]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@4930f76c]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@4930f76c]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@4930f76c]
DEBUG: first.common.logger.LoggerAspect - ServiceImpl  	:  first.builder.service.BuilderService.getAllIntents()
DEBUG: first.common.logger.LoggerAspect - DAO  		:  first.builder.dao.BuilderDAO.getAllIntents()
DEBUG: first.builder.dao.AbstractDAO - 	 QueryId  	:  builder.getAllIntents
DEBUG: org.mybatis.spring.SqlSessionUtils - Creating a new SqlSession
DEBUG: org.mybatis.spring.SqlSessionUtils - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@6f321875]
DEBUG: org.mybatis.spring.transaction.SpringManagedTransaction - JDBC Connection [net.sf.log4jdbc.ConnectionSpy@6c9cf21b] will be managed by Spring
2024-03-04 13:18:42,379  INFO SQL(simplebot)        :  SELECT I.No, I.Main, I.Name,I.Next, I.URL, I.Language
		FROM Intent I
		WHERE I.Account=1636
		ORDER BY I.No
DEBUG: org.mybatis.spring.SqlSessionUtils - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@6f321875]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@6f321875]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@6f321875]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@6f321875]
DEBUG: first.common.logger.LoggerAspect - ServiceImpl  	:  first.builder.service.BuilderService.getAllBertIntents()
DEBUG: first.common.logger.LoggerAspect - DAO  		:  first.builder.dao.BuilderDAO.getAllBertIntents()
DEBUG: first.builder.dao.AbstractDAO - 	 QueryId  	:  builder.getAllBertIntents
DEBUG: org.mybatis.spring.SqlSessionUtils - Creating a new SqlSession
DEBUG: org.mybatis.spring.SqlSessionUtils - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@38772060]
DEBUG: org.mybatis.spring.transaction.SpringManagedTransaction - JDBC Connection [net.sf.log4jdbc.ConnectionSpy@4a4e64f0] will be managed by Spring
2024-03-04 13:18:42,382  INFO SQL(simplebot)        :  SELECT B.No, B.Name, B.Language
		FROM BertIntent B LEFT OUTER JOIN BackendInfo BI
		ON B.BertItfId = BI.id
		WHERE BI.host=1636
		ORDER BY B.No
DEBUG: org.mybatis.spring.SqlSessionUtils - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@38772060]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@38772060]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@38772060]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@38772060]
DEBUG: first.common.logger.LoggerAspect - Controller  	:  first.builder.controller.BuilderController.excelSampleDown()
DEBUG: first.common.logger.LoggerAspect - ServiceImpl  	:  first.builder.service.BuilderService.getChatLang()
DEBUG: first.common.logger.LoggerAspect - DAO  		:  first.builder.dao.BuilderDAO.getChatLang()
DEBUG: first.builder.dao.AbstractDAO - 	 QueryId  	:  builder.getChatLang
DEBUG: org.mybatis.spring.SqlSessionUtils - Creating a new SqlSession
DEBUG: org.mybatis.spring.SqlSessionUtils - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@7cad86ac]
DEBUG: org.mybatis.spring.transaction.SpringManagedTransaction - JDBC Connection [net.sf.log4jdbc.ConnectionSpy@3a7247ec] will be managed by Spring
2024-03-04 13:18:44,489  INFO SQL(simplebot)        :  SELECT Language FROM Account WHERE No = '1636'
DEBUG: org.mybatis.spring.SqlSessionUtils - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@7cad86ac]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@7cad86ac]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@7cad86ac]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@7cad86ac]
DEBUG: first.common.logger.LoggerAspect - Controller  	:  first.builder.controller.BuilderController.getTestPage()
DEBUG: first.common.logger.LoggerAspect - ServiceImpl  	:  first.builder.service.BuilderService.getHostByAccount()
DEBUG: first.common.logger.LoggerAspect - DAO  		:  first.builder.dao.BuilderDAO.getHostByAccount()
DEBUG: first.builder.dao.AbstractDAO - 	 QueryId  	:  builder.getHostByAccount
DEBUG: org.mybatis.spring.SqlSessionUtils - Creating a new SqlSession
DEBUG: org.mybatis.spring.SqlSessionUtils - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@4fc30796]
DEBUG: org.mybatis.spring.transaction.SpringManagedTransaction - JDBC Connection [net.sf.log4jdbc.ConnectionSpy@148381e8] will be managed by Spring
2024-03-04 13:24:48,383  INFO SQL(simplebot)        :  SELECT Host
		From Account
		Where No=1636
DEBUG: org.mybatis.spring.SqlSessionUtils - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@4fc30796]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@4fc30796]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@4fc30796]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@4fc30796]
DEBUG: first.common.logger.LoggerAspect - Controller  	:  first.builder.controller.BuilderController.excelSampleDown()
DEBUG: first.common.logger.LoggerAspect - ServiceImpl  	:  first.builder.service.BuilderService.getChatLang()
DEBUG: first.common.logger.LoggerAspect - DAO  		:  first.builder.dao.BuilderDAO.getChatLang()
DEBUG: first.builder.dao.AbstractDAO - 	 QueryId  	:  builder.getChatLang
DEBUG: org.mybatis.spring.SqlSessionUtils - Creating a new SqlSession
DEBUG: org.mybatis.spring.SqlSessionUtils - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@35702af8]
DEBUG: org.mybatis.spring.transaction.SpringManagedTransaction - JDBC Connection [net.sf.log4jdbc.ConnectionSpy@6704d210] will be managed by Spring
2024-03-04 13:25:32,895  INFO SQL(simplebot)        :  SELECT Language FROM Account WHERE No = '1636'
DEBUG: org.mybatis.spring.SqlSessionUtils - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@35702af8]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@35702af8]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@35702af8]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@35702af8]
DEBUG: first.common.logger.LoggerAspect - Controller  	:  first.builder.controller.BuilderController.chatbotBuilderCommon()
DEBUG: first.common.logger.LoggerAspect - Controller  	:  first.builder.controller.BuilderController.getChatList()
DEBUG: first.common.logger.LoggerAspect - ServiceImpl  	:  first.builder.service.BuilderService.getChatbotList()
DEBUG: first.common.logger.LoggerAspect - DAO  		:  first.builder.dao.BuilderDAO.getChatbotList()
DEBUG: first.builder.dao.AbstractDAO - 	 QueryId  	:  builder.getChatbotList
DEBUG: org.mybatis.spring.SqlSessionUtils - Creating a new SqlSession
DEBUG: org.mybatis.spring.SqlSessionUtils - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@270e0674]
DEBUG: org.mybatis.spring.transaction.SpringManagedTransaction - JDBC Connection [net.sf.log4jdbc.ConnectionSpy@7c8c53f9] will be managed by Spring
2024-03-04 13:30:41,505  INFO SQL(simplebot)        :  SELECT  /* No, Name, Host, Language */
			*
		from Account WHERE 1=1
		AND No IN
		 
				 (  
					'1636'
				 ) 
			 

		 
		ORDER BY No
DEBUG: org.mybatis.spring.SqlSessionUtils - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@270e0674]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@270e0674]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@270e0674]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@270e0674]
DEBUG: first.common.logger.LoggerAspect - Controller  	:  first.builder.controller.BuilderController.builderContentsAnswer()
DEBUG: first.common.logger.LoggerAspect - Controller  	:  first.builder.controller.BuilderController.builderBottomAnswer()
DEBUG: first.common.logger.LoggerAspect - Controller  	:  first.builder.controller.BuilderController.getTask()
DEBUG: first.common.logger.LoggerAspect - ServiceImpl  	:  first.builder.service.BuilderService.getTaskCount()
DEBUG: first.common.logger.LoggerAspect - DAO  		:  first.builder.dao.BuilderDAO.getTaskCount()
DEBUG: first.builder.dao.AbstractDAO - 	 QueryId  	:  builder.getTaskCount
DEBUG: org.mybatis.spring.SqlSessionUtils - Creating a new SqlSession
DEBUG: org.mybatis.spring.SqlSessionUtils - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@27393e77]
DEBUG: org.mybatis.spring.transaction.SpringManagedTransaction - JDBC Connection [net.sf.log4jdbc.ConnectionSpy@45f5bcd9] will be managed by Spring
2024-03-04 13:30:41,563  INFO SQL(simplebot)        :  SELECT COUNT(*) FROM Intent WHERE Account=1636
 and Language=1
DEBUG: org.mybatis.spring.SqlSessionUtils - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@27393e77]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@27393e77]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@27393e77]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@27393e77]
DEBUG: first.common.logger.LoggerAspect - ServiceImpl  	:  first.builder.service.BuilderService.getAnswerList()
DEBUG: first.common.logger.LoggerAspect - DAO  		:  first.builder.dao.BuilderDAO.getAnswerList()
DEBUG: first.builder.dao.AbstractDAO - 	 QueryId  	:  builder.getAnswerList
DEBUG: org.mybatis.spring.SqlSessionUtils - Creating a new SqlSession
DEBUG: org.mybatis.spring.SqlSessionUtils - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@65ab51e]
DEBUG: org.mybatis.spring.transaction.SpringManagedTransaction - JDBC Connection [net.sf.log4jdbc.ConnectionSpy@325fe1cb] will be managed by Spring
2024-03-04 13:30:41,569  INFO SQL(simplebot)        :  SELECT I.No, I.Main, I.Name, A.answer, I.Account
		FROM Intent I LEFT OUTER JOIN Answer A
		ON I.Answer = A.No
		WHERE I.Account=1636
 and I.Language=1
		ORDER BY I.No
		OFFSET 0 ROWS
		FETCH NEXT 15 ROWS ONLY
DEBUG: org.mybatis.spring.SqlSessionUtils - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@65ab51e]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@65ab51e]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@65ab51e]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@65ab51e]
DEBUG: first.common.logger.LoggerAspect - ServiceImpl  	:  first.builder.service.BuilderService.getAllIntents()
DEBUG: first.common.logger.LoggerAspect - DAO  		:  first.builder.dao.BuilderDAO.getAllIntents()
DEBUG: first.builder.dao.AbstractDAO - 	 QueryId  	:  builder.getAllIntents
DEBUG: org.mybatis.spring.SqlSessionUtils - Creating a new SqlSession
DEBUG: org.mybatis.spring.SqlSessionUtils - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1c1e079]
DEBUG: org.mybatis.spring.transaction.SpringManagedTransaction - JDBC Connection [net.sf.log4jdbc.ConnectionSpy@a9f49d0] will be managed by Spring
2024-03-04 13:30:41,575  INFO SQL(simplebot)        :  SELECT I.No, I.Main, I.Name,I.Next, I.URL, I.Language
		FROM Intent I
		WHERE I.Account=1636
		ORDER BY I.No
DEBUG: org.mybatis.spring.SqlSessionUtils - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1c1e079]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1c1e079]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1c1e079]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1c1e079]
DEBUG: first.common.logger.LoggerAspect - ServiceImpl  	:  first.builder.service.BuilderService.getAllBertIntents()
DEBUG: first.common.logger.LoggerAspect - DAO  		:  first.builder.dao.BuilderDAO.getAllBertIntents()
DEBUG: first.builder.dao.AbstractDAO - 	 QueryId  	:  builder.getAllBertIntents
DEBUG: org.mybatis.spring.SqlSessionUtils - Creating a new SqlSession
DEBUG: org.mybatis.spring.SqlSessionUtils - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@7934b9df]
DEBUG: org.mybatis.spring.transaction.SpringManagedTransaction - JDBC Connection [net.sf.log4jdbc.ConnectionSpy@2b07f97a] will be managed by Spring
2024-03-04 13:30:41,580  INFO SQL(simplebot)        :  SELECT B.No, B.Name, B.Language
		FROM BertIntent B LEFT OUTER JOIN BackendInfo BI
		ON B.BertItfId = BI.id
		WHERE BI.host=1636
		ORDER BY B.No
DEBUG: org.mybatis.spring.SqlSessionUtils - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@7934b9df]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@7934b9df]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@7934b9df]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@7934b9df]
DEBUG: first.common.logger.LoggerAspect - Controller  	:  first.builder.controller.BuilderController.getTask()
DEBUG: first.common.logger.LoggerAspect - ServiceImpl  	:  first.builder.service.BuilderService.getTaskCount()
DEBUG: first.common.logger.LoggerAspect - DAO  		:  first.builder.dao.BuilderDAO.getTaskCount()
DEBUG: first.builder.dao.AbstractDAO - 	 QueryId  	:  builder.getTaskCount
DEBUG: org.mybatis.spring.SqlSessionUtils - Creating a new SqlSession
DEBUG: org.mybatis.spring.SqlSessionUtils - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1b2b74ee]
DEBUG: org.mybatis.spring.transaction.SpringManagedTransaction - JDBC Connection [net.sf.log4jdbc.ConnectionSpy@63c3def8] will be managed by Spring
2024-03-04 13:30:41,639  INFO SQL(simplebot)        :  SELECT COUNT(*) FROM Intent WHERE Account=1636
 and Language=1
DEBUG: org.mybatis.spring.SqlSessionUtils - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1b2b74ee]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1b2b74ee]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1b2b74ee]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1b2b74ee]
DEBUG: first.common.logger.LoggerAspect - ServiceImpl  	:  first.builder.service.BuilderService.getAnswerList()
DEBUG: first.common.logger.LoggerAspect - DAO  		:  first.builder.dao.BuilderDAO.getAnswerList()
DEBUG: first.builder.dao.AbstractDAO - 	 QueryId  	:  builder.getAnswerList
DEBUG: org.mybatis.spring.SqlSessionUtils - Creating a new SqlSession
DEBUG: org.mybatis.spring.SqlSessionUtils - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@4eae186]
DEBUG: org.mybatis.spring.transaction.SpringManagedTransaction - JDBC Connection [net.sf.log4jdbc.ConnectionSpy@60baa460] will be managed by Spring
2024-03-04 13:30:41,643  INFO SQL(simplebot)        :  SELECT I.No, I.Main, I.Name, A.answer, I.Account
		FROM Intent I LEFT OUTER JOIN Answer A
		ON I.Answer = A.No
		WHERE I.Account=1636
 and I.Language=1
		ORDER BY I.No
		OFFSET 0 ROWS
		FETCH NEXT 15 ROWS ONLY
DEBUG: org.mybatis.spring.SqlSessionUtils - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@4eae186]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@4eae186]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@4eae186]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@4eae186]
DEBUG: first.common.logger.LoggerAspect - ServiceImpl  	:  first.builder.service.BuilderService.getAllIntents()
DEBUG: first.common.logger.LoggerAspect - DAO  		:  first.builder.dao.BuilderDAO.getAllIntents()
DEBUG: first.builder.dao.AbstractDAO - 	 QueryId  	:  builder.getAllIntents
DEBUG: org.mybatis.spring.SqlSessionUtils - Creating a new SqlSession
DEBUG: org.mybatis.spring.SqlSessionUtils - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@14ed5b35]
DEBUG: org.mybatis.spring.transaction.SpringManagedTransaction - JDBC Connection [net.sf.log4jdbc.ConnectionSpy@1033d495] will be managed by Spring
2024-03-04 13:30:41,649  INFO SQL(simplebot)        :  SELECT I.No, I.Main, I.Name,I.Next, I.URL, I.Language
		FROM Intent I
		WHERE I.Account=1636
		ORDER BY I.No
DEBUG: org.mybatis.spring.SqlSessionUtils - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@14ed5b35]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@14ed5b35]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@14ed5b35]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@14ed5b35]
DEBUG: first.common.logger.LoggerAspect - ServiceImpl  	:  first.builder.service.BuilderService.getAllBertIntents()
DEBUG: first.common.logger.LoggerAspect - DAO  		:  first.builder.dao.BuilderDAO.getAllBertIntents()
DEBUG: first.builder.dao.AbstractDAO - 	 QueryId  	:  builder.getAllBertIntents
DEBUG: org.mybatis.spring.SqlSessionUtils - Creating a new SqlSession
DEBUG: org.mybatis.spring.SqlSessionUtils - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1f39c31e]
DEBUG: org.mybatis.spring.transaction.SpringManagedTransaction - JDBC Connection [net.sf.log4jdbc.ConnectionSpy@35cb5498] will be managed by Spring
2024-03-04 13:30:41,653  INFO SQL(simplebot)        :  SELECT B.No, B.Name, B.Language
		FROM BertIntent B LEFT OUTER JOIN BackendInfo BI
		ON B.BertItfId = BI.id
		WHERE BI.host=1636
		ORDER BY B.No
DEBUG: org.mybatis.spring.SqlSessionUtils - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1f39c31e]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1f39c31e]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1f39c31e]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1f39c31e]
04-Mar-2024 13:31:09.078 INFO [ContainerBackgroundProcessor[StandardEngine[Catalina]]] org.apache.catalina.startup.HostConfig.undeploy Undeploying context [/sds-builder]
04-Mar-2024 13:31:09.093 WARNING [ContainerBackgroundProcessor[StandardEngine[Catalina]]] org.apache.catalina.loader.WebappClassLoaderBase.clearReferencesJdbc The web application [sds-builder] registered the JDBC driver [com.mysql.jdbc.Driver] but failed to unregister it when the web application was stopped. To prevent a memory leak, the JDBC Driver has been forcibly unregistered.
04-Mar-2024 13:31:09.094 WARNING [ContainerBackgroundProcessor[StandardEngine[Catalina]]] org.apache.catalina.loader.WebappClassLoaderBase.clearReferencesJdbc The web application [sds-builder] registered the JDBC driver [net.sf.log4jdbc.DriverSpy] but failed to unregister it when the web application was stopped. To prevent a memory leak, the JDBC Driver has been forcibly unregistered.
04-Mar-2024 13:31:09.094 WARNING [ContainerBackgroundProcessor[StandardEngine[Catalina]]] org.apache.catalina.loader.WebappClassLoaderBase.clearReferencesJdbc The web application [sds-builder] registered the JDBC driver [com.microsoft.sqlserver.jdbc.SQLServerDriver] but failed to unregister it when the web application was stopped. To prevent a memory leak, the JDBC Driver has been forcibly unregistered.
04-Mar-2024 13:31:09.094 WARNING [ContainerBackgroundProcessor[StandardEngine[Catalina]]] org.apache.catalina.loader.WebappClassLoaderBase.clearReferencesThreads The web application [sds-builder] appears to have started a thread named [mysql-cj-abandoned-connection-cleanup] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 java.lang.Object.wait(Native Method)
 java.lang.ref.ReferenceQueue.remove(ReferenceQueue.java:144)
 com.mysql.jdbc.AbandonedConnectionCleanupThread.run(AbandonedConnectionCleanupThread.java:80)
 java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
 java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
 java.lang.Thread.run(Thread.java:750)
04-Mar-2024 13:31:09.159 INFO [localhost-startStop-3] org.apache.catalina.startup.HostConfig.deployWAR Deploying web application archive [/home/minds/maum/sds-builder/apache-tomcat-8.5.99/webapps/sds-builder.war]
04-Mar-2024 13:31:11.092 INFO [mysql-cj-abandoned-connection-cleanup] org.apache.catalina.loader.WebappClassLoaderBase.checkStateForResourceLoading Illegal access: this web application instance has been stopped already. Could not load []. The following stack trace is thrown for debugging purposes as well as to attempt to terminate the thread which caused the illegal access.
	java.lang.IllegalStateException: Illegal access: this web application instance has been stopped already. Could not load []. The following stack trace is thrown for debugging purposes as well as to attempt to terminate the thread which caused the illegal access.
		at org.apache.catalina.loader.WebappClassLoaderBase.checkStateForResourceLoading(WebappClassLoaderBase.java:1358)
		at org.apache.catalina.loader.WebappClassLoaderBase.getResource(WebappClassLoaderBase.java:990)
		at com.mysql.jdbc.AbandonedConnectionCleanupThread.checkThreadContextClassLoader(AbandonedConnectionCleanupThread.java:112)
		at com.mysql.jdbc.AbandonedConnectionCleanupThread.run(AbandonedConnectionCleanupThread.java:79)
		at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
		at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
		at java.lang.Thread.run(Thread.java:750)
04-Mar-2024 13:31:11.093 INFO [mysql-cj-abandoned-connection-cleanup] org.apache.catalina.loader.WebappClassLoaderBase.checkStateForResourceLoading Illegal access: this web application instance has been stopped already. Could not load []. The following stack trace is thrown for debugging purposes as well as to attempt to terminate the thread which caused the illegal access.
	java.lang.IllegalStateException: Illegal access: this web application instance has been stopped already. Could not load []. The following stack trace is thrown for debugging purposes as well as to attempt to terminate the thread which caused the illegal access.
		at org.apache.catalina.loader.WebappClassLoaderBase.checkStateForResourceLoading(WebappClassLoaderBase.java:1358)
		at org.apache.catalina.loader.WebappClassLoaderBase.getResource(WebappClassLoaderBase.java:990)
		at com.mysql.jdbc.AbandonedConnectionCleanupThread.checkThreadContextClassLoader(AbandonedConnectionCleanupThread.java:112)
		at com.mysql.jdbc.AbandonedConnectionCleanupThread.run(AbandonedConnectionCleanupThread.java:79)
		at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
		at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
		at java.lang.Thread.run(Thread.java:750)
04-Mar-2024 13:31:11.093 INFO [mysql-cj-abandoned-connection-cleanup] org.apache.catalina.loader.WebappClassLoaderBase.checkStateForResourceLoading Illegal access: this web application instance has been stopped already. Could not load []. The following stack trace is thrown for debugging purposes as well as to attempt to terminate the thread which caused the illegal access.
	java.lang.IllegalStateException: Illegal access: this web application instance has been stopped already. Could not load []. The following stack trace is thrown for debugging purposes as well as to attempt to terminate the thread which caused the illegal access.
		at org.apache.catalina.loader.WebappClassLoaderBase.checkStateForResourceLoading(WebappClassLoaderBase.java:1358)
		at org.apache.catalina.loader.WebappClassLoaderBase.getResource(WebappClassLoaderBase.java:990)
		at com.mysql.jdbc.AbandonedConnectionCleanupThread.checkThreadContextClassLoader(AbandonedConnectionCleanupThread.java:112)
		at com.mysql.jdbc.AbandonedConnectionCleanupThread.run(AbandonedConnectionCleanupThread.java:79)
		at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
		at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
		at java.lang.Thread.run(Thread.java:750)
04-Mar-2024 13:31:11.093 INFO [mysql-cj-abandoned-connection-cleanup] org.apache.catalina.loader.WebappClassLoaderBase.checkStateForResourceLoading Illegal access: this web application instance has been stopped already. Could not load []. The following stack trace is thrown for debugging purposes as well as to attempt to terminate the thread which caused the illegal access.
	java.lang.IllegalStateException: Illegal access: this web application instance has been stopped already. Could not load []. The following stack trace is thrown for debugging purposes as well as to attempt to terminate the thread which caused the illegal access.
		at org.apache.catalina.loader.WebappClassLoaderBase.checkStateForResourceLoading(WebappClassLoaderBase.java:1358)
		at org.apache.catalina.loader.WebappClassLoaderBase.getResource(WebappClassLoaderBase.java:990)
		at com.mysql.jdbc.AbandonedConnectionCleanupThread.checkThreadContextClassLoader(AbandonedConnectionCleanupThread.java:112)
		at com.mysql.jdbc.AbandonedConnectionCleanupThread.run(AbandonedConnectionCleanupThread.java:79)
		at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
		at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
		at java.lang.Thread.run(Thread.java:750)
04-Mar-2024 13:31:11.602 INFO [localhost-startStop-3] org.apache.jasper.servlet.TldScanner.scanJars At least one JAR was scanned for TLDs yet contained no TLDs. Enable debug logging for this logger for a complete list of JARs that were scanned but no TLDs were found in them. Skipping unneeded JARs during scanning can improve startup time and JSP compilation time.
DEBUG: org.mybatis.spring.SqlSessionFactoryBean - Property 'configuration' or 'configLocation' not specified, using default MyBatis Configuration
DEBUG: org.mybatis.spring.SqlSessionFactoryBean - Parsed mapper file: 'file [/home/minds/maum/sds-builder/apache-tomcat-8.5.99/webapps/sds-builder/WEB-INF/classes/mapper/maria/Chatbot/Builder_SQL.xml]'
DEBUG: org.mybatis.spring.SqlSessionFactoryBean - Parsed mapper file: 'file [/home/minds/maum/sds-builder/apache-tomcat-8.5.99/webapps/sds-builder/WEB-INF/classes/mapper/maria/Chatbot/MaumSDS_SQL.xml]'
DEBUG: org.mybatis.spring.SqlSessionFactoryBean - Property 'configuration' or 'configLocation' not specified, using default MyBatis Configuration
DEBUG: org.mybatis.spring.SqlSessionFactoryBean - Parsed mapper file: 'file [/home/minds/maum/sds-builder/apache-tomcat-8.5.99/webapps/sds-builder/WEB-INF/classes/mapper/maria/HAPPYCALL4/NQA_SQL.xml]'
DEBUG: org.mybatis.spring.SqlSessionFactoryBean - Parsed mapper file: 'file [/home/minds/maum/sds-builder/apache-tomcat-8.5.99/webapps/sds-builder/WEB-INF/classes/mapper/maria/HAPPYCALL4/SimpleBot_SQL.xml]'
SimpleBot Execution Environment : prod
SimpleBot BertIntent itfIP : 0
SimpleBot BertIntent nerIP : 0
SimpleBot BL IP : 125.132.250.244
SimpleBot CM IP : 121.133.247.250
SimpleBot M2U rest address : http://localhost:9990
SimpleBot Style Resources Path : /home/minds/maum/sds-builder/imgUpload
Default Resources Make : chatbot.css
Default Resources Make : chatbot_custom.css
Default Resources Make : chatbot_floating.css
Default Resources Make : IconImg
Default Resources Make : logoImg
Default Resources Make : default
Default Resources Make : mindslab
Default Resources Make : redtie
Default Resource constructed.
DEBUG: first.common.logger.LoggerAspect - ServiceImpl  	:  first.builder.service.BuilderService.getNqaStatusChatbotList()
DEBUG: first.common.logger.LoggerAspect - DAO  		:  first.builder.dao.BuilderDAO.getNqaStatusChatbotList()
DEBUG: first.builder.dao.AbstractDAO - 	 QueryId  	:  builder.getNqaStatusChatbotList
DEBUG: org.mybatis.spring.SqlSessionUtils - Creating a new SqlSession
DEBUG: org.mybatis.spring.SqlSessionUtils - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@72ea5a1e]
DEBUG: org.mybatis.spring.transaction.SpringManagedTransaction - JDBC Connection [net.sf.log4jdbc.ConnectionSpy@671aa862] will be managed by Spring
2024-03-04 13:31:13,061  INFO SQL(simplebot)        :  SELECT No as host, Name, 'preparation' as nqaUploadStatus
 from Account
		ORDER BY No
DEBUG: org.mybatis.spring.SqlSessionUtils - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@72ea5a1e]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@72ea5a1e]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@72ea5a1e]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@72ea5a1e]
04-Mar-2024 13:31:14.211 INFO [localhost-startStop-3] org.apache.catalina.startup.HostConfig.deployWAR Deployment of web application archive [/home/minds/maum/sds-builder/apache-tomcat-8.5.99/webapps/sds-builder.war] has finished in [5,052] ms
DEBUG: first.common.logger.LoggerAspect - Controller  	:  first.builder.controller.BuilderController.chatbotBuilderCommon()
DEBUG: first.common.logger.LoggerAspect - Controller  	:  first.builder.controller.BuilderController.getChatList()
DEBUG: first.common.logger.LoggerAspect - ServiceImpl  	:  first.builder.service.BuilderService.getChatbotList()
DEBUG: first.common.logger.LoggerAspect - DAO  		:  first.builder.dao.BuilderDAO.getChatbotList()
DEBUG: first.builder.dao.AbstractDAO - 	 QueryId  	:  builder.getChatbotList
DEBUG: org.mybatis.spring.SqlSessionUtils - Creating a new SqlSession
DEBUG: org.mybatis.spring.SqlSessionUtils - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@3b29c66e]
DEBUG: org.mybatis.spring.transaction.SpringManagedTransaction - JDBC Connection [net.sf.log4jdbc.ConnectionSpy@4a7ccf06] will be managed by Spring
2024-03-04 13:31:17,961  INFO SQL(simplebot)        :  SELECT  /* No, Name, Host, Language */
			*
		from Account WHERE 1=1
		AND No IN
		 
				 (  
					'1636'
				 ) 
			 

		 
		ORDER BY No
DEBUG: org.mybatis.spring.SqlSessionUtils - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@3b29c66e]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@3b29c66e]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@3b29c66e]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@3b29c66e]
DEBUG: first.common.logger.LoggerAspect - Controller  	:  first.builder.controller.BuilderController.builderBottomAnswer()
DEBUG: first.common.logger.LoggerAspect - Controller  	:  first.builder.controller.BuilderController.builderContentsAnswer()
DEBUG: first.common.logger.LoggerAspect - Controller  	:  first.builder.controller.BuilderController.getTask()
DEBUG: first.common.logger.LoggerAspect - ServiceImpl  	:  first.builder.service.BuilderService.getTaskCount()
DEBUG: first.common.logger.LoggerAspect - DAO  		:  first.builder.dao.BuilderDAO.getTaskCount()
DEBUG: first.builder.dao.AbstractDAO - 	 QueryId  	:  builder.getTaskCount
DEBUG: org.mybatis.spring.SqlSessionUtils - Creating a new SqlSession
DEBUG: org.mybatis.spring.SqlSessionUtils - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@78210f56]
DEBUG: org.mybatis.spring.transaction.SpringManagedTransaction - JDBC Connection [net.sf.log4jdbc.ConnectionSpy@4fec7626] will be managed by Spring
2024-03-04 13:31:18,201  INFO SQL(simplebot)        :  SELECT COUNT(*) FROM Intent WHERE Account=1636
 and Language=1
DEBUG: org.mybatis.spring.SqlSessionUtils - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@78210f56]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@78210f56]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@78210f56]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@78210f56]
DEBUG: first.common.logger.LoggerAspect - ServiceImpl  	:  first.builder.service.BuilderService.getAnswerList()
DEBUG: first.common.logger.LoggerAspect - DAO  		:  first.builder.dao.BuilderDAO.getAnswerList()
DEBUG: first.builder.dao.AbstractDAO - 	 QueryId  	:  builder.getAnswerList
DEBUG: org.mybatis.spring.SqlSessionUtils - Creating a new SqlSession
DEBUG: org.mybatis.spring.SqlSessionUtils - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@6b1da43a]
DEBUG: org.mybatis.spring.transaction.SpringManagedTransaction - JDBC Connection [net.sf.log4jdbc.ConnectionSpy@4b54470f] will be managed by Spring
2024-03-04 13:31:18,205  INFO SQL(simplebot)        :  SELECT I.No, I.Main, I.Name, A.answer, I.Account
		FROM Intent I LEFT OUTER JOIN Answer A
		ON I.Answer = A.No
		WHERE I.Account=1636
 and I.Language=1
		ORDER BY I.No
		OFFSET 0 ROWS
		FETCH NEXT 15 ROWS ONLY
DEBUG: org.mybatis.spring.SqlSessionUtils - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@6b1da43a]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@6b1da43a]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@6b1da43a]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@6b1da43a]
DEBUG: first.common.logger.LoggerAspect - ServiceImpl  	:  first.builder.service.BuilderService.getAllIntents()
DEBUG: first.common.logger.LoggerAspect - DAO  		:  first.builder.dao.BuilderDAO.getAllIntents()
DEBUG: first.builder.dao.AbstractDAO - 	 QueryId  	:  builder.getAllIntents
DEBUG: org.mybatis.spring.SqlSessionUtils - Creating a new SqlSession
DEBUG: org.mybatis.spring.SqlSessionUtils - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@56c48da2]
DEBUG: org.mybatis.spring.transaction.SpringManagedTransaction - JDBC Connection [net.sf.log4jdbc.ConnectionSpy@4d1a8467] will be managed by Spring
2024-03-04 13:31:18,211  INFO SQL(simplebot)        :  SELECT I.No, I.Main, I.Name,I.Next, I.URL, I.Language
		FROM Intent I
		WHERE I.Account=1636
		ORDER BY I.No
DEBUG: org.mybatis.spring.SqlSessionUtils - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@56c48da2]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@56c48da2]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@56c48da2]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@56c48da2]
DEBUG: first.common.logger.LoggerAspect - ServiceImpl  	:  first.builder.service.BuilderService.getAllBertIntents()
DEBUG: first.common.logger.LoggerAspect - DAO  		:  first.builder.dao.BuilderDAO.getAllBertIntents()
DEBUG: first.builder.dao.AbstractDAO - 	 QueryId  	:  builder.getAllBertIntents
DEBUG: org.mybatis.spring.SqlSessionUtils - Creating a new SqlSession
DEBUG: org.mybatis.spring.SqlSessionUtils - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@3e6d6c72]
DEBUG: org.mybatis.spring.transaction.SpringManagedTransaction - JDBC Connection [net.sf.log4jdbc.ConnectionSpy@5b9d4760] will be managed by Spring
2024-03-04 13:31:18,214  INFO SQL(simplebot)        :  SELECT B.No, B.Name, B.Language
		FROM BertIntent B LEFT OUTER JOIN BackendInfo BI
		ON B.BertItfId = BI.id
		WHERE BI.host=1636
		ORDER BY B.No
DEBUG: org.mybatis.spring.SqlSessionUtils - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@3e6d6c72]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@3e6d6c72]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@3e6d6c72]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@3e6d6c72]
DEBUG: first.common.logger.LoggerAspect - Controller  	:  first.builder.controller.BuilderController.getTask()
DEBUG: first.common.logger.LoggerAspect - ServiceImpl  	:  first.builder.service.BuilderService.getTaskCount()
DEBUG: first.common.logger.LoggerAspect - DAO  		:  first.builder.dao.BuilderDAO.getTaskCount()
DEBUG: first.builder.dao.AbstractDAO - 	 QueryId  	:  builder.getTaskCount
DEBUG: org.mybatis.spring.SqlSessionUtils - Creating a new SqlSession
DEBUG: org.mybatis.spring.SqlSessionUtils - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@56baf74]
DEBUG: org.mybatis.spring.transaction.SpringManagedTransaction - JDBC Connection [net.sf.log4jdbc.ConnectionSpy@5f1ea7f1] will be managed by Spring
2024-03-04 13:31:18,249  INFO SQL(simplebot)        :  SELECT COUNT(*) FROM Intent WHERE Account=1636
 and Language=1
DEBUG: org.mybatis.spring.SqlSessionUtils - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@56baf74]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@56baf74]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@56baf74]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@56baf74]
DEBUG: first.common.logger.LoggerAspect - ServiceImpl  	:  first.builder.service.BuilderService.getAnswerList()
DEBUG: first.common.logger.LoggerAspect - DAO  		:  first.builder.dao.BuilderDAO.getAnswerList()
DEBUG: first.builder.dao.AbstractDAO - 	 QueryId  	:  builder.getAnswerList
DEBUG: org.mybatis.spring.SqlSessionUtils - Creating a new SqlSession
DEBUG: org.mybatis.spring.SqlSessionUtils - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@11a0af4d]
DEBUG: org.mybatis.spring.transaction.SpringManagedTransaction - JDBC Connection [net.sf.log4jdbc.ConnectionSpy@1d78d5c3] will be managed by Spring
2024-03-04 13:31:18,253  INFO SQL(simplebot)        :  SELECT I.No, I.Main, I.Name, A.answer, I.Account
		FROM Intent I LEFT OUTER JOIN Answer A
		ON I.Answer = A.No
		WHERE I.Account=1636
 and I.Language=1
		ORDER BY I.No
		OFFSET 0 ROWS
		FETCH NEXT 15 ROWS ONLY
DEBUG: org.mybatis.spring.SqlSessionUtils - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@11a0af4d]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@11a0af4d]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@11a0af4d]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@11a0af4d]
DEBUG: first.common.logger.LoggerAspect - ServiceImpl  	:  first.builder.service.BuilderService.getAllIntents()
DEBUG: first.common.logger.LoggerAspect - DAO  		:  first.builder.dao.BuilderDAO.getAllIntents()
DEBUG: first.builder.dao.AbstractDAO - 	 QueryId  	:  builder.getAllIntents
DEBUG: org.mybatis.spring.SqlSessionUtils - Creating a new SqlSession
DEBUG: org.mybatis.spring.SqlSessionUtils - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@46762e6]
DEBUG: org.mybatis.spring.transaction.SpringManagedTransaction - JDBC Connection [net.sf.log4jdbc.ConnectionSpy@521f81c0] will be managed by Spring
2024-03-04 13:31:18,258  INFO SQL(simplebot)        :  SELECT I.No, I.Main, I.Name,I.Next, I.URL, I.Language
		FROM Intent I
		WHERE I.Account=1636
		ORDER BY I.No
DEBUG: org.mybatis.spring.SqlSessionUtils - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@46762e6]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@46762e6]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@46762e6]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@46762e6]
DEBUG: first.common.logger.LoggerAspect - ServiceImpl  	:  first.builder.service.BuilderService.getAllBertIntents()
DEBUG: first.common.logger.LoggerAspect - DAO  		:  first.builder.dao.BuilderDAO.getAllBertIntents()
DEBUG: first.builder.dao.AbstractDAO - 	 QueryId  	:  builder.getAllBertIntents
DEBUG: org.mybatis.spring.SqlSessionUtils - Creating a new SqlSession
DEBUG: org.mybatis.spring.SqlSessionUtils - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@2045004e]
DEBUG: org.mybatis.spring.transaction.SpringManagedTransaction - JDBC Connection [net.sf.log4jdbc.ConnectionSpy@37031950] will be managed by Spring
2024-03-04 13:31:18,262  INFO SQL(simplebot)        :  SELECT B.No, B.Name, B.Language
		FROM BertIntent B LEFT OUTER JOIN BackendInfo BI
		ON B.BertItfId = BI.id
		WHERE BI.host=1636
		ORDER BY B.No
DEBUG: org.mybatis.spring.SqlSessionUtils - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@2045004e]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@2045004e]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@2045004e]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@2045004e]
DEBUG: first.common.logger.LoggerAspect - Controller  	:  first.builder.controller.BuilderController.getTestPage()
DEBUG: first.common.logger.LoggerAspect - ServiceImpl  	:  first.builder.service.BuilderService.getHostByAccount()
DEBUG: first.common.logger.LoggerAspect - DAO  		:  first.builder.dao.BuilderDAO.getHostByAccount()
DEBUG: first.builder.dao.AbstractDAO - 	 QueryId  	:  builder.getHostByAccount
DEBUG: org.mybatis.spring.SqlSessionUtils - Creating a new SqlSession
DEBUG: org.mybatis.spring.SqlSessionUtils - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@58f30422]
DEBUG: org.mybatis.spring.transaction.SpringManagedTransaction - JDBC Connection [net.sf.log4jdbc.ConnectionSpy@265c74e4] will be managed by Spring
2024-03-04 13:31:19,803  INFO SQL(simplebot)        :  SELECT Host
		From Account
		Where No=1636
DEBUG: org.mybatis.spring.SqlSessionUtils - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@58f30422]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@58f30422]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@58f30422]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@58f30422]
DEBUG: first.common.logger.LoggerAspect - Controller  	:  first.builder.controller.BuilderController.chatbotBuilderCommon()
DEBUG: first.common.logger.LoggerAspect - Controller  	:  first.builder.controller.BuilderController.getChatList()
DEBUG: first.common.logger.LoggerAspect - ServiceImpl  	:  first.builder.service.BuilderService.getChatbotList()
DEBUG: first.common.logger.LoggerAspect - DAO  		:  first.builder.dao.BuilderDAO.getChatbotList()
DEBUG: first.builder.dao.AbstractDAO - 	 QueryId  	:  builder.getChatbotList
DEBUG: org.mybatis.spring.SqlSessionUtils - Creating a new SqlSession
DEBUG: org.mybatis.spring.SqlSessionUtils - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@7ce6b7dd]
DEBUG: org.mybatis.spring.transaction.SpringManagedTransaction - JDBC Connection [net.sf.log4jdbc.ConnectionSpy@13b4f504] will be managed by Spring
2024-03-04 13:31:45,989  INFO SQL(simplebot)        :  SELECT  /* No, Name, Host, Language */
			*
		from Account WHERE 1=1
		AND No IN
		 
				 (  
					'1636'
				 ) 
			 

		 
		ORDER BY No
DEBUG: org.mybatis.spring.SqlSessionUtils - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@7ce6b7dd]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@7ce6b7dd]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@7ce6b7dd]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@7ce6b7dd]
DEBUG: first.common.logger.LoggerAspect - Controller  	:  first.builder.controller.BuilderController.builderContentsAnswer()
DEBUG: first.common.logger.LoggerAspect - Controller  	:  first.builder.controller.BuilderController.builderBottomAnswer()
DEBUG: first.common.logger.LoggerAspect - Controller  	:  first.builder.controller.BuilderController.getTask()
DEBUG: first.common.logger.LoggerAspect - ServiceImpl  	:  first.builder.service.BuilderService.getTaskCount()
DEBUG: first.common.logger.LoggerAspect - DAO  		:  first.builder.dao.BuilderDAO.getTaskCount()
DEBUG: first.builder.dao.AbstractDAO - 	 QueryId  	:  builder.getTaskCount
DEBUG: org.mybatis.spring.SqlSessionUtils - Creating a new SqlSession
DEBUG: org.mybatis.spring.SqlSessionUtils - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1c360f23]
DEBUG: org.mybatis.spring.transaction.SpringManagedTransaction - JDBC Connection [net.sf.log4jdbc.ConnectionSpy@9f70e04] will be managed by Spring
2024-03-04 13:31:46,124  INFO SQL(simplebot)        :  SELECT COUNT(*) FROM Intent WHERE Account=1636
 and Language=1
DEBUG: org.mybatis.spring.SqlSessionUtils - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1c360f23]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1c360f23]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1c360f23]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1c360f23]
DEBUG: first.common.logger.LoggerAspect - ServiceImpl  	:  first.builder.service.BuilderService.getAnswerList()
DEBUG: first.common.logger.LoggerAspect - DAO  		:  first.builder.dao.BuilderDAO.getAnswerList()
DEBUG: first.builder.dao.AbstractDAO - 	 QueryId  	:  builder.getAnswerList
DEBUG: org.mybatis.spring.SqlSessionUtils - Creating a new SqlSession
DEBUG: org.mybatis.spring.SqlSessionUtils - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@2e864a23]
DEBUG: org.mybatis.spring.transaction.SpringManagedTransaction - JDBC Connection [net.sf.log4jdbc.ConnectionSpy@2f89339b] will be managed by Spring
2024-03-04 13:31:46,128  INFO SQL(simplebot)        :  SELECT I.No, I.Main, I.Name, A.answer, I.Account
		FROM Intent I LEFT OUTER JOIN Answer A
		ON I.Answer = A.No
		WHERE I.Account=1636
 and I.Language=1
		ORDER BY I.No
		OFFSET 0 ROWS
		FETCH NEXT 15 ROWS ONLY
DEBUG: org.mybatis.spring.SqlSessionUtils - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@2e864a23]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@2e864a23]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@2e864a23]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@2e864a23]
DEBUG: first.common.logger.LoggerAspect - ServiceImpl  	:  first.builder.service.BuilderService.getAllIntents()
DEBUG: first.common.logger.LoggerAspect - DAO  		:  first.builder.dao.BuilderDAO.getAllIntents()
DEBUG: first.builder.dao.AbstractDAO - 	 QueryId  	:  builder.getAllIntents
DEBUG: org.mybatis.spring.SqlSessionUtils - Creating a new SqlSession
DEBUG: org.mybatis.spring.SqlSessionUtils - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@27383654]
DEBUG: org.mybatis.spring.transaction.SpringManagedTransaction - JDBC Connection [net.sf.log4jdbc.ConnectionSpy@7ac3c7d0] will be managed by Spring
2024-03-04 13:31:46,133  INFO SQL(simplebot)        :  SELECT I.No, I.Main, I.Name,I.Next, I.URL, I.Language
		FROM Intent I
		WHERE I.Account=1636
		ORDER BY I.No
DEBUG: org.mybatis.spring.SqlSessionUtils - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@27383654]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@27383654]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@27383654]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@27383654]
DEBUG: first.common.logger.LoggerAspect - ServiceImpl  	:  first.builder.service.BuilderService.getAllBertIntents()
DEBUG: first.common.logger.LoggerAspect - DAO  		:  first.builder.dao.BuilderDAO.getAllBertIntents()
DEBUG: first.builder.dao.AbstractDAO - 	 QueryId  	:  builder.getAllBertIntents
DEBUG: org.mybatis.spring.SqlSessionUtils - Creating a new SqlSession
DEBUG: org.mybatis.spring.SqlSessionUtils - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@668f546e]
DEBUG: org.mybatis.spring.transaction.SpringManagedTransaction - JDBC Connection [net.sf.log4jdbc.ConnectionSpy@725a22c6] will be managed by Spring
2024-03-04 13:31:46,137  INFO SQL(simplebot)        :  SELECT B.No, B.Name, B.Language
		FROM BertIntent B LEFT OUTER JOIN BackendInfo BI
		ON B.BertItfId = BI.id
		WHERE BI.host=1636
		ORDER BY B.No
DEBUG: org.mybatis.spring.SqlSessionUtils - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@668f546e]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@668f546e]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@668f546e]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@668f546e]
DEBUG: first.common.logger.LoggerAspect - Controller  	:  first.builder.controller.BuilderController.getTask()
DEBUG: first.common.logger.LoggerAspect - ServiceImpl  	:  first.builder.service.BuilderService.getTaskCount()
DEBUG: first.common.logger.LoggerAspect - DAO  		:  first.builder.dao.BuilderDAO.getTaskCount()
DEBUG: first.builder.dao.AbstractDAO - 	 QueryId  	:  builder.getTaskCount
DEBUG: org.mybatis.spring.SqlSessionUtils - Creating a new SqlSession
DEBUG: org.mybatis.spring.SqlSessionUtils - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@47bf89f3]
DEBUG: org.mybatis.spring.transaction.SpringManagedTransaction - JDBC Connection [net.sf.log4jdbc.ConnectionSpy@7101178d] will be managed by Spring
2024-03-04 13:31:46,163  INFO SQL(simplebot)        :  SELECT COUNT(*) FROM Intent WHERE Account=1636
 and Language=1
DEBUG: org.mybatis.spring.SqlSessionUtils - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@47bf89f3]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@47bf89f3]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@47bf89f3]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@47bf89f3]
DEBUG: first.common.logger.LoggerAspect - ServiceImpl  	:  first.builder.service.BuilderService.getAnswerList()
DEBUG: first.common.logger.LoggerAspect - DAO  		:  first.builder.dao.BuilderDAO.getAnswerList()
DEBUG: first.builder.dao.AbstractDAO - 	 QueryId  	:  builder.getAnswerList
DEBUG: org.mybatis.spring.SqlSessionUtils - Creating a new SqlSession
DEBUG: org.mybatis.spring.SqlSessionUtils - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@66ca8eda]
DEBUG: org.mybatis.spring.transaction.SpringManagedTransaction - JDBC Connection [net.sf.log4jdbc.ConnectionSpy@ac73c5e] will be managed by Spring
2024-03-04 13:31:46,167  INFO SQL(simplebot)        :  SELECT I.No, I.Main, I.Name, A.answer, I.Account
		FROM Intent I LEFT OUTER JOIN Answer A
		ON I.Answer = A.No
		WHERE I.Account=1636
 and I.Language=1
		ORDER BY I.No
		OFFSET 0 ROWS
		FETCH NEXT 15 ROWS ONLY
DEBUG: org.mybatis.spring.SqlSessionUtils - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@66ca8eda]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@66ca8eda]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@66ca8eda]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@66ca8eda]
DEBUG: first.common.logger.LoggerAspect - ServiceImpl  	:  first.builder.service.BuilderService.getAllIntents()
DEBUG: first.common.logger.LoggerAspect - DAO  		:  first.builder.dao.BuilderDAO.getAllIntents()
DEBUG: first.builder.dao.AbstractDAO - 	 QueryId  	:  builder.getAllIntents
DEBUG: org.mybatis.spring.SqlSessionUtils - Creating a new SqlSession
DEBUG: org.mybatis.spring.SqlSessionUtils - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@4556be9]
DEBUG: org.mybatis.spring.transaction.SpringManagedTransaction - JDBC Connection [net.sf.log4jdbc.ConnectionSpy@2c3dad] will be managed by Spring
2024-03-04 13:31:46,171  INFO SQL(simplebot)        :  SELECT I.No, I.Main, I.Name,I.Next, I.URL, I.Language
		FROM Intent I
		WHERE I.Account=1636
		ORDER BY I.No
DEBUG: org.mybatis.spring.SqlSessionUtils - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@4556be9]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@4556be9]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@4556be9]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@4556be9]
DEBUG: first.common.logger.LoggerAspect - ServiceImpl  	:  first.builder.service.BuilderService.getAllBertIntents()
DEBUG: first.common.logger.LoggerAspect - DAO  		:  first.builder.dao.BuilderDAO.getAllBertIntents()
DEBUG: first.builder.dao.AbstractDAO - 	 QueryId  	:  builder.getAllBertIntents
DEBUG: org.mybatis.spring.SqlSessionUtils - Creating a new SqlSession
DEBUG: org.mybatis.spring.SqlSessionUtils - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1ea47ba7]
DEBUG: org.mybatis.spring.transaction.SpringManagedTransaction - JDBC Connection [net.sf.log4jdbc.ConnectionSpy@2148b864] will be managed by Spring
2024-03-04 13:31:46,175  INFO SQL(simplebot)        :  SELECT B.No, B.Name, B.Language
		FROM BertIntent B LEFT OUTER JOIN BackendInfo BI
		ON B.BertItfId = BI.id
		WHERE BI.host=1636
		ORDER BY B.No
DEBUG: org.mybatis.spring.SqlSessionUtils - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1ea47ba7]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1ea47ba7]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1ea47ba7]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1ea47ba7]
DEBUG: first.common.logger.LoggerAspect - Controller  	:  first.builder.controller.BuilderController.chatbotBuilderCommon()
DEBUG: first.common.logger.LoggerAspect - Controller  	:  first.builder.controller.BuilderController.getChatList()
DEBUG: first.common.logger.LoggerAspect - ServiceImpl  	:  first.builder.service.BuilderService.getChatbotList()
DEBUG: first.common.logger.LoggerAspect - DAO  		:  first.builder.dao.BuilderDAO.getChatbotList()
DEBUG: first.builder.dao.AbstractDAO - 	 QueryId  	:  builder.getChatbotList
DEBUG: org.mybatis.spring.SqlSessionUtils - Creating a new SqlSession
DEBUG: org.mybatis.spring.SqlSessionUtils - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@4a62bf89]
DEBUG: org.mybatis.spring.transaction.SpringManagedTransaction - JDBC Connection [net.sf.log4jdbc.ConnectionSpy@105d7d44] will be managed by Spring
2024-03-04 13:31:48,259  INFO SQL(simplebot)        :  SELECT  /* No, Name, Host, Language */
			*
		from Account WHERE 1=1
		AND No IN
		 
				 (  
					'1636'
				 ) 
			 

		 
		ORDER BY No
DEBUG: org.mybatis.spring.SqlSessionUtils - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@4a62bf89]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@4a62bf89]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@4a62bf89]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@4a62bf89]
DEBUG: first.common.logger.LoggerAspect - Controller  	:  first.builder.controller.BuilderController.builderBottomAnswer()
DEBUG: first.common.logger.LoggerAspect - Controller  	:  first.builder.controller.BuilderController.builderContentsAnswer()
DEBUG: first.common.logger.LoggerAspect - Controller  	:  first.builder.controller.BuilderController.getTask()
DEBUG: first.common.logger.LoggerAspect - ServiceImpl  	:  first.builder.service.BuilderService.getTaskCount()
DEBUG: first.common.logger.LoggerAspect - DAO  		:  first.builder.dao.BuilderDAO.getTaskCount()
DEBUG: first.builder.dao.AbstractDAO - 	 QueryId  	:  builder.getTaskCount
DEBUG: org.mybatis.spring.SqlSessionUtils - Creating a new SqlSession
DEBUG: org.mybatis.spring.SqlSessionUtils - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@40c0cb31]
DEBUG: org.mybatis.spring.transaction.SpringManagedTransaction - JDBC Connection [net.sf.log4jdbc.ConnectionSpy@1bd4366b] will be managed by Spring
2024-03-04 13:31:48,318  INFO SQL(simplebot)        :  SELECT COUNT(*) FROM Intent WHERE Account=1636
 and Language=1
DEBUG: org.mybatis.spring.SqlSessionUtils - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@40c0cb31]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@40c0cb31]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@40c0cb31]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@40c0cb31]
DEBUG: first.common.logger.LoggerAspect - ServiceImpl  	:  first.builder.service.BuilderService.getAnswerList()
DEBUG: first.common.logger.LoggerAspect - DAO  		:  first.builder.dao.BuilderDAO.getAnswerList()
DEBUG: first.builder.dao.AbstractDAO - 	 QueryId  	:  builder.getAnswerList
DEBUG: org.mybatis.spring.SqlSessionUtils - Creating a new SqlSession
DEBUG: org.mybatis.spring.SqlSessionUtils - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@43741239]
DEBUG: org.mybatis.spring.transaction.SpringManagedTransaction - JDBC Connection [net.sf.log4jdbc.ConnectionSpy@2a8121b] will be managed by Spring
2024-03-04 13:31:48,322  INFO SQL(simplebot)        :  SELECT I.No, I.Main, I.Name, A.answer, I.Account
		FROM Intent I LEFT OUTER JOIN Answer A
		ON I.Answer = A.No
		WHERE I.Account=1636
 and I.Language=1
		ORDER BY I.No
		OFFSET 0 ROWS
		FETCH NEXT 15 ROWS ONLY
DEBUG: org.mybatis.spring.SqlSessionUtils - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@43741239]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@43741239]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@43741239]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@43741239]
DEBUG: first.common.logger.LoggerAspect - ServiceImpl  	:  first.builder.service.BuilderService.getAllIntents()
DEBUG: first.common.logger.LoggerAspect - DAO  		:  first.builder.dao.BuilderDAO.getAllIntents()
DEBUG: first.builder.dao.AbstractDAO - 	 QueryId  	:  builder.getAllIntents
DEBUG: org.mybatis.spring.SqlSessionUtils - Creating a new SqlSession
DEBUG: org.mybatis.spring.SqlSessionUtils - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@b04ad60]
DEBUG: org.mybatis.spring.transaction.SpringManagedTransaction - JDBC Connection [net.sf.log4jdbc.ConnectionSpy@5809730] will be managed by Spring
2024-03-04 13:31:48,326  INFO SQL(simplebot)        :  SELECT I.No, I.Main, I.Name,I.Next, I.URL, I.Language
		FROM Intent I
		WHERE I.Account=1636
		ORDER BY I.No
DEBUG: org.mybatis.spring.SqlSessionUtils - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@b04ad60]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@b04ad60]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@b04ad60]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@b04ad60]
DEBUG: first.common.logger.LoggerAspect - ServiceImpl  	:  first.builder.service.BuilderService.getAllBertIntents()
DEBUG: first.common.logger.LoggerAspect - DAO  		:  first.builder.dao.BuilderDAO.getAllBertIntents()
DEBUG: first.builder.dao.AbstractDAO - 	 QueryId  	:  builder.getAllBertIntents
DEBUG: org.mybatis.spring.SqlSessionUtils - Creating a new SqlSession
DEBUG: org.mybatis.spring.SqlSessionUtils - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@4c3651ea]
DEBUG: org.mybatis.spring.transaction.SpringManagedTransaction - JDBC Connection [net.sf.log4jdbc.ConnectionSpy@1eb08a3] will be managed by Spring
2024-03-04 13:31:48,330  INFO SQL(simplebot)        :  SELECT B.No, B.Name, B.Language
		FROM BertIntent B LEFT OUTER JOIN BackendInfo BI
		ON B.BertItfId = BI.id
		WHERE BI.host=1636
		ORDER BY B.No
DEBUG: org.mybatis.spring.SqlSessionUtils - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@4c3651ea]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@4c3651ea]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@4c3651ea]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@4c3651ea]
DEBUG: first.common.logger.LoggerAspect - Controller  	:  first.builder.controller.BuilderController.getTask()
DEBUG: first.common.logger.LoggerAspect - ServiceImpl  	:  first.builder.service.BuilderService.getTaskCount()
DEBUG: first.common.logger.LoggerAspect - DAO  		:  first.builder.dao.BuilderDAO.getTaskCount()
DEBUG: first.builder.dao.AbstractDAO - 	 QueryId  	:  builder.getTaskCount
DEBUG: org.mybatis.spring.SqlSessionUtils - Creating a new SqlSession
DEBUG: org.mybatis.spring.SqlSessionUtils - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@fa4bcb0]
DEBUG: org.mybatis.spring.transaction.SpringManagedTransaction - JDBC Connection [net.sf.log4jdbc.ConnectionSpy@6ed2122e] will be managed by Spring
2024-03-04 13:31:48,395  INFO SQL(simplebot)        :  SELECT COUNT(*) FROM Intent WHERE Account=1636
 and Language=1
DEBUG: org.mybatis.spring.SqlSessionUtils - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@fa4bcb0]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@fa4bcb0]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@fa4bcb0]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@fa4bcb0]
DEBUG: first.common.logger.LoggerAspect - ServiceImpl  	:  first.builder.service.BuilderService.getAnswerList()
DEBUG: first.common.logger.LoggerAspect - DAO  		:  first.builder.dao.BuilderDAO.getAnswerList()
DEBUG: first.builder.dao.AbstractDAO - 	 QueryId  	:  builder.getAnswerList
DEBUG: org.mybatis.spring.SqlSessionUtils - Creating a new SqlSession
DEBUG: org.mybatis.spring.SqlSessionUtils - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@2543c6a1]
DEBUG: org.mybatis.spring.transaction.SpringManagedTransaction - JDBC Connection [net.sf.log4jdbc.ConnectionSpy@6f998659] will be managed by Spring
2024-03-04 13:31:48,400  INFO SQL(simplebot)        :  SELECT I.No, I.Main, I.Name, A.answer, I.Account
		FROM Intent I LEFT OUTER JOIN Answer A
		ON I.Answer = A.No
		WHERE I.Account=1636
 and I.Language=1
		ORDER BY I.No
		OFFSET 0 ROWS
		FETCH NEXT 15 ROWS ONLY
DEBUG: org.mybatis.spring.SqlSessionUtils - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@2543c6a1]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@2543c6a1]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@2543c6a1]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@2543c6a1]
DEBUG: first.common.logger.LoggerAspect - ServiceImpl  	:  first.builder.service.BuilderService.getAllIntents()
DEBUG: first.common.logger.LoggerAspect - DAO  		:  first.builder.dao.BuilderDAO.getAllIntents()
DEBUG: first.builder.dao.AbstractDAO - 	 QueryId  	:  builder.getAllIntents
DEBUG: org.mybatis.spring.SqlSessionUtils - Creating a new SqlSession
DEBUG: org.mybatis.spring.SqlSessionUtils - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@51993784]
DEBUG: org.mybatis.spring.transaction.SpringManagedTransaction - JDBC Connection [net.sf.log4jdbc.ConnectionSpy@40aaf1f0] will be managed by Spring
2024-03-04 13:31:48,406  INFO SQL(simplebot)        :  SELECT I.No, I.Main, I.Name,I.Next, I.URL, I.Language
		FROM Intent I
		WHERE I.Account=1636
		ORDER BY I.No
DEBUG: org.mybatis.spring.SqlSessionUtils - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@51993784]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@51993784]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@51993784]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@51993784]
DEBUG: first.common.logger.LoggerAspect - ServiceImpl  	:  first.builder.service.BuilderService.getAllBertIntents()
DEBUG: first.common.logger.LoggerAspect - DAO  		:  first.builder.dao.BuilderDAO.getAllBertIntents()
DEBUG: first.builder.dao.AbstractDAO - 	 QueryId  	:  builder.getAllBertIntents
DEBUG: org.mybatis.spring.SqlSessionUtils - Creating a new SqlSession
DEBUG: org.mybatis.spring.SqlSessionUtils - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@7947d9f4]
DEBUG: org.mybatis.spring.transaction.SpringManagedTransaction - JDBC Connection [net.sf.log4jdbc.ConnectionSpy@5608c195] will be managed by Spring
2024-03-04 13:31:48,411  INFO SQL(simplebot)        :  SELECT B.No, B.Name, B.Language
		FROM BertIntent B LEFT OUTER JOIN BackendInfo BI
		ON B.BertItfId = BI.id
		WHERE BI.host=1636
		ORDER BY B.No
DEBUG: org.mybatis.spring.SqlSessionUtils - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@7947d9f4]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@7947d9f4]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@7947d9f4]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@7947d9f4]
DEBUG: first.common.logger.LoggerAspect - Controller  	:  first.builder.controller.BuilderController.getTestPage()
DEBUG: first.common.logger.LoggerAspect - ServiceImpl  	:  first.builder.service.BuilderService.getHostByAccount()
DEBUG: first.common.logger.LoggerAspect - DAO  		:  first.builder.dao.BuilderDAO.getHostByAccount()
DEBUG: first.builder.dao.AbstractDAO - 	 QueryId  	:  builder.getHostByAccount
DEBUG: org.mybatis.spring.SqlSessionUtils - Creating a new SqlSession
DEBUG: org.mybatis.spring.SqlSessionUtils - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@4c93e02]
DEBUG: org.mybatis.spring.transaction.SpringManagedTransaction - JDBC Connection [net.sf.log4jdbc.ConnectionSpy@4555e771] will be managed by Spring
2024-03-04 13:31:49,268  INFO SQL(simplebot)        :  SELECT Host
		From Account
		Where No=1636
DEBUG: org.mybatis.spring.SqlSessionUtils - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@4c93e02]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@4c93e02]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@4c93e02]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@4c93e02]
DEBUG: first.common.logger.LoggerAspect - Controller  	:  first.builder.controller.BuilderController.chatbotBuilderCommon()
DEBUG: first.common.logger.LoggerAspect - Controller  	:  first.builder.controller.BuilderController.getChatList()
DEBUG: first.common.logger.LoggerAspect - ServiceImpl  	:  first.builder.service.BuilderService.getChatbotList()
DEBUG: first.common.logger.LoggerAspect - DAO  		:  first.builder.dao.BuilderDAO.getChatbotList()
DEBUG: first.builder.dao.AbstractDAO - 	 QueryId  	:  builder.getChatbotList
DEBUG: org.mybatis.spring.SqlSessionUtils - Creating a new SqlSession
DEBUG: org.mybatis.spring.SqlSessionUtils - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@7169ea10]
DEBUG: org.mybatis.spring.transaction.SpringManagedTransaction - JDBC Connection [net.sf.log4jdbc.ConnectionSpy@1967ee37] will be managed by Spring
2024-03-04 13:33:49,759  INFO SQL(simplebot)        :  SELECT  /* No, Name, Host, Language */
			*
		from Account WHERE 1=1
		AND No IN
		 
				 (  
					'1636'
				 ) 
			 

		 
		ORDER BY No
DEBUG: org.mybatis.spring.SqlSessionUtils - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@7169ea10]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@7169ea10]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@7169ea10]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@7169ea10]
DEBUG: first.common.logger.LoggerAspect - Controller  	:  first.builder.controller.BuilderController.builderContentsAnswer()
DEBUG: first.common.logger.LoggerAspect - Controller  	:  first.builder.controller.BuilderController.builderBottomAnswer()
DEBUG: first.common.logger.LoggerAspect - Controller  	:  first.builder.controller.BuilderController.getTask()
DEBUG: first.common.logger.LoggerAspect - ServiceImpl  	:  first.builder.service.BuilderService.getTaskCount()
DEBUG: first.common.logger.LoggerAspect - DAO  		:  first.builder.dao.BuilderDAO.getTaskCount()
DEBUG: first.builder.dao.AbstractDAO - 	 QueryId  	:  builder.getTaskCount
DEBUG: org.mybatis.spring.SqlSessionUtils - Creating a new SqlSession
DEBUG: org.mybatis.spring.SqlSessionUtils - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@2370ae21]
DEBUG: org.mybatis.spring.transaction.SpringManagedTransaction - JDBC Connection [net.sf.log4jdbc.ConnectionSpy@93fc7f9] will be managed by Spring
2024-03-04 13:33:49,916  INFO SQL(simplebot)        :  SELECT COUNT(*) FROM Intent WHERE Account=1636
 and Language=1
DEBUG: org.mybatis.spring.SqlSessionUtils - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@2370ae21]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@2370ae21]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@2370ae21]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@2370ae21]
DEBUG: first.common.logger.LoggerAspect - ServiceImpl  	:  first.builder.service.BuilderService.getAnswerList()
DEBUG: first.common.logger.LoggerAspect - DAO  		:  first.builder.dao.BuilderDAO.getAnswerList()
DEBUG: first.builder.dao.AbstractDAO - 	 QueryId  	:  builder.getAnswerList
DEBUG: org.mybatis.spring.SqlSessionUtils - Creating a new SqlSession
DEBUG: org.mybatis.spring.SqlSessionUtils - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@2132180]
DEBUG: org.mybatis.spring.transaction.SpringManagedTransaction - JDBC Connection [net.sf.log4jdbc.ConnectionSpy@2697b95b] will be managed by Spring
2024-03-04 13:33:49,920  INFO SQL(simplebot)        :  SELECT I.No, I.Main, I.Name, A.answer, I.Account
		FROM Intent I LEFT OUTER JOIN Answer A
		ON I.Answer = A.No
		WHERE I.Account=1636
 and I.Language=1
		ORDER BY I.No
		OFFSET 0 ROWS
		FETCH NEXT 15 ROWS ONLY
DEBUG: org.mybatis.spring.SqlSessionUtils - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@2132180]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@2132180]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@2132180]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@2132180]
DEBUG: first.common.logger.LoggerAspect - ServiceImpl  	:  first.builder.service.BuilderService.getAllIntents()
DEBUG: first.common.logger.LoggerAspect - DAO  		:  first.builder.dao.BuilderDAO.getAllIntents()
DEBUG: first.builder.dao.AbstractDAO - 	 QueryId  	:  builder.getAllIntents
DEBUG: org.mybatis.spring.SqlSessionUtils - Creating a new SqlSession
DEBUG: org.mybatis.spring.SqlSessionUtils - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@726f9b7e]
DEBUG: org.mybatis.spring.transaction.SpringManagedTransaction - JDBC Connection [net.sf.log4jdbc.ConnectionSpy@7148cd13] will be managed by Spring
2024-03-04 13:33:49,924  INFO SQL(simplebot)        :  SELECT I.No, I.Main, I.Name,I.Next, I.URL, I.Language
		FROM Intent I
		WHERE I.Account=1636
		ORDER BY I.No
DEBUG: org.mybatis.spring.SqlSessionUtils - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@726f9b7e]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@726f9b7e]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@726f9b7e]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@726f9b7e]
DEBUG: first.common.logger.LoggerAspect - ServiceImpl  	:  first.builder.service.BuilderService.getAllBertIntents()
DEBUG: first.common.logger.LoggerAspect - DAO  		:  first.builder.dao.BuilderDAO.getAllBertIntents()
DEBUG: first.builder.dao.AbstractDAO - 	 QueryId  	:  builder.getAllBertIntents
DEBUG: org.mybatis.spring.SqlSessionUtils - Creating a new SqlSession
DEBUG: org.mybatis.spring.SqlSessionUtils - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@4fd9345f]
DEBUG: org.mybatis.spring.transaction.SpringManagedTransaction - JDBC Connection [net.sf.log4jdbc.ConnectionSpy@3043d9c9] will be managed by Spring
2024-03-04 13:33:49,927  INFO SQL(simplebot)        :  SELECT B.No, B.Name, B.Language
		FROM BertIntent B LEFT OUTER JOIN BackendInfo BI
		ON B.BertItfId = BI.id
		WHERE BI.host=1636
		ORDER BY B.No
DEBUG: org.mybatis.spring.SqlSessionUtils - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@4fd9345f]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@4fd9345f]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@4fd9345f]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@4fd9345f]
DEBUG: first.common.logger.LoggerAspect - Controller  	:  first.builder.controller.BuilderController.getTask()
DEBUG: first.common.logger.LoggerAspect - ServiceImpl  	:  first.builder.service.BuilderService.getTaskCount()
DEBUG: first.common.logger.LoggerAspect - DAO  		:  first.builder.dao.BuilderDAO.getTaskCount()
DEBUG: first.builder.dao.AbstractDAO - 	 QueryId  	:  builder.getTaskCount
DEBUG: org.mybatis.spring.SqlSessionUtils - Creating a new SqlSession
DEBUG: org.mybatis.spring.SqlSessionUtils - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@22f26e91]
DEBUG: org.mybatis.spring.transaction.SpringManagedTransaction - JDBC Connection [net.sf.log4jdbc.ConnectionSpy@1fadc0b9] will be managed by Spring
2024-03-04 13:33:49,969  INFO SQL(simplebot)        :  SELECT COUNT(*) FROM Intent WHERE Account=1636
 and Language=1
DEBUG: org.mybatis.spring.SqlSessionUtils - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@22f26e91]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@22f26e91]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@22f26e91]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@22f26e91]
DEBUG: first.common.logger.LoggerAspect - ServiceImpl  	:  first.builder.service.BuilderService.getAnswerList()
DEBUG: first.common.logger.LoggerAspect - DAO  		:  first.builder.dao.BuilderDAO.getAnswerList()
DEBUG: first.builder.dao.AbstractDAO - 	 QueryId  	:  builder.getAnswerList
DEBUG: org.mybatis.spring.SqlSessionUtils - Creating a new SqlSession
DEBUG: org.mybatis.spring.SqlSessionUtils - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@3917082]
DEBUG: org.mybatis.spring.transaction.SpringManagedTransaction - JDBC Connection [net.sf.log4jdbc.ConnectionSpy@2a6defc5] will be managed by Spring
2024-03-04 13:33:49,973  INFO SQL(simplebot)        :  SELECT I.No, I.Main, I.Name, A.answer, I.Account
		FROM Intent I LEFT OUTER JOIN Answer A
		ON I.Answer = A.No
		WHERE I.Account=1636
 and I.Language=1
		ORDER BY I.No
		OFFSET 0 ROWS
		FETCH NEXT 15 ROWS ONLY
DEBUG: org.mybatis.spring.SqlSessionUtils - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@3917082]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@3917082]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@3917082]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@3917082]
DEBUG: first.common.logger.LoggerAspect - ServiceImpl  	:  first.builder.service.BuilderService.getAllIntents()
DEBUG: first.common.logger.LoggerAspect - DAO  		:  first.builder.dao.BuilderDAO.getAllIntents()
DEBUG: first.builder.dao.AbstractDAO - 	 QueryId  	:  builder.getAllIntents
DEBUG: org.mybatis.spring.SqlSessionUtils - Creating a new SqlSession
DEBUG: org.mybatis.spring.SqlSessionUtils - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@76b5f227]
DEBUG: org.mybatis.spring.transaction.SpringManagedTransaction - JDBC Connection [net.sf.log4jdbc.ConnectionSpy@449ebbd1] will be managed by Spring
2024-03-04 13:33:49,976  INFO SQL(simplebot)        :  SELECT I.No, I.Main, I.Name,I.Next, I.URL, I.Language
		FROM Intent I
		WHERE I.Account=1636
		ORDER BY I.No
DEBUG: org.mybatis.spring.SqlSessionUtils - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@76b5f227]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@76b5f227]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@76b5f227]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@76b5f227]
DEBUG: first.common.logger.LoggerAspect - ServiceImpl  	:  first.builder.service.BuilderService.getAllBertIntents()
DEBUG: first.common.logger.LoggerAspect - DAO  		:  first.builder.dao.BuilderDAO.getAllBertIntents()
DEBUG: first.builder.dao.AbstractDAO - 	 QueryId  	:  builder.getAllBertIntents
DEBUG: org.mybatis.spring.SqlSessionUtils - Creating a new SqlSession
DEBUG: org.mybatis.spring.SqlSessionUtils - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@77339cb4]
DEBUG: org.mybatis.spring.transaction.SpringManagedTransaction - JDBC Connection [net.sf.log4jdbc.ConnectionSpy@3ee0b4b4] will be managed by Spring
2024-03-04 13:33:49,980  INFO SQL(simplebot)        :  SELECT B.No, B.Name, B.Language
		FROM BertIntent B LEFT OUTER JOIN BackendInfo BI
		ON B.BertItfId = BI.id
		WHERE BI.host=1636
		ORDER BY B.No
DEBUG: org.mybatis.spring.SqlSessionUtils - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@77339cb4]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@77339cb4]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@77339cb4]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@77339cb4]
DEBUG: first.common.logger.LoggerAspect - Controller  	:  first.builder.controller.BuilderController.getTestPage()
DEBUG: first.common.logger.LoggerAspect - ServiceImpl  	:  first.builder.service.BuilderService.getHostByAccount()
DEBUG: first.common.logger.LoggerAspect - DAO  		:  first.builder.dao.BuilderDAO.getHostByAccount()
DEBUG: first.builder.dao.AbstractDAO - 	 QueryId  	:  builder.getHostByAccount
DEBUG: org.mybatis.spring.SqlSessionUtils - Creating a new SqlSession
DEBUG: org.mybatis.spring.SqlSessionUtils - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@418f2d8]
DEBUG: org.mybatis.spring.transaction.SpringManagedTransaction - JDBC Connection [net.sf.log4jdbc.ConnectionSpy@4b3d806d] will be managed by Spring
2024-03-04 13:33:50,921  INFO SQL(simplebot)        :  SELECT Host
		From Account
		Where No=1636
DEBUG: org.mybatis.spring.SqlSessionUtils - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@418f2d8]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@418f2d8]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@418f2d8]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@418f2d8]
04-Mar-2024 13:34:54.241 INFO [ContainerBackgroundProcessor[StandardEngine[Catalina]]] org.apache.catalina.startup.HostConfig.undeploy Undeploying context [/sds-builder]
04-Mar-2024 13:34:54.258 WARNING [ContainerBackgroundProcessor[StandardEngine[Catalina]]] org.apache.catalina.loader.WebappClassLoaderBase.clearReferencesJdbc The web application [sds-builder] registered the JDBC driver [com.mysql.jdbc.Driver] but failed to unregister it when the web application was stopped. To prevent a memory leak, the JDBC Driver has been forcibly unregistered.
04-Mar-2024 13:34:54.258 WARNING [ContainerBackgroundProcessor[StandardEngine[Catalina]]] org.apache.catalina.loader.WebappClassLoaderBase.clearReferencesJdbc The web application [sds-builder] registered the JDBC driver [net.sf.log4jdbc.DriverSpy] but failed to unregister it when the web application was stopped. To prevent a memory leak, the JDBC Driver has been forcibly unregistered.
04-Mar-2024 13:34:54.258 WARNING [ContainerBackgroundProcessor[StandardEngine[Catalina]]] org.apache.catalina.loader.WebappClassLoaderBase.clearReferencesJdbc The web application [sds-builder] registered the JDBC driver [com.microsoft.sqlserver.jdbc.SQLServerDriver] but failed to unregister it when the web application was stopped. To prevent a memory leak, the JDBC Driver has been forcibly unregistered.
04-Mar-2024 13:34:54.258 WARNING [ContainerBackgroundProcessor[StandardEngine[Catalina]]] org.apache.catalina.loader.WebappClassLoaderBase.clearReferencesThreads The web application [sds-builder] appears to have started a thread named [mysql-cj-abandoned-connection-cleanup] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 java.lang.Object.wait(Native Method)
 java.lang.ref.ReferenceQueue.remove(ReferenceQueue.java:144)
 com.mysql.jdbc.AbandonedConnectionCleanupThread.run(AbandonedConnectionCleanupThread.java:80)
 java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
 java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
 java.lang.Thread.run(Thread.java:750)
04-Mar-2024 13:34:54.324 INFO [localhost-startStop-4] org.apache.catalina.startup.HostConfig.deployWAR Deploying web application archive [/home/minds/maum/sds-builder/apache-tomcat-8.5.99/webapps/sds-builder.war]
04-Mar-2024 13:34:56.407 INFO [localhost-startStop-4] org.apache.jasper.servlet.TldScanner.scanJars At least one JAR was scanned for TLDs yet contained no TLDs. Enable debug logging for this logger for a complete list of JARs that were scanned but no TLDs were found in them. Skipping unneeded JARs during scanning can improve startup time and JSP compilation time.
DEBUG: org.mybatis.spring.SqlSessionFactoryBean - Property 'configuration' or 'configLocation' not specified, using default MyBatis Configuration
DEBUG: org.mybatis.spring.SqlSessionFactoryBean - Parsed mapper file: 'file [/home/minds/maum/sds-builder/apache-tomcat-8.5.99/webapps/sds-builder/WEB-INF/classes/mapper/maria/Chatbot/Builder_SQL.xml]'
DEBUG: org.mybatis.spring.SqlSessionFactoryBean - Parsed mapper file: 'file [/home/minds/maum/sds-builder/apache-tomcat-8.5.99/webapps/sds-builder/WEB-INF/classes/mapper/maria/Chatbot/MaumSDS_SQL.xml]'
DEBUG: org.mybatis.spring.SqlSessionFactoryBean - Property 'configuration' or 'configLocation' not specified, using default MyBatis Configuration
DEBUG: org.mybatis.spring.SqlSessionFactoryBean - Parsed mapper file: 'file [/home/minds/maum/sds-builder/apache-tomcat-8.5.99/webapps/sds-builder/WEB-INF/classes/mapper/maria/HAPPYCALL4/NQA_SQL.xml]'
DEBUG: org.mybatis.spring.SqlSessionFactoryBean - Parsed mapper file: 'file [/home/minds/maum/sds-builder/apache-tomcat-8.5.99/webapps/sds-builder/WEB-INF/classes/mapper/maria/HAPPYCALL4/SimpleBot_SQL.xml]'
SimpleBot Execution Environment : prod
SimpleBot BertIntent itfIP : 0
SimpleBot BertIntent nerIP : 0
SimpleBot BL IP : 125.132.250.244
SimpleBot CM IP : 121.133.247.250
SimpleBot M2U rest address : http://localhost:9990
SimpleBot Style Resources Path : /home/minds/maum/sds-builder/imgUpload
Default Resources Make : chatbot.css
Default Resources Make : chatbot_custom.css
Default Resources Make : chatbot_floating.css
Default Resources Make : IconImg
Default Resources Make : logoImg
Default Resources Make : default
Default Resources Make : mindslab
Default Resources Make : redtie
Default Resource constructed.
DEBUG: first.common.logger.LoggerAspect - ServiceImpl  	:  first.builder.service.BuilderService.getNqaStatusChatbotList()
DEBUG: first.common.logger.LoggerAspect - DAO  		:  first.builder.dao.BuilderDAO.getNqaStatusChatbotList()
DEBUG: first.builder.dao.AbstractDAO - 	 QueryId  	:  builder.getNqaStatusChatbotList
DEBUG: org.mybatis.spring.SqlSessionUtils - Creating a new SqlSession
DEBUG: org.mybatis.spring.SqlSessionUtils - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@3709113f]
DEBUG: org.mybatis.spring.transaction.SpringManagedTransaction - JDBC Connection [net.sf.log4jdbc.ConnectionSpy@3d71d725] will be managed by Spring
2024-03-04 13:34:57,978  INFO SQL(simplebot)        :  SELECT No as host, Name, 'preparation' as nqaUploadStatus
 from Account
		ORDER BY No
DEBUG: org.mybatis.spring.SqlSessionUtils - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@3709113f]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@3709113f]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@3709113f]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@3709113f]
04-Mar-2024 13:34:58.611 INFO [mysql-cj-abandoned-connection-cleanup] org.apache.catalina.loader.WebappClassLoaderBase.checkStateForResourceLoading Illegal access: this web application instance has been stopped already. Could not load []. The following stack trace is thrown for debugging purposes as well as to attempt to terminate the thread which caused the illegal access.
	java.lang.IllegalStateException: Illegal access: this web application instance has been stopped already. Could not load []. The following stack trace is thrown for debugging purposes as well as to attempt to terminate the thread which caused the illegal access.
		at org.apache.catalina.loader.WebappClassLoaderBase.checkStateForResourceLoading(WebappClassLoaderBase.java:1358)
		at org.apache.catalina.loader.WebappClassLoaderBase.getResource(WebappClassLoaderBase.java:990)
		at com.mysql.jdbc.AbandonedConnectionCleanupThread.checkThreadContextClassLoader(AbandonedConnectionCleanupThread.java:112)
		at com.mysql.jdbc.AbandonedConnectionCleanupThread.run(AbandonedConnectionCleanupThread.java:79)
		at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
		at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
		at java.lang.Thread.run(Thread.java:750)
04-Mar-2024 13:34:58.913 INFO [localhost-startStop-4] org.apache.catalina.startup.HostConfig.deployWAR Deployment of web application archive [/home/minds/maum/sds-builder/apache-tomcat-8.5.99/webapps/sds-builder.war] has finished in [4,590] ms
DEBUG: first.common.logger.LoggerAspect - Controller  	:  first.builder.controller.BuilderController.chatbotBuilderCommon()
DEBUG: first.common.logger.LoggerAspect - Controller  	:  first.builder.controller.BuilderController.getChatList()
DEBUG: first.common.logger.LoggerAspect - ServiceImpl  	:  first.builder.service.BuilderService.getChatbotList()
DEBUG: first.common.logger.LoggerAspect - DAO  		:  first.builder.dao.BuilderDAO.getChatbotList()
DEBUG: first.builder.dao.AbstractDAO - 	 QueryId  	:  builder.getChatbotList
DEBUG: org.mybatis.spring.SqlSessionUtils - Creating a new SqlSession
DEBUG: org.mybatis.spring.SqlSessionUtils - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@51f941dc]
DEBUG: org.mybatis.spring.transaction.SpringManagedTransaction - JDBC Connection [net.sf.log4jdbc.ConnectionSpy@3a1c1311] will be managed by Spring
2024-03-04 13:35:10,566  INFO SQL(simplebot)        :  SELECT  /* No, Name, Host, Language */
			*
		from Account WHERE 1=1
		AND No IN
		 
				 (  
					'1636'
				 ) 
			 

		 
		ORDER BY No
DEBUG: org.mybatis.spring.SqlSessionUtils - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@51f941dc]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@51f941dc]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@51f941dc]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@51f941dc]
DEBUG: first.common.logger.LoggerAspect - Controller  	:  first.builder.controller.BuilderController.builderBottomAnswer()
DEBUG: first.common.logger.LoggerAspect - Controller  	:  first.builder.controller.BuilderController.builderContentsAnswer()
DEBUG: first.common.logger.LoggerAspect - Controller  	:  first.builder.controller.BuilderController.getTask()
DEBUG: first.common.logger.LoggerAspect - ServiceImpl  	:  first.builder.service.BuilderService.getTaskCount()
DEBUG: first.common.logger.LoggerAspect - DAO  		:  first.builder.dao.BuilderDAO.getTaskCount()
DEBUG: first.builder.dao.AbstractDAO - 	 QueryId  	:  builder.getTaskCount
DEBUG: org.mybatis.spring.SqlSessionUtils - Creating a new SqlSession
DEBUG: org.mybatis.spring.SqlSessionUtils - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@59e7599c]
DEBUG: org.mybatis.spring.transaction.SpringManagedTransaction - JDBC Connection [net.sf.log4jdbc.ConnectionSpy@2cdb371c] will be managed by Spring
2024-03-04 13:35:10,785  INFO SQL(simplebot)        :  SELECT COUNT(*) FROM Intent WHERE Account=1636
 and Language=1
DEBUG: org.mybatis.spring.SqlSessionUtils - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@59e7599c]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@59e7599c]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@59e7599c]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@59e7599c]
DEBUG: first.common.logger.LoggerAspect - ServiceImpl  	:  first.builder.service.BuilderService.getAnswerList()
DEBUG: first.common.logger.LoggerAspect - DAO  		:  first.builder.dao.BuilderDAO.getAnswerList()
DEBUG: first.builder.dao.AbstractDAO - 	 QueryId  	:  builder.getAnswerList
DEBUG: org.mybatis.spring.SqlSessionUtils - Creating a new SqlSession
DEBUG: org.mybatis.spring.SqlSessionUtils - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@5e654150]
DEBUG: org.mybatis.spring.transaction.SpringManagedTransaction - JDBC Connection [net.sf.log4jdbc.ConnectionSpy@4ef02e72] will be managed by Spring
2024-03-04 13:35:10,789  INFO SQL(simplebot)        :  SELECT I.No, I.Main, I.Name, A.answer, I.Account
		FROM Intent I LEFT OUTER JOIN Answer A
		ON I.Answer = A.No
		WHERE I.Account=1636
 and I.Language=1
		ORDER BY I.No
		OFFSET 0 ROWS
		FETCH NEXT 15 ROWS ONLY
DEBUG: org.mybatis.spring.SqlSessionUtils - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@5e654150]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@5e654150]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@5e654150]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@5e654150]
DEBUG: first.common.logger.LoggerAspect - ServiceImpl  	:  first.builder.service.BuilderService.getAllIntents()
DEBUG: first.common.logger.LoggerAspect - DAO  		:  first.builder.dao.BuilderDAO.getAllIntents()
DEBUG: first.builder.dao.AbstractDAO - 	 QueryId  	:  builder.getAllIntents
DEBUG: org.mybatis.spring.SqlSessionUtils - Creating a new SqlSession
DEBUG: org.mybatis.spring.SqlSessionUtils - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@f6b9008]
DEBUG: org.mybatis.spring.transaction.SpringManagedTransaction - JDBC Connection [net.sf.log4jdbc.ConnectionSpy@e13216c] will be managed by Spring
2024-03-04 13:35:10,795  INFO SQL(simplebot)        :  SELECT I.No, I.Main, I.Name,I.Next, I.URL, I.Language
		FROM Intent I
		WHERE I.Account=1636
		ORDER BY I.No
DEBUG: org.mybatis.spring.SqlSessionUtils - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@f6b9008]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@f6b9008]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@f6b9008]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@f6b9008]
DEBUG: first.common.logger.LoggerAspect - ServiceImpl  	:  first.builder.service.BuilderService.getAllBertIntents()
DEBUG: first.common.logger.LoggerAspect - DAO  		:  first.builder.dao.BuilderDAO.getAllBertIntents()
DEBUG: first.builder.dao.AbstractDAO - 	 QueryId  	:  builder.getAllBertIntents
DEBUG: org.mybatis.spring.SqlSessionUtils - Creating a new SqlSession
DEBUG: org.mybatis.spring.SqlSessionUtils - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@66351bab]
DEBUG: org.mybatis.spring.transaction.SpringManagedTransaction - JDBC Connection [net.sf.log4jdbc.ConnectionSpy@3dea7dc1] will be managed by Spring
2024-03-04 13:35:10,799  INFO SQL(simplebot)        :  SELECT B.No, B.Name, B.Language
		FROM BertIntent B LEFT OUTER JOIN BackendInfo BI
		ON B.BertItfId = BI.id
		WHERE BI.host=1636
		ORDER BY B.No
DEBUG: org.mybatis.spring.SqlSessionUtils - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@66351bab]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@66351bab]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@66351bab]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@66351bab]
DEBUG: first.common.logger.LoggerAspect - Controller  	:  first.builder.controller.BuilderController.getTask()
DEBUG: first.common.logger.LoggerAspect - ServiceImpl  	:  first.builder.service.BuilderService.getTaskCount()
DEBUG: first.common.logger.LoggerAspect - DAO  		:  first.builder.dao.BuilderDAO.getTaskCount()
DEBUG: first.builder.dao.AbstractDAO - 	 QueryId  	:  builder.getTaskCount
DEBUG: org.mybatis.spring.SqlSessionUtils - Creating a new SqlSession
DEBUG: org.mybatis.spring.SqlSessionUtils - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@6aacf41f]
DEBUG: org.mybatis.spring.transaction.SpringManagedTransaction - JDBC Connection [net.sf.log4jdbc.ConnectionSpy@2ad5fa0a] will be managed by Spring
2024-03-04 13:35:10,822  INFO SQL(simplebot)        :  SELECT COUNT(*) FROM Intent WHERE Account=1636
 and Language=1
DEBUG: org.mybatis.spring.SqlSessionUtils - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@6aacf41f]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@6aacf41f]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@6aacf41f]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@6aacf41f]
DEBUG: first.common.logger.LoggerAspect - ServiceImpl  	:  first.builder.service.BuilderService.getAnswerList()
DEBUG: first.common.logger.LoggerAspect - DAO  		:  first.builder.dao.BuilderDAO.getAnswerList()
DEBUG: first.builder.dao.AbstractDAO - 	 QueryId  	:  builder.getAnswerList
DEBUG: org.mybatis.spring.SqlSessionUtils - Creating a new SqlSession
DEBUG: org.mybatis.spring.SqlSessionUtils - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@3a59f901]
DEBUG: org.mybatis.spring.transaction.SpringManagedTransaction - JDBC Connection [net.sf.log4jdbc.ConnectionSpy@76b11270] will be managed by Spring
2024-03-04 13:35:10,826  INFO SQL(simplebot)        :  SELECT I.No, I.Main, I.Name, A.answer, I.Account
		FROM Intent I LEFT OUTER JOIN Answer A
		ON I.Answer = A.No
		WHERE I.Account=1636
 and I.Language=1
		ORDER BY I.No
		OFFSET 0 ROWS
		FETCH NEXT 15 ROWS ONLY
DEBUG: org.mybatis.spring.SqlSessionUtils - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@3a59f901]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@3a59f901]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@3a59f901]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@3a59f901]
DEBUG: first.common.logger.LoggerAspect - ServiceImpl  	:  first.builder.service.BuilderService.getAllIntents()
DEBUG: first.common.logger.LoggerAspect - DAO  		:  first.builder.dao.BuilderDAO.getAllIntents()
DEBUG: first.builder.dao.AbstractDAO - 	 QueryId  	:  builder.getAllIntents
DEBUG: org.mybatis.spring.SqlSessionUtils - Creating a new SqlSession
DEBUG: org.mybatis.spring.SqlSessionUtils - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@57a0c3cf]
DEBUG: org.mybatis.spring.transaction.SpringManagedTransaction - JDBC Connection [net.sf.log4jdbc.ConnectionSpy@baa957b] will be managed by Spring
2024-03-04 13:35:10,831  INFO SQL(simplebot)        :  SELECT I.No, I.Main, I.Name,I.Next, I.URL, I.Language
		FROM Intent I
		WHERE I.Account=1636
		ORDER BY I.No
DEBUG: org.mybatis.spring.SqlSessionUtils - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@57a0c3cf]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@57a0c3cf]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@57a0c3cf]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@57a0c3cf]
DEBUG: first.common.logger.LoggerAspect - ServiceImpl  	:  first.builder.service.BuilderService.getAllBertIntents()
DEBUG: first.common.logger.LoggerAspect - DAO  		:  first.builder.dao.BuilderDAO.getAllBertIntents()
DEBUG: first.builder.dao.AbstractDAO - 	 QueryId  	:  builder.getAllBertIntents
DEBUG: org.mybatis.spring.SqlSessionUtils - Creating a new SqlSession
DEBUG: org.mybatis.spring.SqlSessionUtils - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@27d5fbe4]
DEBUG: org.mybatis.spring.transaction.SpringManagedTransaction - JDBC Connection [net.sf.log4jdbc.ConnectionSpy@8aa94e4] will be managed by Spring
2024-03-04 13:35:10,836  INFO SQL(simplebot)        :  SELECT B.No, B.Name, B.Language
		FROM BertIntent B LEFT OUTER JOIN BackendInfo BI
		ON B.BertItfId = BI.id
		WHERE BI.host=1636
		ORDER BY B.No
DEBUG: org.mybatis.spring.SqlSessionUtils - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@27d5fbe4]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@27d5fbe4]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@27d5fbe4]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@27d5fbe4]
DEBUG: first.common.logger.LoggerAspect - Controller  	:  first.builder.controller.BuilderController.getTestPage()
DEBUG: first.common.logger.LoggerAspect - ServiceImpl  	:  first.builder.service.BuilderService.getHostByAccount()
DEBUG: first.common.logger.LoggerAspect - DAO  		:  first.builder.dao.BuilderDAO.getHostByAccount()
DEBUG: first.builder.dao.AbstractDAO - 	 QueryId  	:  builder.getHostByAccount
DEBUG: org.mybatis.spring.SqlSessionUtils - Creating a new SqlSession
DEBUG: org.mybatis.spring.SqlSessionUtils - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@3c064923]
DEBUG: org.mybatis.spring.transaction.SpringManagedTransaction - JDBC Connection [net.sf.log4jdbc.ConnectionSpy@416f85bb] will be managed by Spring
2024-03-04 13:35:12,795  INFO SQL(simplebot)        :  SELECT Host
		From Account
		Where No=1636
DEBUG: org.mybatis.spring.SqlSessionUtils - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@3c064923]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@3c064923]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@3c064923]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@3c064923]
DEBUG: first.common.logger.LoggerAspect - Controller  	:  first.builder.controller.BuilderController.delHost()
DEBUG: first.common.logger.LoggerAspect - ServiceImpl  	:  first.builder.service.BuilderService.selectIntentForDelete()
DEBUG: first.common.logger.LoggerAspect - DAO  		:  first.builder.dao.BuilderDAO.selectIntentForDelete()
DEBUG: first.builder.dao.AbstractDAO - 	 QueryId  	:  builder.selectIntentForDelete
DEBUG: org.mybatis.spring.SqlSessionUtils - Creating a new SqlSession
DEBUG: org.mybatis.spring.SqlSessionUtils - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@5162d7be]
DEBUG: org.mybatis.spring.transaction.SpringManagedTransaction - JDBC Connection [net.sf.log4jdbc.ConnectionSpy@627f655d] will be managed by Spring
2024-03-04 13:35:34,563  INFO SQL(simplebot)        :  SELECT No, Answer
		FROM Intent
		WHERE Account=1636
DEBUG: org.mybatis.spring.SqlSessionUtils - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@5162d7be]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@5162d7be]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@5162d7be]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@5162d7be]
DEBUG: first.common.logger.LoggerAspect - ServiceImpl  	:  first.builder.service.BuilderService.selectBackendInfoForDelete()
DEBUG: first.common.logger.LoggerAspect - DAO  		:  first.builder.dao.BuilderDAO.selectBackendInfoForDelete()
DEBUG: first.builder.dao.AbstractDAO - 	 QueryId  	:  builder.selectBackendInfoForDelete
DEBUG: org.mybatis.spring.SqlSessionUtils - Creating a new SqlSession
DEBUG: org.mybatis.spring.SqlSessionUtils - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@3bdc0ba8]
DEBUG: org.mybatis.spring.transaction.SpringManagedTransaction - JDBC Connection [net.sf.log4jdbc.ConnectionSpy@3e09d162] will be managed by Spring
2024-03-04 13:35:34,568  INFO SQL(simplebot)        :  SELECT id
		FROM BackendInfo
		WHERE host=1636
DEBUG: org.mybatis.spring.SqlSessionUtils - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@3bdc0ba8]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@3bdc0ba8]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@3bdc0ba8]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@3bdc0ba8]
DEBUG: first.common.logger.LoggerAspect - ServiceImpl  	:  first.builder.service.BuilderService.deleteIntentRelByHost()
DEBUG: first.common.logger.LoggerAspect - DAO  		:  first.builder.dao.BuilderDAO.deleteIntentRelByHost()
DEBUG: first.builder.dao.AbstractDAO - 	 QueryId  	:  builder.deleteIntentRelByHost
DEBUG: org.mybatis.spring.SqlSessionUtils - Creating a new SqlSession
DEBUG: org.mybatis.spring.SqlSessionUtils - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@75a98a7b]
DEBUG: org.mybatis.spring.transaction.SpringManagedTransaction - JDBC Connection [net.sf.log4jdbc.ConnectionSpy@5934cc3d] will be managed by Spring
2024-03-04 13:35:34,576  INFO SQL(simplebot)        :  delete
 from IntentRel
		where (SrcIntent=1723132 OR DestIntent=1723132)
DEBUG: org.mybatis.spring.SqlSessionUtils - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@75a98a7b]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@75a98a7b]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@75a98a7b]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@75a98a7b]
DEBUG: first.common.logger.LoggerAspect - ServiceImpl  	:  first.builder.service.BuilderService.selectBertIntentForDelete()
DEBUG: first.common.logger.LoggerAspect - DAO  		:  first.builder.dao.BuilderDAO.selectBertIntentForDelete()
DEBUG: first.builder.dao.AbstractDAO - 	 QueryId  	:  builder.selectBertIntentForDelete
DEBUG: org.mybatis.spring.SqlSessionUtils - Creating a new SqlSession
DEBUG: org.mybatis.spring.SqlSessionUtils - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@6f3f530]
DEBUG: org.mybatis.spring.transaction.SpringManagedTransaction - JDBC Connection [net.sf.log4jdbc.ConnectionSpy@7ad56eee] will be managed by Spring
2024-03-04 13:35:34,581  INFO SQL(simplebot)        :  SELECT No
		FROM BertIntent
		WHERE (BertItfId = 3145 OR BertItfId = 3146 )
DEBUG: org.mybatis.spring.SqlSessionUtils - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@6f3f530]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@6f3f530]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@6f3f530]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@6f3f530]
DEBUG: first.common.logger.LoggerAspect - ServiceImpl  	:  first.builder.service.BuilderService.deleteBertIntentByHost()
DEBUG: first.common.logger.LoggerAspect - DAO  		:  first.builder.dao.BuilderDAO.deleteBertIntentByHost()
DEBUG: first.builder.dao.AbstractDAO - 	 QueryId  	:  builder.deleteBertIntentByHost
DEBUG: org.mybatis.spring.SqlSessionUtils - Creating a new SqlSession
DEBUG: org.mybatis.spring.SqlSessionUtils - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@251a79bd]
DEBUG: org.mybatis.spring.transaction.SpringManagedTransaction - JDBC Connection [net.sf.log4jdbc.ConnectionSpy@865a728] will be managed by Spring
2024-03-04 13:35:34,587  INFO SQL(simplebot)        :  delete
 from BertIntent
		where (BertItfId = 3145 OR BertItfId = 3146 )
DEBUG: org.mybatis.spring.SqlSessionUtils - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@251a79bd]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@251a79bd]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@251a79bd]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@251a79bd]
DEBUG: first.common.logger.LoggerAspect - ServiceImpl  	:  first.builder.service.BuilderService.selectRegexIntentForDelete()
DEBUG: first.common.logger.LoggerAspect - DAO  		:  first.builder.dao.BuilderDAO.selectRegexIntentForDelete()
DEBUG: first.builder.dao.AbstractDAO - 	 QueryId  	:  builder.selectRegexIntentForDelete
DEBUG: org.mybatis.spring.SqlSessionUtils - Creating a new SqlSession
DEBUG: org.mybatis.spring.SqlSessionUtils - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@295510c]
DEBUG: org.mybatis.spring.transaction.SpringManagedTransaction - JDBC Connection [net.sf.log4jdbc.ConnectionSpy@6a814a84] will be managed by Spring
2024-03-04 13:35:34,600  INFO SQL(simplebot)        :  SELECT No
		FROM RegexIntent
		WHERE Host = NULL
DEBUG: org.mybatis.spring.SqlSessionUtils - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@295510c]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@295510c]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@295510c]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@295510c]
DEBUG: first.common.logger.LoggerAspect - ServiceImpl  	:  first.builder.service.BuilderService.deleteBertSentenceByHost()
DEBUG: first.common.logger.LoggerAspect - DAO  		:  first.builder.dao.BuilderDAO.deleteBertSentenceByHost()
DEBUG: first.builder.dao.AbstractDAO - 	 QueryId  	:  builder.deleteBertSentenceByHost
DEBUG: org.mybatis.spring.SqlSessionUtils - Creating a new SqlSession
DEBUG: org.mybatis.spring.SqlSessionUtils - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1688d190]
DEBUG: org.mybatis.spring.transaction.SpringManagedTransaction - JDBC Connection [net.sf.log4jdbc.ConnectionSpy@258e56f2] will be managed by Spring
2024-03-04 13:35:34,604  INFO SQL(simplebot)        :  delete
 from BertSentence
		where (BertIntentNo=923466)
DEBUG: org.mybatis.spring.SqlSessionUtils - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1688d190]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1688d190]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1688d190]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1688d190]
DEBUG: first.common.logger.LoggerAspect - ServiceImpl  	:  first.builder.service.BuilderService.deleteAccountByHost()
DEBUG: first.common.logger.LoggerAspect - DAO  		:  first.builder.dao.BuilderDAO.deleteAccountByHost()
DEBUG: first.builder.dao.AbstractDAO - 	 QueryId  	:  builder.deleteAccountByHost
DEBUG: org.mybatis.spring.SqlSessionUtils - Creating a new SqlSession
DEBUG: org.mybatis.spring.SqlSessionUtils - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@6d7b2921]
DEBUG: org.mybatis.spring.transaction.SpringManagedTransaction - JDBC Connection [net.sf.log4jdbc.ConnectionSpy@79ce4200] will be managed by Spring
2024-03-04 13:35:34,608  INFO SQL(simplebot)        :  delete
 from Account
 where No = 1636;
		delete
 from Intent
 where Account = 1636;
		delete
 from Answer
 where Account = 1636;
		delete
 from BackendInfo
 where host = 1636;
		delete
 from style_css
 where host = 1636;
		delete
 from RegexIntent
 where Host = 1636;
		delete
 from ReplaceDict
 where Host = 1636;
		delete
 from Fallback
 where Host = 1636;
DEBUG: org.mybatis.spring.SqlSessionUtils - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@6d7b2921]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@6d7b2921]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@6d7b2921]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@6d7b2921]
DEBUG: first.common.logger.LoggerAspect - ServiceImpl  	:  first.builder.service.BuilderService.deleteEntities()
DEBUG: first.common.logger.LoggerAspect - DAO  		:  first.builder.dao.BuilderDAO.deleteEntities()
DEBUG: first.builder.dao.AbstractDAO - 	 QueryId  	:  builder.deleteEntities
DEBUG: org.mybatis.spring.SqlSessionUtils - Creating a new SqlSession
DEBUG: org.mybatis.spring.SqlSessionUtils - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@11526fc5]
DEBUG: org.mybatis.spring.transaction.SpringManagedTransaction - JDBC Connection [net.sf.log4jdbc.ConnectionSpy@641153ca] will be managed by Spring
2024-03-04 13:35:34,626  INFO SQL(simplebot)        :  delete
 from Entities
 where Account = 1636
DEBUG: org.mybatis.spring.SqlSessionUtils - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@11526fc5]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@11526fc5]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@11526fc5]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@11526fc5]
DEBUG: first.common.logger.LoggerAspect - Controller  	:  first.builder.controller.BuilderController.getChatList()
DEBUG: first.common.logger.LoggerAspect - ServiceImpl  	:  first.builder.service.BuilderService.getChatbotList()
DEBUG: first.common.logger.LoggerAspect - DAO  		:  first.builder.dao.BuilderDAO.getChatbotList()
DEBUG: first.builder.dao.AbstractDAO - 	 QueryId  	:  builder.getChatbotList
DEBUG: org.mybatis.spring.SqlSessionUtils - Creating a new SqlSession
DEBUG: org.mybatis.spring.SqlSessionUtils - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@7baddac]
DEBUG: org.mybatis.spring.transaction.SpringManagedTransaction - JDBC Connection [net.sf.log4jdbc.ConnectionSpy@62274a65] will be managed by Spring
2024-03-04 13:35:34,659  INFO SQL(simplebot)        :  SELECT  /* No, Name, Host, Language */
			*
		from Account WHERE 1=1
		AND No IN
		 (0) 

		 
		ORDER BY No
DEBUG: org.mybatis.spring.SqlSessionUtils - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@7baddac]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@7baddac]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@7baddac]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@7baddac]
DEBUG: first.common.logger.LoggerAspect - Controller  	:  first.builder.controller.BuilderController.builderBottomnewChatbot()
DEBUG: first.common.logger.LoggerAspect - Controller  	:  first.builder.controller.BuilderController.builderContentsNewChatbot()
DEBUG: first.common.logger.LoggerAspect - ServiceImpl  	:  first.builder.service.BuilderService.getDomain()
DEBUG: first.common.logger.LoggerAspect - DAO  		:  first.builder.dao.BuilderDAO.getDomain()
DEBUG: first.builder.dao.AbstractDAO - 	 QueryId  	:  builder.getDomain
DEBUG: org.mybatis.spring.SqlSessionUtils - Creating a new SqlSession
DEBUG: org.mybatis.spring.SqlSessionUtils - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@3dd5c3b1]
DEBUG: org.mybatis.spring.transaction.SpringManagedTransaction - JDBC Connection [net.sf.log4jdbc.ConnectionSpy@64d9085f] will be managed by Spring
2024-03-04 13:35:36,738  INFO SQL(simplebot)        :  SELECT Name, DefaultHost
		From Domain
DEBUG: org.mybatis.spring.SqlSessionUtils - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@3dd5c3b1]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@3dd5c3b1]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@3dd5c3b1]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@3dd5c3b1]
DEBUG: first.common.logger.LoggerAspect - Controller  	:  first.builder.controller.BuilderController.checkNewHostname()
DEBUG: first.common.logger.LoggerAspect - ServiceImpl  	:  first.builder.service.BuilderService.getNewHostName()
DEBUG: first.common.logger.LoggerAspect - DAO  		:  first.builder.dao.BuilderDAO.getNewHostName()
DEBUG: first.builder.dao.AbstractDAO - 	 QueryId  	:  builder.getNewHostName
DEBUG: org.mybatis.spring.SqlSessionUtils - Creating a new SqlSession
DEBUG: org.mybatis.spring.SqlSessionUtils - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1264a7c3]
DEBUG: org.mybatis.spring.transaction.SpringManagedTransaction - JDBC Connection [net.sf.log4jdbc.ConnectionSpy@1bc89387] will be managed by Spring
2024-03-04 13:35:42,138  INFO SQL(simplebot)        :  SELECT No, Host
		From Account
		Where Host='init'
DEBUG: org.mybatis.spring.SqlSessionUtils - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1264a7c3]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1264a7c3]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1264a7c3]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1264a7c3]
DEBUG: first.common.logger.LoggerAspect - Controller  	:  first.builder.controller.BuilderController.addNewChatbot()
DEBUG: first.common.logger.LoggerAspect - ServiceImpl  	:  first.builder.service.BuilderService.addChatbot()
DEBUG: first.common.logger.LoggerAspect - DAO  		:  first.builder.dao.BuilderDAO.addChatbot()
DEBUG: first.builder.dao.AbstractDAO - 	 QueryId  	:  builder.addChatbot
DEBUG: org.mybatis.spring.SqlSessionUtils - Creating a new SqlSession
DEBUG: org.mybatis.spring.SqlSessionUtils - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@53080280] was not registered for synchronization because synchronization is not active
DEBUG: org.mybatis.spring.transaction.SpringManagedTransaction - JDBC Connection [net.sf.log4jdbc.ConnectionSpy@253f491] will not be managed by Spring
2024-03-04 13:35:42,160  INFO SQL(simplebot)        :  insert into Account (Name, Email, Host, Description,Language)
		values ('init','','init', '', '1')
DEBUG: org.mybatis.spring.SqlSessionUtils - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@53080280]
DEBUG: first.common.logger.LoggerAspect - ServiceImpl  	:  first.builder.service.BuilderService.getBackendInfo()
DEBUG: first.common.logger.LoggerAspect - DAO  		:  first.builder.dao.BuilderDAO.getBackendInfo()
DEBUG: first.builder.dao.AbstractDAO - 	 QueryId  	:  builder.getBackendInfo
DEBUG: org.mybatis.spring.SqlSessionUtils - Creating a new SqlSession
DEBUG: org.mybatis.spring.SqlSessionUtils - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@2c79f1b4]
DEBUG: org.mybatis.spring.transaction.SpringManagedTransaction - JDBC Connection [net.sf.log4jdbc.ConnectionSpy@3e532f2f] will be managed by Spring
2024-03-04 13:35:42,173  INFO SQL(simplebot)        :  SELECT *
		From BackendInfo
		WHERE host=1
DEBUG: org.mybatis.spring.SqlSessionUtils - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@2c79f1b4]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@2c79f1b4]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@2c79f1b4]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@2c79f1b4]
DEBUG: first.common.logger.LoggerAspect - ServiceImpl  	:  first.builder.service.BuilderService.insertBackendInfos()
DEBUG: first.common.logger.LoggerAspect - DAO  		:  first.builder.dao.BuilderDAO.insertBackendInfos()
DEBUG: first.builder.dao.AbstractDAO - 	 QueryId  	:  builder.insertBackendInfos
DEBUG: org.mybatis.spring.SqlSessionUtils - Creating a new SqlSession
DEBUG: org.mybatis.spring.SqlSessionUtils - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@577763f5] was not registered for synchronization because synchronization is not active
DEBUG: org.mybatis.spring.transaction.SpringManagedTransaction - JDBC Connection [net.sf.log4jdbc.ConnectionSpy@69811a99] will not be managed by Spring
2024-03-04 13:35:42,177  INFO SQL(simplebot)        :  insert into BackendInfo
		(host, service, ip, port)
		values(1637,'ITF',NULL, NULL)
DEBUG: org.mybatis.spring.SqlSessionUtils - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@577763f5]
DEBUG: first.common.logger.LoggerAspect - ServiceImpl  	:  first.builder.service.BuilderService.insertBackendInfos()
DEBUG: first.common.logger.LoggerAspect - DAO  		:  first.builder.dao.BuilderDAO.insertBackendInfos()
DEBUG: first.builder.dao.AbstractDAO - 	 QueryId  	:  builder.insertBackendInfos
DEBUG: org.mybatis.spring.SqlSessionUtils - Creating a new SqlSession
DEBUG: org.mybatis.spring.SqlSessionUtils - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@60c2b2a0] was not registered for synchronization because synchronization is not active
DEBUG: org.mybatis.spring.transaction.SpringManagedTransaction - JDBC Connection [net.sf.log4jdbc.ConnectionSpy@5e92182d] will not be managed by Spring
2024-03-04 13:35:42,181  INFO SQL(simplebot)        :  insert into BackendInfo
		(host, service, ip, port)
		values(1637,'NER',NULL, NULL)
DEBUG: org.mybatis.spring.SqlSessionUtils - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@60c2b2a0]
DEBUG: first.common.logger.LoggerAspect - ServiceImpl  	:  first.builder.service.BuilderService.getIntentAnswer()
DEBUG: first.common.logger.LoggerAspect - DAO  		:  first.builder.dao.BuilderDAO.getIntentAnswer()
DEBUG: first.builder.dao.AbstractDAO - 	 QueryId  	:  builder.getIntentAnswer
DEBUG: org.mybatis.spring.SqlSessionUtils - Creating a new SqlSession
DEBUG: org.mybatis.spring.SqlSessionUtils - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1f2a4ab]
DEBUG: org.mybatis.spring.transaction.SpringManagedTransaction - JDBC Connection [net.sf.log4jdbc.ConnectionSpy@488c211e] will be managed by Spring
2024-03-04 13:35:42,186  INFO SQL(simplebot)        :  SELECT I.No as I_No, I.Language as I_Language, I.Answer as I_Answer, I.Account as I_Account, I.TmpNo as I_TmpNo, A.No as A_NO, A.Answer as A_Answer, A.Account as A_Account, A.TmpNo as A_TmpNo, A.Language as A_Language,
				I.Main as Main, I.Name as Name, I.Entity as Entity, I.Next as Next, I.URL as URL, I.Description as Description, I.greetyn as greetyn, I.greet as greet, I.TmpNextIntent as TmpNextIntent
		FROM Intent I LEFT OUTER JOIN Answer A
		ON I.Answer = A.No
		WHERE I.Account=1 AND(I.Language=1 )
DEBUG: org.mybatis.spring.SqlSessionUtils - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1f2a4ab]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1f2a4ab]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1f2a4ab]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1f2a4ab]
DEBUG: first.common.logger.LoggerAspect - ServiceImpl  	:  first.builder.service.BuilderService.getIntentRelByAll()
DEBUG: first.common.logger.LoggerAspect - DAO  		:  first.builder.dao.BuilderDAO.getIntentRelByAll()
DEBUG: first.builder.dao.AbstractDAO - 	 QueryId  	:  builder.getIntentRelByAll
DEBUG: org.mybatis.spring.SqlSessionUtils - Creating a new SqlSession
DEBUG: org.mybatis.spring.SqlSessionUtils - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@644662e2]
DEBUG: org.mybatis.spring.transaction.SpringManagedTransaction - JDBC Connection [net.sf.log4jdbc.ConnectionSpy@60244710] will be managed by Spring
2024-03-04 13:35:42,193  INFO SQL(simplebot)        :  SELECT *
		From IntentRel
		WHERE SrcIntent = 1 or DestIntent = 1
DEBUG: org.mybatis.spring.SqlSessionUtils - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@644662e2]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@644662e2]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@644662e2]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@644662e2]
DEBUG: first.common.logger.LoggerAspect - ServiceImpl  	:  first.builder.service.BuilderService.getBertIntentByNo()
DEBUG: first.common.logger.LoggerAspect - DAO  		:  first.builder.dao.BuilderDAO.getBertIntentByNo()
DEBUG: first.builder.dao.AbstractDAO - 	 QueryId  	:  builder.getBertIntentByNo
DEBUG: org.mybatis.spring.SqlSessionUtils - Creating a new SqlSession
DEBUG: org.mybatis.spring.SqlSessionUtils - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@3773772a]
DEBUG: org.mybatis.spring.transaction.SpringManagedTransaction - JDBC Connection [net.sf.log4jdbc.ConnectionSpy@53369f37] will be managed by Spring
2024-03-04 13:35:42,197  INFO SQL(simplebot)        :  select *
		from BertIntent
		where (BertItfId = 1 or BertItfId = 2) AND (Language=1 )
DEBUG: org.mybatis.spring.SqlSessionUtils - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@3773772a]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@3773772a]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@3773772a]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@3773772a]
DEBUG: first.common.logger.LoggerAspect - ServiceImpl  	:  first.builder.service.BuilderService.insertAnswerByAll()
DEBUG: first.common.logger.LoggerAspect - DAO  		:  first.builder.dao.BuilderDAO.insertAnswerByAll()
DEBUG: first.builder.dao.AbstractDAO - 	 QueryId  	:  builder.insertAnswerByAll
DEBUG: org.mybatis.spring.SqlSessionUtils - Creating a new SqlSession
DEBUG: org.mybatis.spring.SqlSessionUtils - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@505bdff6] was not registered for synchronization because synchronization is not active
DEBUG: org.mybatis.spring.transaction.SpringManagedTransaction - JDBC Connection [net.sf.log4jdbc.ConnectionSpy@3f42ce1] will not be managed by Spring
2024-03-04 13:35:42,200  INFO SQL(simplebot)        :  insert into Answer (Answer, Account, Language,TmpNo)
		values ('안녕하세요',1637,1,NULL)
DEBUG: org.mybatis.spring.SqlSessionUtils - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@505bdff6]
DEBUG: first.common.logger.LoggerAspect - ServiceImpl  	:  first.builder.service.BuilderService.insertIntentNewAll()
DEBUG: first.common.logger.LoggerAspect - DAO  		:  first.builder.dao.BuilderDAO.insertIntentNewAll()
DEBUG: first.builder.dao.AbstractDAO - 	 QueryId  	:  builder.insertIntentNewAll
DEBUG: org.mybatis.spring.SqlSessionUtils - Creating a new SqlSession
DEBUG: org.mybatis.spring.SqlSessionUtils - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@521d0c84] was not registered for synchronization because synchronization is not active
DEBUG: org.mybatis.spring.transaction.SpringManagedTransaction - JDBC Connection [net.sf.log4jdbc.ConnectionSpy@5b39a90f] will not be managed by Spring
2024-03-04 13:35:42,204  INFO SQL(simplebot)        :  insert into Intent
		(Language, Main, Name, Answer, Next, URL, Description, Account, Entity, greetyn, TmpNo, TmpNextIntent, ResponseOrder)
		values(1, '처음으로', '처음으로', 1031642, NULL, NULL, NULL, 1637, 'N', '', NULL, NULL, '0,1,2')
DEBUG: org.mybatis.spring.SqlSessionUtils - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@521d0c84]
DEBUG: first.common.logger.LoggerAspect - ServiceImpl  	:  first.builder.service.BuilderService.insertBertIntentNew()
DEBUG: first.common.logger.LoggerAspect - DAO  		:  first.builder.dao.BuilderDAO.insertBertIntentNew()
DEBUG: first.builder.dao.AbstractDAO - 	 QueryId  	:  builder.insertBertIntentNew
DEBUG: org.mybatis.spring.SqlSessionUtils - Creating a new SqlSession
DEBUG: org.mybatis.spring.SqlSessionUtils - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@40fccb59] was not registered for synchronization because synchronization is not active
DEBUG: org.mybatis.spring.transaction.SpringManagedTransaction - JDBC Connection [net.sf.log4jdbc.ConnectionSpy@54ea6099] will not be managed by Spring
2024-03-04 13:35:42,208  INFO SQL(simplebot)        :  insert into BertIntent
		(Name, Language, BertItfId)
		values('base',1,3147)
DEBUG: org.mybatis.spring.SqlSessionUtils - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@40fccb59]
DEBUG: first.common.logger.LoggerAspect - ServiceImpl  	:  first.builder.service.BuilderService.selectReplaceDict()
DEBUG: first.common.logger.LoggerAspect - DAO  		:  first.builder.dao.BuilderDAO.selectReplaceDict()
DEBUG: first.builder.dao.AbstractDAO - 	 QueryId  	:  builder.selectReplaceDict
DEBUG: org.mybatis.spring.SqlSessionUtils - Creating a new SqlSession
DEBUG: org.mybatis.spring.SqlSessionUtils - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@9f19111]
DEBUG: org.mybatis.spring.transaction.SpringManagedTransaction - JDBC Connection [net.sf.log4jdbc.ConnectionSpy@29a98f1a] will be managed by Spring
2024-03-04 13:35:42,212  INFO SQL(simplebot)        :  SELECT *
		FROM ReplaceDict
		WHERE Host = 1
		ORDER BY Length(RTRIM(`Before`)) desc
DEBUG: org.mybatis.spring.SqlSessionUtils - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@9f19111]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@9f19111]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@9f19111]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@9f19111]
DEBUG: first.common.logger.LoggerAspect - Controller  	:  first.builder.controller.BuilderController.startSaveSetting()
DEBUG: first.common.logger.LoggerAspect - ServiceImpl  	:  first.builder.service.BuilderService.getStyleCSS()
DEBUG: first.common.logger.LoggerAspect - DAO  		:  first.builder.dao.BuilderDAO.getStyleCSS()
DEBUG: first.builder.dao.AbstractDAO - 	 QueryId  	:  builder.getStyleCSS
DEBUG: org.mybatis.spring.SqlSessionUtils - Creating a new SqlSession
DEBUG: org.mybatis.spring.SqlSessionUtils - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@5b892f0d]
DEBUG: org.mybatis.spring.transaction.SpringManagedTransaction - JDBC Connection [net.sf.log4jdbc.ConnectionSpy@3b4d6cc0] will be managed by Spring
2024-03-04 13:35:42,281  INFO SQL(simplebot)        :  SELECT *
		FROM style_css SC
		WHERE host='1637'
DEBUG: org.mybatis.spring.SqlSessionUtils - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@5b892f0d]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@5b892f0d]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@5b892f0d]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@5b892f0d]
DEBUG: first.common.logger.LoggerAspect - ServiceImpl  	:  first.builder.service.BuilderService.getStyleCSS()
DEBUG: first.common.logger.LoggerAspect - DAO  		:  first.builder.dao.BuilderDAO.getStyleCSS()
DEBUG: first.builder.dao.AbstractDAO - 	 QueryId  	:  builder.getStyleCSS
DEBUG: org.mybatis.spring.SqlSessionUtils - Creating a new SqlSession
DEBUG: org.mybatis.spring.SqlSessionUtils - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@39a2381]
DEBUG: org.mybatis.spring.transaction.SpringManagedTransaction - JDBC Connection [net.sf.log4jdbc.ConnectionSpy@7c363013] will be managed by Spring
2024-03-04 13:35:42,311  INFO SQL(simplebot)        :  SELECT *
		FROM style_css SC
		WHERE host='1637'
DEBUG: org.mybatis.spring.SqlSessionUtils - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@39a2381]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@39a2381]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@39a2381]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@39a2381]
DEBUG: first.common.logger.LoggerAspect - ServiceImpl  	:  first.builder.service.BuilderService.insertStyleCSS()
DEBUG: first.common.logger.LoggerAspect - DAO  		:  first.builder.dao.BuilderDAO.insertStyleCSS()
DEBUG: first.builder.dao.AbstractDAO - 	 QueryId  	:  builder.insertStyleCSS
DEBUG: org.mybatis.spring.SqlSessionUtils - Creating a new SqlSession
DEBUG: org.mybatis.spring.SqlSessionUtils - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@2fe1095] was not registered for synchronization because synchronization is not active
DEBUG: org.mybatis.spring.transaction.SpringManagedTransaction - JDBC Connection [net.sf.log4jdbc.ConnectionSpy@7d889b3b] will not be managed by Spring
2024-03-04 13:35:42,313  INFO SQL(simplebot)        :  insert into style_css
		(host, textColor, mainColor, logoSize, posX, posY)
		values('1637', '255,255,255', '84,84,84', '34', '-1', '-1')
DEBUG: org.mybatis.spring.SqlSessionUtils - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@2fe1095]
DEBUG: first.common.logger.LoggerAspect - Controller  	:  first.builder.controller.BuilderController.saveSetting()
DEBUG: first.common.logger.LoggerAspect - ServiceImpl  	:  first.builder.service.BuilderService.updateAccount()
DEBUG: first.common.logger.LoggerAspect - DAO  		:  first.builder.dao.BuilderDAO.updateAccount()
DEBUG: first.builder.dao.AbstractDAO - 	 QueryId  	:  builder.updateAccountSetting
DEBUG: org.mybatis.spring.SqlSessionUtils - Creating a new SqlSession
DEBUG: org.mybatis.spring.SqlSessionUtils - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@4fccfb41] was not registered for synchronization because synchronization is not active
DEBUG: org.mybatis.spring.transaction.SpringManagedTransaction - JDBC Connection [net.sf.log4jdbc.ConnectionSpy@63f88c6d] will not be managed by Spring
2024-03-04 13:35:42,335  INFO SQL(simplebot)        :  update Account
		set Name = 'init' , Email = '', Host='init', Description=''
		WHERE No = '1637'
DEBUG: org.mybatis.spring.SqlSessionUtils - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@4fccfb41]
DEBUG: first.common.logger.LoggerAspect - Controller  	:  first.builder.controller.BuilderController.getChatList()
DEBUG: first.common.logger.LoggerAspect - ServiceImpl  	:  first.builder.service.BuilderService.getChatbotList()
DEBUG: first.common.logger.LoggerAspect - DAO  		:  first.builder.dao.BuilderDAO.getChatbotList()
DEBUG: first.builder.dao.AbstractDAO - 	 QueryId  	:  builder.getChatbotList
DEBUG: org.mybatis.spring.SqlSessionUtils - Creating a new SqlSession
DEBUG: org.mybatis.spring.SqlSessionUtils - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@256d72be]
DEBUG: org.mybatis.spring.transaction.SpringManagedTransaction - JDBC Connection [net.sf.log4jdbc.ConnectionSpy@2ef53232] will be managed by Spring
2024-03-04 13:35:42,369  INFO SQL(simplebot)        :  SELECT  /* No, Name, Host, Language */
			*
		from Account WHERE 1=1
		AND No IN
		 
				 (  
					'1637'
				 ) 
			 

		 
		ORDER BY No
DEBUG: org.mybatis.spring.SqlSessionUtils - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@256d72be]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@256d72be]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@256d72be]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@256d72be]
DEBUG: first.common.logger.LoggerAspect - Controller  	:  first.builder.controller.BuilderController.builderContentsAnswer()
DEBUG: first.common.logger.LoggerAspect - Controller  	:  first.builder.controller.BuilderController.builderBottomAnswer()
DEBUG: first.common.logger.LoggerAspect - Controller  	:  first.builder.controller.BuilderController.getTask()
DEBUG: first.common.logger.LoggerAspect - ServiceImpl  	:  first.builder.service.BuilderService.getTaskCount()
DEBUG: first.common.logger.LoggerAspect - DAO  		:  first.builder.dao.BuilderDAO.getTaskCount()
DEBUG: first.builder.dao.AbstractDAO - 	 QueryId  	:  builder.getTaskCount
DEBUG: org.mybatis.spring.SqlSessionUtils - Creating a new SqlSession
DEBUG: org.mybatis.spring.SqlSessionUtils - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@7176aacb]
DEBUG: org.mybatis.spring.transaction.SpringManagedTransaction - JDBC Connection [net.sf.log4jdbc.ConnectionSpy@39fab6ad] will be managed by Spring
2024-03-04 13:35:42,432  INFO SQL(simplebot)        :  SELECT COUNT(*) FROM Intent WHERE Account=1637
 and Language=1
DEBUG: org.mybatis.spring.SqlSessionUtils - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@7176aacb]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@7176aacb]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@7176aacb]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@7176aacb]
DEBUG: first.common.logger.LoggerAspect - ServiceImpl  	:  first.builder.service.BuilderService.getAnswerList()
DEBUG: first.common.logger.LoggerAspect - DAO  		:  first.builder.dao.BuilderDAO.getAnswerList()
DEBUG: first.builder.dao.AbstractDAO - 	 QueryId  	:  builder.getAnswerList
DEBUG: org.mybatis.spring.SqlSessionUtils - Creating a new SqlSession
DEBUG: org.mybatis.spring.SqlSessionUtils - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@5015fd3c]
DEBUG: org.mybatis.spring.transaction.SpringManagedTransaction - JDBC Connection [net.sf.log4jdbc.ConnectionSpy@28285906] will be managed by Spring
2024-03-04 13:35:42,435  INFO SQL(simplebot)        :  SELECT I.No, I.Main, I.Name, A.answer, I.Account
		FROM Intent I LEFT OUTER JOIN Answer A
		ON I.Answer = A.No
		WHERE I.Account=1637
 and I.Language=1
		ORDER BY I.No
		OFFSET 0 ROWS
		FETCH NEXT 15 ROWS ONLY
DEBUG: org.mybatis.spring.SqlSessionUtils - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@5015fd3c]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@5015fd3c]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@5015fd3c]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@5015fd3c]
DEBUG: first.common.logger.LoggerAspect - ServiceImpl  	:  first.builder.service.BuilderService.getAllIntents()
DEBUG: first.common.logger.LoggerAspect - DAO  		:  first.builder.dao.BuilderDAO.getAllIntents()
DEBUG: first.builder.dao.AbstractDAO - 	 QueryId  	:  builder.getAllIntents
DEBUG: org.mybatis.spring.SqlSessionUtils - Creating a new SqlSession
DEBUG: org.mybatis.spring.SqlSessionUtils - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@767b88ca]
DEBUG: org.mybatis.spring.transaction.SpringManagedTransaction - JDBC Connection [net.sf.log4jdbc.ConnectionSpy@2063f9f4] will be managed by Spring
2024-03-04 13:35:42,437  INFO SQL(simplebot)        :  SELECT I.No, I.Main, I.Name,I.Next, I.URL, I.Language
		FROM Intent I
		WHERE I.Account=1637
		ORDER BY I.No
DEBUG: org.mybatis.spring.SqlSessionUtils - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@767b88ca]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@767b88ca]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@767b88ca]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@767b88ca]
DEBUG: first.common.logger.LoggerAspect - ServiceImpl  	:  first.builder.service.BuilderService.getAllBertIntents()
DEBUG: first.common.logger.LoggerAspect - DAO  		:  first.builder.dao.BuilderDAO.getAllBertIntents()
DEBUG: first.builder.dao.AbstractDAO - 	 QueryId  	:  builder.getAllBertIntents
DEBUG: org.mybatis.spring.SqlSessionUtils - Creating a new SqlSession
DEBUG: org.mybatis.spring.SqlSessionUtils - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@6ede52f8]
DEBUG: org.mybatis.spring.transaction.SpringManagedTransaction - JDBC Connection [net.sf.log4jdbc.ConnectionSpy@28ad21e0] will be managed by Spring
2024-03-04 13:35:42,439  INFO SQL(simplebot)        :  SELECT B.No, B.Name, B.Language
		FROM BertIntent B LEFT OUTER JOIN BackendInfo BI
		ON B.BertItfId = BI.id
		WHERE BI.host=1637
		ORDER BY B.No
DEBUG: org.mybatis.spring.SqlSessionUtils - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@6ede52f8]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@6ede52f8]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@6ede52f8]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@6ede52f8]
DEBUG: first.common.logger.LoggerAspect - Controller  	:  first.builder.controller.BuilderController.getTask()
DEBUG: first.common.logger.LoggerAspect - ServiceImpl  	:  first.builder.service.BuilderService.getTaskCount()
DEBUG: first.common.logger.LoggerAspect - DAO  		:  first.builder.dao.BuilderDAO.getTaskCount()
DEBUG: first.builder.dao.AbstractDAO - 	 QueryId  	:  builder.getTaskCount
DEBUG: org.mybatis.spring.SqlSessionUtils - Creating a new SqlSession
DEBUG: org.mybatis.spring.SqlSessionUtils - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@700f77b2]
DEBUG: org.mybatis.spring.transaction.SpringManagedTransaction - JDBC Connection [net.sf.log4jdbc.ConnectionSpy@44f9334c] will be managed by Spring
2024-03-04 13:35:42,539  INFO SQL(simplebot)        :  SELECT COUNT(*) FROM Intent WHERE Account=1637
 and Language=1
DEBUG: org.mybatis.spring.SqlSessionUtils - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@700f77b2]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@700f77b2]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@700f77b2]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@700f77b2]
DEBUG: first.common.logger.LoggerAspect - ServiceImpl  	:  first.builder.service.BuilderService.getAnswerList()
DEBUG: first.common.logger.LoggerAspect - DAO  		:  first.builder.dao.BuilderDAO.getAnswerList()
DEBUG: first.builder.dao.AbstractDAO - 	 QueryId  	:  builder.getAnswerList
DEBUG: org.mybatis.spring.SqlSessionUtils - Creating a new SqlSession
DEBUG: org.mybatis.spring.SqlSessionUtils - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@7886d974]
DEBUG: org.mybatis.spring.transaction.SpringManagedTransaction - JDBC Connection [net.sf.log4jdbc.ConnectionSpy@6d9cb1e7] will be managed by Spring
2024-03-04 13:35:42,544  INFO SQL(simplebot)        :  SELECT I.No, I.Main, I.Name, A.answer, I.Account
		FROM Intent I LEFT OUTER JOIN Answer A
		ON I.Answer = A.No
		WHERE I.Account=1637
 and I.Language=1
		ORDER BY I.No
		OFFSET 0 ROWS
		FETCH NEXT 15 ROWS ONLY
DEBUG: org.mybatis.spring.SqlSessionUtils - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@7886d974]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@7886d974]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@7886d974]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@7886d974]
DEBUG: first.common.logger.LoggerAspect - ServiceImpl  	:  first.builder.service.BuilderService.getAllIntents()
DEBUG: first.common.logger.LoggerAspect - DAO  		:  first.builder.dao.BuilderDAO.getAllIntents()
DEBUG: first.builder.dao.AbstractDAO - 	 QueryId  	:  builder.getAllIntents
DEBUG: org.mybatis.spring.SqlSessionUtils - Creating a new SqlSession
DEBUG: org.mybatis.spring.SqlSessionUtils - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@2ee4fb11]
DEBUG: org.mybatis.spring.transaction.SpringManagedTransaction - JDBC Connection [net.sf.log4jdbc.ConnectionSpy@1ac284bc] will be managed by Spring
2024-03-04 13:35:42,548  INFO SQL(simplebot)        :  SELECT I.No, I.Main, I.Name,I.Next, I.URL, I.Language
		FROM Intent I
		WHERE I.Account=1637
		ORDER BY I.No
DEBUG: org.mybatis.spring.SqlSessionUtils - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@2ee4fb11]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@2ee4fb11]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@2ee4fb11]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@2ee4fb11]
DEBUG: first.common.logger.LoggerAspect - ServiceImpl  	:  first.builder.service.BuilderService.getAllBertIntents()
DEBUG: first.common.logger.LoggerAspect - DAO  		:  first.builder.dao.BuilderDAO.getAllBertIntents()
DEBUG: first.builder.dao.AbstractDAO - 	 QueryId  	:  builder.getAllBertIntents
DEBUG: org.mybatis.spring.SqlSessionUtils - Creating a new SqlSession
DEBUG: org.mybatis.spring.SqlSessionUtils - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@19ebed97]
DEBUG: org.mybatis.spring.transaction.SpringManagedTransaction - JDBC Connection [net.sf.log4jdbc.ConnectionSpy@128391b9] will be managed by Spring
2024-03-04 13:35:42,553  INFO SQL(simplebot)        :  SELECT B.No, B.Name, B.Language
		FROM BertIntent B LEFT OUTER JOIN BackendInfo BI
		ON B.BertItfId = BI.id
		WHERE BI.host=1637
		ORDER BY B.No
DEBUG: org.mybatis.spring.SqlSessionUtils - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@19ebed97]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@19ebed97]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@19ebed97]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@19ebed97]
DEBUG: first.common.logger.LoggerAspect - Controller  	:  first.builder.controller.BuilderController.getTestPage()
DEBUG: first.common.logger.LoggerAspect - ServiceImpl  	:  first.builder.service.BuilderService.getHostByAccount()
DEBUG: first.common.logger.LoggerAspect - DAO  		:  first.builder.dao.BuilderDAO.getHostByAccount()
DEBUG: first.builder.dao.AbstractDAO - 	 QueryId  	:  builder.getHostByAccount
DEBUG: org.mybatis.spring.SqlSessionUtils - Creating a new SqlSession
DEBUG: org.mybatis.spring.SqlSessionUtils - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@54a5fab5]
DEBUG: org.mybatis.spring.transaction.SpringManagedTransaction - JDBC Connection [net.sf.log4jdbc.ConnectionSpy@23c6160d] will be managed by Spring
2024-03-04 13:35:44,163  INFO SQL(simplebot)        :  SELECT Host
		From Account
		Where No=1637
DEBUG: org.mybatis.spring.SqlSessionUtils - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@54a5fab5]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@54a5fab5]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@54a5fab5]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@54a5fab5]
04-Mar-2024 13:57:59.070 INFO [ContainerBackgroundProcessor[StandardEngine[Catalina]]] org.apache.catalina.startup.HostConfig.undeploy Undeploying context [/sds-builder]
04-Mar-2024 13:57:59.087 WARNING [ContainerBackgroundProcessor[StandardEngine[Catalina]]] org.apache.catalina.loader.WebappClassLoaderBase.clearReferencesJdbc The web application [sds-builder] registered the JDBC driver [com.mysql.jdbc.Driver] but failed to unregister it when the web application was stopped. To prevent a memory leak, the JDBC Driver has been forcibly unregistered.
04-Mar-2024 13:57:59.087 WARNING [ContainerBackgroundProcessor[StandardEngine[Catalina]]] org.apache.catalina.loader.WebappClassLoaderBase.clearReferencesJdbc The web application [sds-builder] registered the JDBC driver [net.sf.log4jdbc.DriverSpy] but failed to unregister it when the web application was stopped. To prevent a memory leak, the JDBC Driver has been forcibly unregistered.
04-Mar-2024 13:57:59.087 WARNING [ContainerBackgroundProcessor[StandardEngine[Catalina]]] org.apache.catalina.loader.WebappClassLoaderBase.clearReferencesJdbc The web application [sds-builder] registered the JDBC driver [com.microsoft.sqlserver.jdbc.SQLServerDriver] but failed to unregister it when the web application was stopped. To prevent a memory leak, the JDBC Driver has been forcibly unregistered.
04-Mar-2024 13:57:59.088 WARNING [ContainerBackgroundProcessor[StandardEngine[Catalina]]] org.apache.catalina.loader.WebappClassLoaderBase.clearReferencesThreads The web application [sds-builder] appears to have started a thread named [mysql-cj-abandoned-connection-cleanup] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 java.lang.Object.wait(Native Method)
 java.lang.ref.ReferenceQueue.remove(ReferenceQueue.java:144)
 com.mysql.jdbc.AbandonedConnectionCleanupThread.run(AbandonedConnectionCleanupThread.java:80)
 java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
 java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
 java.lang.Thread.run(Thread.java:750)
04-Mar-2024 13:57:59.151 INFO [localhost-startStop-5] org.apache.catalina.startup.HostConfig.deployWAR Deploying web application archive [/home/minds/maum/sds-builder/apache-tomcat-8.5.99/webapps/sds-builder.war]
04-Mar-2024 13:58:01.264 INFO [localhost-startStop-5] org.apache.jasper.servlet.TldScanner.scanJars At least one JAR was scanned for TLDs yet contained no TLDs. Enable debug logging for this logger for a complete list of JARs that were scanned but no TLDs were found in them. Skipping unneeded JARs during scanning can improve startup time and JSP compilation time.
04-Mar-2024 13:58:01.473 INFO [mysql-cj-abandoned-connection-cleanup] org.apache.catalina.loader.WebappClassLoaderBase.checkStateForResourceLoading Illegal access: this web application instance has been stopped already. Could not load []. The following stack trace is thrown for debugging purposes as well as to attempt to terminate the thread which caused the illegal access.
	java.lang.IllegalStateException: Illegal access: this web application instance has been stopped already. Could not load []. The following stack trace is thrown for debugging purposes as well as to attempt to terminate the thread which caused the illegal access.
		at org.apache.catalina.loader.WebappClassLoaderBase.checkStateForResourceLoading(WebappClassLoaderBase.java:1358)
		at org.apache.catalina.loader.WebappClassLoaderBase.getResource(WebappClassLoaderBase.java:990)
		at com.mysql.jdbc.AbandonedConnectionCleanupThread.checkThreadContextClassLoader(AbandonedConnectionCleanupThread.java:112)
		at com.mysql.jdbc.AbandonedConnectionCleanupThread.run(AbandonedConnectionCleanupThread.java:79)
		at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
		at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
		at java.lang.Thread.run(Thread.java:750)
04-Mar-2024 13:58:01.474 INFO [mysql-cj-abandoned-connection-cleanup] org.apache.catalina.loader.WebappClassLoaderBase.checkStateForResourceLoading Illegal access: this web application instance has been stopped already. Could not load []. The following stack trace is thrown for debugging purposes as well as to attempt to terminate the thread which caused the illegal access.
	java.lang.IllegalStateException: Illegal access: this web application instance has been stopped already. Could not load []. The following stack trace is thrown for debugging purposes as well as to attempt to terminate the thread which caused the illegal access.
		at org.apache.catalina.loader.WebappClassLoaderBase.checkStateForResourceLoading(WebappClassLoaderBase.java:1358)
		at org.apache.catalina.loader.WebappClassLoaderBase.getResource(WebappClassLoaderBase.java:990)
		at com.mysql.jdbc.AbandonedConnectionCleanupThread.checkThreadContextClassLoader(AbandonedConnectionCleanupThread.java:112)
		at com.mysql.jdbc.AbandonedConnectionCleanupThread.run(AbandonedConnectionCleanupThread.java:79)
		at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
		at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
		at java.lang.Thread.run(Thread.java:750)
04-Mar-2024 13:58:01.475 INFO [mysql-cj-abandoned-connection-cleanup] org.apache.catalina.loader.WebappClassLoaderBase.checkStateForResourceLoading Illegal access: this web application instance has been stopped already. Could not load []. The following stack trace is thrown for debugging purposes as well as to attempt to terminate the thread which caused the illegal access.
	java.lang.IllegalStateException: Illegal access: this web application instance has been stopped already. Could not load []. The following stack trace is thrown for debugging purposes as well as to attempt to terminate the thread which caused the illegal access.
		at org.apache.catalina.loader.WebappClassLoaderBase.checkStateForResourceLoading(WebappClassLoaderBase.java:1358)
		at org.apache.catalina.loader.WebappClassLoaderBase.getResource(WebappClassLoaderBase.java:990)
		at com.mysql.jdbc.AbandonedConnectionCleanupThread.checkThreadContextClassLoader(AbandonedConnectionCleanupThread.java:112)
		at com.mysql.jdbc.AbandonedConnectionCleanupThread.run(AbandonedConnectionCleanupThread.java:79)
		at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
		at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
		at java.lang.Thread.run(Thread.java:750)
04-Mar-2024 13:58:01.475 INFO [mysql-cj-abandoned-connection-cleanup] org.apache.catalina.loader.WebappClassLoaderBase.checkStateForResourceLoading Illegal access: this web application instance has been stopped already. Could not load []. The following stack trace is thrown for debugging purposes as well as to attempt to terminate the thread which caused the illegal access.
	java.lang.IllegalStateException: Illegal access: this web application instance has been stopped already. Could not load []. The following stack trace is thrown for debugging purposes as well as to attempt to terminate the thread which caused the illegal access.
		at org.apache.catalina.loader.WebappClassLoaderBase.checkStateForResourceLoading(WebappClassLoaderBase.java:1358)
		at org.apache.catalina.loader.WebappClassLoaderBase.getResource(WebappClassLoaderBase.java:990)
		at com.mysql.jdbc.AbandonedConnectionCleanupThread.checkThreadContextClassLoader(AbandonedConnectionCleanupThread.java:112)
		at com.mysql.jdbc.AbandonedConnectionCleanupThread.run(AbandonedConnectionCleanupThread.java:79)
		at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
		at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
		at java.lang.Thread.run(Thread.java:750)
DEBUG: org.mybatis.spring.SqlSessionFactoryBean - Property 'configuration' or 'configLocation' not specified, using default MyBatis Configuration
DEBUG: org.mybatis.spring.SqlSessionFactoryBean - Parsed mapper file: 'file [/home/minds/maum/sds-builder/apache-tomcat-8.5.99/webapps/sds-builder/WEB-INF/classes/mapper/maria/Chatbot/Builder_SQL.xml]'
DEBUG: org.mybatis.spring.SqlSessionFactoryBean - Parsed mapper file: 'file [/home/minds/maum/sds-builder/apache-tomcat-8.5.99/webapps/sds-builder/WEB-INF/classes/mapper/maria/Chatbot/MaumSDS_SQL.xml]'
DEBUG: org.mybatis.spring.SqlSessionFactoryBean - Property 'configuration' or 'configLocation' not specified, using default MyBatis Configuration
DEBUG: org.mybatis.spring.SqlSessionFactoryBean - Parsed mapper file: 'file [/home/minds/maum/sds-builder/apache-tomcat-8.5.99/webapps/sds-builder/WEB-INF/classes/mapper/maria/HAPPYCALL4/NQA_SQL.xml]'
DEBUG: org.mybatis.spring.SqlSessionFactoryBean - Parsed mapper file: 'file [/home/minds/maum/sds-builder/apache-tomcat-8.5.99/webapps/sds-builder/WEB-INF/classes/mapper/maria/HAPPYCALL4/SimpleBot_SQL.xml]'
SimpleBot Execution Environment : prod
SimpleBot BertIntent itfIP : 0
SimpleBot BertIntent nerIP : 0
SimpleBot BL IP : 125.132.250.244
SimpleBot CM IP : 121.133.247.250
SimpleBot M2U rest address : http://localhost:9990
SimpleBot Style Resources Path : /home/minds/maum/sds-builder/imgUpload
Default Resources Make : chatbot.css
Default Resources Make : chatbot_custom.css
Default Resources Make : chatbot_floating.css
Default Resources Make : IconImg
Default Resources Make : logoImg
Default Resources Make : default
Default Resources Make : mindslab
Default Resources Make : redtie
Default Resource constructed.
DEBUG: first.common.logger.LoggerAspect - ServiceImpl  	:  first.builder.service.BuilderService.getNqaStatusChatbotList()
DEBUG: first.common.logger.LoggerAspect - DAO  		:  first.builder.dao.BuilderDAO.getNqaStatusChatbotList()
DEBUG: first.builder.dao.AbstractDAO - 	 QueryId  	:  builder.getNqaStatusChatbotList
DEBUG: org.mybatis.spring.SqlSessionUtils - Creating a new SqlSession
DEBUG: org.mybatis.spring.SqlSessionUtils - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1aa6df30]
DEBUG: org.mybatis.spring.transaction.SpringManagedTransaction - JDBC Connection [net.sf.log4jdbc.ConnectionSpy@669e4a4e] will be managed by Spring
2024-03-04 13:58:02,904  INFO SQL(simplebot)        :  SELECT No as host, Name, 'preparation' as nqaUploadStatus
 from Account
		ORDER BY No
DEBUG: org.mybatis.spring.SqlSessionUtils - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1aa6df30]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1aa6df30]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1aa6df30]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1aa6df30]
04-Mar-2024 13:58:03.808 INFO [localhost-startStop-5] org.apache.catalina.startup.HostConfig.deployWAR Deployment of web application archive [/home/minds/maum/sds-builder/apache-tomcat-8.5.99/webapps/sds-builder.war] has finished in [4,657] ms
DEBUG: first.common.logger.LoggerAspect - Controller  	:  first.builder.controller.BuilderController.chatbotBuilderCommon()
DEBUG: first.common.logger.LoggerAspect - Controller  	:  first.builder.controller.BuilderController.getChatList()
DEBUG: first.common.logger.LoggerAspect - ServiceImpl  	:  first.builder.service.BuilderService.getChatbotList()
DEBUG: first.common.logger.LoggerAspect - DAO  		:  first.builder.dao.BuilderDAO.getChatbotList()
DEBUG: first.builder.dao.AbstractDAO - 	 QueryId  	:  builder.getChatbotList
DEBUG: org.mybatis.spring.SqlSessionUtils - Creating a new SqlSession
DEBUG: org.mybatis.spring.SqlSessionUtils - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@3bc8174e]
DEBUG: org.mybatis.spring.transaction.SpringManagedTransaction - JDBC Connection [net.sf.log4jdbc.ConnectionSpy@3e8d8a58] will be managed by Spring
2024-03-04 13:58:13,222  INFO SQL(simplebot)        :  SELECT  /* No, Name, Host, Language */
			*
		from Account WHERE 1=1
		AND No IN
		 
				 (  
					'1637'
				 ) 
			 

		 
		ORDER BY No
DEBUG: org.mybatis.spring.SqlSessionUtils - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@3bc8174e]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@3bc8174e]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@3bc8174e]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@3bc8174e]
DEBUG: first.common.logger.LoggerAspect - Controller  	:  first.builder.controller.BuilderController.builderContentsAnswer()
DEBUG: first.common.logger.LoggerAspect - Controller  	:  first.builder.controller.BuilderController.builderBottomAnswer()
DEBUG: first.common.logger.LoggerAspect - Controller  	:  first.builder.controller.BuilderController.getTask()
DEBUG: first.common.logger.LoggerAspect - ServiceImpl  	:  first.builder.service.BuilderService.getTaskCount()
DEBUG: first.common.logger.LoggerAspect - DAO  		:  first.builder.dao.BuilderDAO.getTaskCount()
DEBUG: first.builder.dao.AbstractDAO - 	 QueryId  	:  builder.getTaskCount
DEBUG: org.mybatis.spring.SqlSessionUtils - Creating a new SqlSession
DEBUG: org.mybatis.spring.SqlSessionUtils - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@bef4fb5]
DEBUG: org.mybatis.spring.transaction.SpringManagedTransaction - JDBC Connection [net.sf.log4jdbc.ConnectionSpy@53c8cff7] will be managed by Spring
2024-03-04 13:58:13,433  INFO SQL(simplebot)        :  SELECT COUNT(*) FROM Intent WHERE Account=1637
 and Language=1
DEBUG: org.mybatis.spring.SqlSessionUtils - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@bef4fb5]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@bef4fb5]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@bef4fb5]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@bef4fb5]
DEBUG: first.common.logger.LoggerAspect - ServiceImpl  	:  first.builder.service.BuilderService.getAnswerList()
DEBUG: first.common.logger.LoggerAspect - DAO  		:  first.builder.dao.BuilderDAO.getAnswerList()
DEBUG: first.builder.dao.AbstractDAO - 	 QueryId  	:  builder.getAnswerList
DEBUG: org.mybatis.spring.SqlSessionUtils - Creating a new SqlSession
DEBUG: org.mybatis.spring.SqlSessionUtils - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@6cefcbd1]
DEBUG: org.mybatis.spring.transaction.SpringManagedTransaction - JDBC Connection [net.sf.log4jdbc.ConnectionSpy@33d54a14] will be managed by Spring
2024-03-04 13:58:13,437  INFO SQL(simplebot)        :  SELECT I.No, I.Main, I.Name, A.answer, I.Account
		FROM Intent I LEFT OUTER JOIN Answer A
		ON I.Answer = A.No
		WHERE I.Account=1637
 and I.Language=1
		ORDER BY I.No
		OFFSET 0 ROWS
		FETCH NEXT 15 ROWS ONLY
DEBUG: org.mybatis.spring.SqlSessionUtils - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@6cefcbd1]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@6cefcbd1]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@6cefcbd1]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@6cefcbd1]
DEBUG: first.common.logger.LoggerAspect - ServiceImpl  	:  first.builder.service.BuilderService.getAllIntents()
DEBUG: first.common.logger.LoggerAspect - DAO  		:  first.builder.dao.BuilderDAO.getAllIntents()
DEBUG: first.builder.dao.AbstractDAO - 	 QueryId  	:  builder.getAllIntents
DEBUG: org.mybatis.spring.SqlSessionUtils - Creating a new SqlSession
DEBUG: org.mybatis.spring.SqlSessionUtils - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@8d9b891]
DEBUG: org.mybatis.spring.transaction.SpringManagedTransaction - JDBC Connection [net.sf.log4jdbc.ConnectionSpy@42f2f0bd] will be managed by Spring
2024-03-04 13:58:13,444  INFO SQL(simplebot)        :  SELECT I.No, I.Main, I.Name,I.Next, I.URL, I.Language
		FROM Intent I
		WHERE I.Account=1637
		ORDER BY I.No
DEBUG: org.mybatis.spring.SqlSessionUtils - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@8d9b891]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@8d9b891]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@8d9b891]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@8d9b891]
DEBUG: first.common.logger.LoggerAspect - ServiceImpl  	:  first.builder.service.BuilderService.getAllBertIntents()
DEBUG: first.common.logger.LoggerAspect - DAO  		:  first.builder.dao.BuilderDAO.getAllBertIntents()
DEBUG: first.builder.dao.AbstractDAO - 	 QueryId  	:  builder.getAllBertIntents
DEBUG: org.mybatis.spring.SqlSessionUtils - Creating a new SqlSession
DEBUG: org.mybatis.spring.SqlSessionUtils - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@40965487]
DEBUG: org.mybatis.spring.transaction.SpringManagedTransaction - JDBC Connection [net.sf.log4jdbc.ConnectionSpy@15ef7d5f] will be managed by Spring
2024-03-04 13:58:13,448  INFO SQL(simplebot)        :  SELECT B.No, B.Name, B.Language
		FROM BertIntent B LEFT OUTER JOIN BackendInfo BI
		ON B.BertItfId = BI.id
		WHERE BI.host=1637
		ORDER BY B.No
DEBUG: org.mybatis.spring.SqlSessionUtils - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@40965487]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@40965487]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@40965487]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@40965487]
DEBUG: first.common.logger.LoggerAspect - Controller  	:  first.builder.controller.BuilderController.getTask()
DEBUG: first.common.logger.LoggerAspect - ServiceImpl  	:  first.builder.service.BuilderService.getTaskCount()
DEBUG: first.common.logger.LoggerAspect - DAO  		:  first.builder.dao.BuilderDAO.getTaskCount()
DEBUG: first.builder.dao.AbstractDAO - 	 QueryId  	:  builder.getTaskCount
DEBUG: org.mybatis.spring.SqlSessionUtils - Creating a new SqlSession
DEBUG: org.mybatis.spring.SqlSessionUtils - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@25189dfa]
DEBUG: org.mybatis.spring.transaction.SpringManagedTransaction - JDBC Connection [net.sf.log4jdbc.ConnectionSpy@1477df62] will be managed by Spring
2024-03-04 13:58:13,489  INFO SQL(simplebot)        :  SELECT COUNT(*) FROM Intent WHERE Account=1637
 and Language=1
DEBUG: org.mybatis.spring.SqlSessionUtils - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@25189dfa]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@25189dfa]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@25189dfa]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@25189dfa]
DEBUG: first.common.logger.LoggerAspect - ServiceImpl  	:  first.builder.service.BuilderService.getAnswerList()
DEBUG: first.common.logger.LoggerAspect - DAO  		:  first.builder.dao.BuilderDAO.getAnswerList()
DEBUG: first.builder.dao.AbstractDAO - 	 QueryId  	:  builder.getAnswerList
DEBUG: org.mybatis.spring.SqlSessionUtils - Creating a new SqlSession
DEBUG: org.mybatis.spring.SqlSessionUtils - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1c91e5a4]
DEBUG: org.mybatis.spring.transaction.SpringManagedTransaction - JDBC Connection [net.sf.log4jdbc.ConnectionSpy@4f73ef6a] will be managed by Spring
2024-03-04 13:58:13,494  INFO SQL(simplebot)        :  SELECT I.No, I.Main, I.Name, A.answer, I.Account
		FROM Intent I LEFT OUTER JOIN Answer A
		ON I.Answer = A.No
		WHERE I.Account=1637
 and I.Language=1
		ORDER BY I.No
		OFFSET 0 ROWS
		FETCH NEXT 15 ROWS ONLY
DEBUG: org.mybatis.spring.SqlSessionUtils - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1c91e5a4]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1c91e5a4]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1c91e5a4]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1c91e5a4]
DEBUG: first.common.logger.LoggerAspect - ServiceImpl  	:  first.builder.service.BuilderService.getAllIntents()
DEBUG: first.common.logger.LoggerAspect - DAO  		:  first.builder.dao.BuilderDAO.getAllIntents()
DEBUG: first.builder.dao.AbstractDAO - 	 QueryId  	:  builder.getAllIntents
DEBUG: org.mybatis.spring.SqlSessionUtils - Creating a new SqlSession
DEBUG: org.mybatis.spring.SqlSessionUtils - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@f26d514]
DEBUG: org.mybatis.spring.transaction.SpringManagedTransaction - JDBC Connection [net.sf.log4jdbc.ConnectionSpy@3945f359] will be managed by Spring
2024-03-04 13:58:13,499  INFO SQL(simplebot)        :  SELECT I.No, I.Main, I.Name,I.Next, I.URL, I.Language
		FROM Intent I
		WHERE I.Account=1637
		ORDER BY I.No
DEBUG: org.mybatis.spring.SqlSessionUtils - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@f26d514]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@f26d514]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@f26d514]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@f26d514]
DEBUG: first.common.logger.LoggerAspect - ServiceImpl  	:  first.builder.service.BuilderService.getAllBertIntents()
DEBUG: first.common.logger.LoggerAspect - DAO  		:  first.builder.dao.BuilderDAO.getAllBertIntents()
DEBUG: first.builder.dao.AbstractDAO - 	 QueryId  	:  builder.getAllBertIntents
DEBUG: org.mybatis.spring.SqlSessionUtils - Creating a new SqlSession
DEBUG: org.mybatis.spring.SqlSessionUtils - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@756fec00]
DEBUG: org.mybatis.spring.transaction.SpringManagedTransaction - JDBC Connection [net.sf.log4jdbc.ConnectionSpy@277950f6] will be managed by Spring
2024-03-04 13:58:13,504  INFO SQL(simplebot)        :  SELECT B.No, B.Name, B.Language
		FROM BertIntent B LEFT OUTER JOIN BackendInfo BI
		ON B.BertItfId = BI.id
		WHERE BI.host=1637
		ORDER BY B.No
DEBUG: org.mybatis.spring.SqlSessionUtils - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@756fec00]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@756fec00]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@756fec00]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@756fec00]
DEBUG: first.common.logger.LoggerAspect - Controller  	:  first.builder.controller.BuilderController.builderContentsNewChatbot()
DEBUG: first.common.logger.LoggerAspect - Controller  	:  first.builder.controller.BuilderController.builderBottomnewChatbot()
DEBUG: first.common.logger.LoggerAspect - ServiceImpl  	:  first.builder.service.BuilderService.getDomain()
DEBUG: first.common.logger.LoggerAspect - DAO  		:  first.builder.dao.BuilderDAO.getDomain()
DEBUG: first.builder.dao.AbstractDAO - 	 QueryId  	:  builder.getDomain
DEBUG: org.mybatis.spring.SqlSessionUtils - Creating a new SqlSession
DEBUG: org.mybatis.spring.SqlSessionUtils - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@544deed0]
DEBUG: org.mybatis.spring.transaction.SpringManagedTransaction - JDBC Connection [net.sf.log4jdbc.ConnectionSpy@326f4ade] will be managed by Spring
2024-03-04 13:58:14,597  INFO SQL(simplebot)        :  SELECT Name, DefaultHost
		From Domain
DEBUG: org.mybatis.spring.SqlSessionUtils - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@544deed0]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@544deed0]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@544deed0]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@544deed0]
DEBUG: first.common.logger.LoggerAspect - Controller  	:  first.builder.controller.BuilderController.checkNewHostname()
DEBUG: first.common.logger.LoggerAspect - ServiceImpl  	:  first.builder.service.BuilderService.getNewHostName()
DEBUG: first.common.logger.LoggerAspect - DAO  		:  first.builder.dao.BuilderDAO.getNewHostName()
DEBUG: first.builder.dao.AbstractDAO - 	 QueryId  	:  builder.getNewHostName
DEBUG: org.mybatis.spring.SqlSessionUtils - Creating a new SqlSession
DEBUG: org.mybatis.spring.SqlSessionUtils - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@12029b4c]
DEBUG: org.mybatis.spring.transaction.SpringManagedTransaction - JDBC Connection [net.sf.log4jdbc.ConnectionSpy@21ed503] will be managed by Spring
2024-03-04 13:58:19,962  INFO SQL(simplebot)        :  SELECT No, Host
		From Account
		Where Host='init2'
DEBUG: org.mybatis.spring.SqlSessionUtils - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@12029b4c]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@12029b4c]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@12029b4c]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@12029b4c]
DEBUG: first.common.logger.LoggerAspect - Controller  	:  first.builder.controller.BuilderController.addNewChatbot()
DEBUG: first.common.logger.LoggerAspect - ServiceImpl  	:  first.builder.service.BuilderService.addChatbot()
DEBUG: first.common.logger.LoggerAspect - DAO  		:  first.builder.dao.BuilderDAO.addChatbot()
DEBUG: first.builder.dao.AbstractDAO - 	 QueryId  	:  builder.addChatbot
DEBUG: org.mybatis.spring.SqlSessionUtils - Creating a new SqlSession
DEBUG: org.mybatis.spring.SqlSessionUtils - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@18da654a] was not registered for synchronization because synchronization is not active
DEBUG: org.mybatis.spring.transaction.SpringManagedTransaction - JDBC Connection [net.sf.log4jdbc.ConnectionSpy@409a71a9] will not be managed by Spring
2024-03-04 13:58:19,979  INFO SQL(simplebot)        :  insert into Account (Name, Email, Host, Description,Language)
		values ('init2','','init2', '', '1')
DEBUG: org.mybatis.spring.SqlSessionUtils - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@18da654a]
DEBUG: first.common.logger.LoggerAspect - ServiceImpl  	:  first.builder.service.BuilderService.getBackendInfo()
DEBUG: first.common.logger.LoggerAspect - DAO  		:  first.builder.dao.BuilderDAO.getBackendInfo()
DEBUG: first.builder.dao.AbstractDAO - 	 QueryId  	:  builder.getBackendInfo
DEBUG: org.mybatis.spring.SqlSessionUtils - Creating a new SqlSession
DEBUG: org.mybatis.spring.SqlSessionUtils - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@54829a49]
DEBUG: org.mybatis.spring.transaction.SpringManagedTransaction - JDBC Connection [net.sf.log4jdbc.ConnectionSpy@63855bfd] will be managed by Spring
2024-03-04 13:58:19,992  INFO SQL(simplebot)        :  SELECT *
		From BackendInfo
		WHERE host=1
DEBUG: org.mybatis.spring.SqlSessionUtils - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@54829a49]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@54829a49]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@54829a49]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@54829a49]
DEBUG: first.common.logger.LoggerAspect - ServiceImpl  	:  first.builder.service.BuilderService.insertBackendInfos()
DEBUG: first.common.logger.LoggerAspect - DAO  		:  first.builder.dao.BuilderDAO.insertBackendInfos()
DEBUG: first.builder.dao.AbstractDAO - 	 QueryId  	:  builder.insertBackendInfos
DEBUG: org.mybatis.spring.SqlSessionUtils - Creating a new SqlSession
DEBUG: org.mybatis.spring.SqlSessionUtils - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@5a531cce] was not registered for synchronization because synchronization is not active
DEBUG: org.mybatis.spring.transaction.SpringManagedTransaction - JDBC Connection [net.sf.log4jdbc.ConnectionSpy@72686b87] will not be managed by Spring
2024-03-04 13:58:19,996  INFO SQL(simplebot)        :  insert into BackendInfo
		(host, service, ip, port)
		values(1638,'ITF',NULL, NULL)
DEBUG: org.mybatis.spring.SqlSessionUtils - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@5a531cce]
DEBUG: first.common.logger.LoggerAspect - ServiceImpl  	:  first.builder.service.BuilderService.insertBackendInfos()
DEBUG: first.common.logger.LoggerAspect - DAO  		:  first.builder.dao.BuilderDAO.insertBackendInfos()
DEBUG: first.builder.dao.AbstractDAO - 	 QueryId  	:  builder.insertBackendInfos
DEBUG: org.mybatis.spring.SqlSessionUtils - Creating a new SqlSession
DEBUG: org.mybatis.spring.SqlSessionUtils - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@47c0f88] was not registered for synchronization because synchronization is not active
DEBUG: org.mybatis.spring.transaction.SpringManagedTransaction - JDBC Connection [net.sf.log4jdbc.ConnectionSpy@4fcbbdd7] will not be managed by Spring
2024-03-04 13:58:20,000  INFO SQL(simplebot)        :  insert into BackendInfo
		(host, service, ip, port)
		values(1638,'NER',NULL, NULL)
DEBUG: org.mybatis.spring.SqlSessionUtils - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@47c0f88]
DEBUG: first.common.logger.LoggerAspect - ServiceImpl  	:  first.builder.service.BuilderService.getIntentAnswer()
DEBUG: first.common.logger.LoggerAspect - DAO  		:  first.builder.dao.BuilderDAO.getIntentAnswer()
DEBUG: first.builder.dao.AbstractDAO - 	 QueryId  	:  builder.getIntentAnswer
DEBUG: org.mybatis.spring.SqlSessionUtils - Creating a new SqlSession
DEBUG: org.mybatis.spring.SqlSessionUtils - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1d089041]
DEBUG: org.mybatis.spring.transaction.SpringManagedTransaction - JDBC Connection [net.sf.log4jdbc.ConnectionSpy@7365b010] will be managed by Spring
2024-03-04 13:58:20,007  INFO SQL(simplebot)        :  SELECT I.No as I_No, I.Language as I_Language, I.Answer as I_Answer, I.Account as I_Account, I.TmpNo as I_TmpNo, A.No as A_NO, A.Answer as A_Answer, A.Account as A_Account, A.TmpNo as A_TmpNo, A.Language as A_Language,
				I.Main as Main, I.Name as Name, I.Entity as Entity, I.Next as Next, I.URL as URL, I.Description as Description, I.greetyn as greetyn, I.greet as greet, I.TmpNextIntent as TmpNextIntent
		FROM Intent I LEFT OUTER JOIN Answer A
		ON I.Answer = A.No
		WHERE I.Account=1 AND(I.Language=1 )
DEBUG: org.mybatis.spring.SqlSessionUtils - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1d089041]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1d089041]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1d089041]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1d089041]
DEBUG: first.common.logger.LoggerAspect - ServiceImpl  	:  first.builder.service.BuilderService.getIntentRelByAll()
DEBUG: first.common.logger.LoggerAspect - DAO  		:  first.builder.dao.BuilderDAO.getIntentRelByAll()
DEBUG: first.builder.dao.AbstractDAO - 	 QueryId  	:  builder.getIntentRelByAll
DEBUG: org.mybatis.spring.SqlSessionUtils - Creating a new SqlSession
DEBUG: org.mybatis.spring.SqlSessionUtils - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@575bed25]
DEBUG: org.mybatis.spring.transaction.SpringManagedTransaction - JDBC Connection [net.sf.log4jdbc.ConnectionSpy@40cd0360] will be managed by Spring
2024-03-04 13:58:20,013  INFO SQL(simplebot)        :  SELECT *
		From IntentRel
		WHERE SrcIntent = 1 or DestIntent = 1
DEBUG: org.mybatis.spring.SqlSessionUtils - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@575bed25]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@575bed25]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@575bed25]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@575bed25]
DEBUG: first.common.logger.LoggerAspect - ServiceImpl  	:  first.builder.service.BuilderService.getBertIntentByNo()
DEBUG: first.common.logger.LoggerAspect - DAO  		:  first.builder.dao.BuilderDAO.getBertIntentByNo()
DEBUG: first.builder.dao.AbstractDAO - 	 QueryId  	:  builder.getBertIntentByNo
DEBUG: org.mybatis.spring.SqlSessionUtils - Creating a new SqlSession
DEBUG: org.mybatis.spring.SqlSessionUtils - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@38c74429]
DEBUG: org.mybatis.spring.transaction.SpringManagedTransaction - JDBC Connection [net.sf.log4jdbc.ConnectionSpy@7e0f6311] will be managed by Spring
2024-03-04 13:58:20,018  INFO SQL(simplebot)        :  select *
		from BertIntent
		where (BertItfId = 1 or BertItfId = 2) AND (Language=1 )
DEBUG: org.mybatis.spring.SqlSessionUtils - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@38c74429]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@38c74429]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@38c74429]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@38c74429]
DEBUG: first.common.logger.LoggerAspect - ServiceImpl  	:  first.builder.service.BuilderService.insertAnswerByAll()
DEBUG: first.common.logger.LoggerAspect - DAO  		:  first.builder.dao.BuilderDAO.insertAnswerByAll()
DEBUG: first.builder.dao.AbstractDAO - 	 QueryId  	:  builder.insertAnswerByAll
DEBUG: org.mybatis.spring.SqlSessionUtils - Creating a new SqlSession
DEBUG: org.mybatis.spring.SqlSessionUtils - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@e844cf2] was not registered for synchronization because synchronization is not active
DEBUG: org.mybatis.spring.transaction.SpringManagedTransaction - JDBC Connection [net.sf.log4jdbc.ConnectionSpy@b41ec3d] will not be managed by Spring
2024-03-04 13:58:20,022  INFO SQL(simplebot)        :  insert into Answer (Answer, Account, Language,TmpNo)
		values ('안녕하세요',1638,1,NULL)
DEBUG: org.mybatis.spring.SqlSessionUtils - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@e844cf2]
DEBUG: first.common.logger.LoggerAspect - ServiceImpl  	:  first.builder.service.BuilderService.insertIntentNewAll()
DEBUG: first.common.logger.LoggerAspect - DAO  		:  first.builder.dao.BuilderDAO.insertIntentNewAll()
DEBUG: first.builder.dao.AbstractDAO - 	 QueryId  	:  builder.insertIntentNewAll
DEBUG: org.mybatis.spring.SqlSessionUtils - Creating a new SqlSession
DEBUG: org.mybatis.spring.SqlSessionUtils - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@27eeb193] was not registered for synchronization because synchronization is not active
DEBUG: org.mybatis.spring.transaction.SpringManagedTransaction - JDBC Connection [net.sf.log4jdbc.ConnectionSpy@627e7666] will not be managed by Spring
2024-03-04 13:58:20,027  INFO SQL(simplebot)        :  insert into Intent
		(Language, Main, Name, Answer, Next, URL, Description, Account, Entity, greetyn, TmpNo, TmpNextIntent, ResponseOrder)
		values(1, '처음으로', '처음으로', 1031643, NULL, NULL, NULL, 1638, 'N', '', NULL, NULL, '0,1,2')
DEBUG: org.mybatis.spring.SqlSessionUtils - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@27eeb193]
DEBUG: first.common.logger.LoggerAspect - ServiceImpl  	:  first.builder.service.BuilderService.insertBertIntentNew()
DEBUG: first.common.logger.LoggerAspect - DAO  		:  first.builder.dao.BuilderDAO.insertBertIntentNew()
DEBUG: first.builder.dao.AbstractDAO - 	 QueryId  	:  builder.insertBertIntentNew
DEBUG: org.mybatis.spring.SqlSessionUtils - Creating a new SqlSession
DEBUG: org.mybatis.spring.SqlSessionUtils - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@19e428d6] was not registered for synchronization because synchronization is not active
DEBUG: org.mybatis.spring.transaction.SpringManagedTransaction - JDBC Connection [net.sf.log4jdbc.ConnectionSpy@2bd923bf] will not be managed by Spring
2024-03-04 13:58:20,031  INFO SQL(simplebot)        :  insert into BertIntent
		(Name, Language, BertItfId)
		values('base',1,3149)
DEBUG: org.mybatis.spring.SqlSessionUtils - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@19e428d6]
DEBUG: first.common.logger.LoggerAspect - ServiceImpl  	:  first.builder.service.BuilderService.selectReplaceDict()
DEBUG: first.common.logger.LoggerAspect - DAO  		:  first.builder.dao.BuilderDAO.selectReplaceDict()
DEBUG: first.builder.dao.AbstractDAO - 	 QueryId  	:  builder.selectReplaceDict
DEBUG: org.mybatis.spring.SqlSessionUtils - Creating a new SqlSession
DEBUG: org.mybatis.spring.SqlSessionUtils - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@31688721]
DEBUG: org.mybatis.spring.transaction.SpringManagedTransaction - JDBC Connection [net.sf.log4jdbc.ConnectionSpy@394eb45f] will be managed by Spring
2024-03-04 13:58:20,035  INFO SQL(simplebot)        :  SELECT *
		FROM ReplaceDict
		WHERE Host = 1
		ORDER BY Length(RTRIM(`Before`)) desc
DEBUG: org.mybatis.spring.SqlSessionUtils - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@31688721]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@31688721]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@31688721]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@31688721]
DEBUG: first.common.logger.LoggerAspect - Controller  	:  first.builder.controller.BuilderController.startSaveSetting()
DEBUG: first.common.logger.LoggerAspect - ServiceImpl  	:  first.builder.service.BuilderService.getStyleCSS()
DEBUG: first.common.logger.LoggerAspect - DAO  		:  first.builder.dao.BuilderDAO.getStyleCSS()
DEBUG: first.builder.dao.AbstractDAO - 	 QueryId  	:  builder.getStyleCSS
DEBUG: org.mybatis.spring.SqlSessionUtils - Creating a new SqlSession
DEBUG: org.mybatis.spring.SqlSessionUtils - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@6f1ba893]
DEBUG: org.mybatis.spring.transaction.SpringManagedTransaction - JDBC Connection [net.sf.log4jdbc.ConnectionSpy@177161b6] will be managed by Spring
2024-03-04 13:58:20,089  INFO SQL(simplebot)        :  SELECT *
		FROM style_css SC
		WHERE host='1638'
DEBUG: org.mybatis.spring.SqlSessionUtils - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@6f1ba893]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@6f1ba893]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@6f1ba893]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@6f1ba893]
DEBUG: first.common.logger.LoggerAspect - ServiceImpl  	:  first.builder.service.BuilderService.getStyleCSS()
DEBUG: first.common.logger.LoggerAspect - DAO  		:  first.builder.dao.BuilderDAO.getStyleCSS()
DEBUG: first.builder.dao.AbstractDAO - 	 QueryId  	:  builder.getStyleCSS
DEBUG: org.mybatis.spring.SqlSessionUtils - Creating a new SqlSession
DEBUG: org.mybatis.spring.SqlSessionUtils - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@4fe0fd9f]
DEBUG: org.mybatis.spring.transaction.SpringManagedTransaction - JDBC Connection [net.sf.log4jdbc.ConnectionSpy@4c3e6a18] will be managed by Spring
2024-03-04 13:58:20,108  INFO SQL(simplebot)        :  SELECT *
		FROM style_css SC
		WHERE host='1638'
DEBUG: org.mybatis.spring.SqlSessionUtils - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@4fe0fd9f]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@4fe0fd9f]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@4fe0fd9f]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@4fe0fd9f]
DEBUG: first.common.logger.LoggerAspect - ServiceImpl  	:  first.builder.service.BuilderService.insertStyleCSS()
DEBUG: first.common.logger.LoggerAspect - DAO  		:  first.builder.dao.BuilderDAO.insertStyleCSS()
DEBUG: first.builder.dao.AbstractDAO - 	 QueryId  	:  builder.insertStyleCSS
DEBUG: org.mybatis.spring.SqlSessionUtils - Creating a new SqlSession
DEBUG: org.mybatis.spring.SqlSessionUtils - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@4cf3622c] was not registered for synchronization because synchronization is not active
DEBUG: org.mybatis.spring.transaction.SpringManagedTransaction - JDBC Connection [net.sf.log4jdbc.ConnectionSpy@3c7d6b1e] will not be managed by Spring
2024-03-04 13:58:20,112  INFO SQL(simplebot)        :  insert into style_css
		(host, textColor, mainColor, logoSize, posX, posY)
		values('1638', '255,255,255', '84,84,84', '34', '-1', '-1')
DEBUG: org.mybatis.spring.SqlSessionUtils - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@4cf3622c]
DEBUG: first.common.logger.LoggerAspect - Controller  	:  first.builder.controller.BuilderController.saveSetting()
DEBUG: first.common.logger.LoggerAspect - ServiceImpl  	:  first.builder.service.BuilderService.updateAccount()
DEBUG: first.common.logger.LoggerAspect - DAO  		:  first.builder.dao.BuilderDAO.updateAccount()
DEBUG: first.builder.dao.AbstractDAO - 	 QueryId  	:  builder.updateAccountSetting
DEBUG: org.mybatis.spring.SqlSessionUtils - Creating a new SqlSession
DEBUG: org.mybatis.spring.SqlSessionUtils - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@60c70709] was not registered for synchronization because synchronization is not active
DEBUG: org.mybatis.spring.transaction.SpringManagedTransaction - JDBC Connection [net.sf.log4jdbc.ConnectionSpy@6e6824a] will not be managed by Spring
2024-03-04 13:58:20,128  INFO SQL(simplebot)        :  update Account
		set Name = 'init2' , Email = '', Host='init2', Description=''
		WHERE No = '1638'
DEBUG: org.mybatis.spring.SqlSessionUtils - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@60c70709]
DEBUG: first.common.logger.LoggerAspect - Controller  	:  first.builder.controller.BuilderController.getChatList()
DEBUG: first.common.logger.LoggerAspect - ServiceImpl  	:  first.builder.service.BuilderService.getChatbotList()
DEBUG: first.common.logger.LoggerAspect - DAO  		:  first.builder.dao.BuilderDAO.getChatbotList()
DEBUG: first.builder.dao.AbstractDAO - 	 QueryId  	:  builder.getChatbotList
DEBUG: org.mybatis.spring.SqlSessionUtils - Creating a new SqlSession
DEBUG: org.mybatis.spring.SqlSessionUtils - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@43f7c494]
DEBUG: org.mybatis.spring.transaction.SpringManagedTransaction - JDBC Connection [net.sf.log4jdbc.ConnectionSpy@49620906] will be managed by Spring
2024-03-04 13:58:20,161  INFO SQL(simplebot)        :  SELECT  /* No, Name, Host, Language */
			*
		from Account WHERE 1=1
		AND No IN
		 
				 (  
					'1637'
				 , 
					'1638'
				 ) 
			 

		 
		ORDER BY No
DEBUG: org.mybatis.spring.SqlSessionUtils - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@43f7c494]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@43f7c494]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@43f7c494]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@43f7c494]
DEBUG: first.common.logger.LoggerAspect - Controller  	:  first.builder.controller.BuilderController.builderBottomAnswer()
DEBUG: first.common.logger.LoggerAspect - Controller  	:  first.builder.controller.BuilderController.builderContentsAnswer()
DEBUG: first.common.logger.LoggerAspect - Controller  	:  first.builder.controller.BuilderController.getTask()
DEBUG: first.common.logger.LoggerAspect - ServiceImpl  	:  first.builder.service.BuilderService.getTaskCount()
DEBUG: first.common.logger.LoggerAspect - DAO  		:  first.builder.dao.BuilderDAO.getTaskCount()
DEBUG: first.builder.dao.AbstractDAO - 	 QueryId  	:  builder.getTaskCount
DEBUG: org.mybatis.spring.SqlSessionUtils - Creating a new SqlSession
DEBUG: org.mybatis.spring.SqlSessionUtils - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@55f6f64d]
DEBUG: org.mybatis.spring.transaction.SpringManagedTransaction - JDBC Connection [net.sf.log4jdbc.ConnectionSpy@2ff2b98f] will be managed by Spring
2024-03-04 13:58:20,265  INFO SQL(simplebot)        :  SELECT COUNT(*) FROM Intent WHERE Account=1637
 and Language=1
DEBUG: org.mybatis.spring.SqlSessionUtils - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@55f6f64d]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@55f6f64d]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@55f6f64d]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@55f6f64d]
DEBUG: first.common.logger.LoggerAspect - ServiceImpl  	:  first.builder.service.BuilderService.getAnswerList()
DEBUG: first.common.logger.LoggerAspect - DAO  		:  first.builder.dao.BuilderDAO.getAnswerList()
DEBUG: first.builder.dao.AbstractDAO - 	 QueryId  	:  builder.getAnswerList
DEBUG: org.mybatis.spring.SqlSessionUtils - Creating a new SqlSession
DEBUG: org.mybatis.spring.SqlSessionUtils - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@15c43384]
DEBUG: org.mybatis.spring.transaction.SpringManagedTransaction - JDBC Connection [net.sf.log4jdbc.ConnectionSpy@6e19e14a] will be managed by Spring
2024-03-04 13:58:20,269  INFO SQL(simplebot)        :  SELECT I.No, I.Main, I.Name, A.answer, I.Account
		FROM Intent I LEFT OUTER JOIN Answer A
		ON I.Answer = A.No
		WHERE I.Account=1637
 and I.Language=1
		ORDER BY I.No
		OFFSET 0 ROWS
		FETCH NEXT 15 ROWS ONLY
DEBUG: org.mybatis.spring.SqlSessionUtils - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@15c43384]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@15c43384]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@15c43384]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@15c43384]
DEBUG: first.common.logger.LoggerAspect - ServiceImpl  	:  first.builder.service.BuilderService.getAllIntents()
DEBUG: first.common.logger.LoggerAspect - DAO  		:  first.builder.dao.BuilderDAO.getAllIntents()
DEBUG: first.builder.dao.AbstractDAO - 	 QueryId  	:  builder.getAllIntents
DEBUG: org.mybatis.spring.SqlSessionUtils - Creating a new SqlSession
DEBUG: org.mybatis.spring.SqlSessionUtils - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@49517d6b]
DEBUG: org.mybatis.spring.transaction.SpringManagedTransaction - JDBC Connection [net.sf.log4jdbc.ConnectionSpy@5330bfd6] will be managed by Spring
2024-03-04 13:58:20,273  INFO SQL(simplebot)        :  SELECT I.No, I.Main, I.Name,I.Next, I.URL, I.Language
		FROM Intent I
		WHERE I.Account=1637
		ORDER BY I.No
DEBUG: org.mybatis.spring.SqlSessionUtils - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@49517d6b]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@49517d6b]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@49517d6b]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@49517d6b]
DEBUG: first.common.logger.LoggerAspect - ServiceImpl  	:  first.builder.service.BuilderService.getAllBertIntents()
DEBUG: first.common.logger.LoggerAspect - DAO  		:  first.builder.dao.BuilderDAO.getAllBertIntents()
DEBUG: first.builder.dao.AbstractDAO - 	 QueryId  	:  builder.getAllBertIntents
DEBUG: org.mybatis.spring.SqlSessionUtils - Creating a new SqlSession
DEBUG: org.mybatis.spring.SqlSessionUtils - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@5182ac54]
DEBUG: org.mybatis.spring.transaction.SpringManagedTransaction - JDBC Connection [net.sf.log4jdbc.ConnectionSpy@48156cf6] will be managed by Spring
2024-03-04 13:58:20,277  INFO SQL(simplebot)        :  SELECT B.No, B.Name, B.Language
		FROM BertIntent B LEFT OUTER JOIN BackendInfo BI
		ON B.BertItfId = BI.id
		WHERE BI.host=1637
		ORDER BY B.No
DEBUG: org.mybatis.spring.SqlSessionUtils - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@5182ac54]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@5182ac54]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@5182ac54]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@5182ac54]
DEBUG: first.common.logger.LoggerAspect - Controller  	:  first.builder.controller.BuilderController.getTask()
DEBUG: first.common.logger.LoggerAspect - ServiceImpl  	:  first.builder.service.BuilderService.getTaskCount()
DEBUG: first.common.logger.LoggerAspect - DAO  		:  first.builder.dao.BuilderDAO.getTaskCount()
DEBUG: first.builder.dao.AbstractDAO - 	 QueryId  	:  builder.getTaskCount
DEBUG: org.mybatis.spring.SqlSessionUtils - Creating a new SqlSession
DEBUG: org.mybatis.spring.SqlSessionUtils - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@7977b0b]
DEBUG: org.mybatis.spring.transaction.SpringManagedTransaction - JDBC Connection [net.sf.log4jdbc.ConnectionSpy@224fcc27] will be managed by Spring
2024-03-04 13:58:20,303  INFO SQL(simplebot)        :  SELECT COUNT(*) FROM Intent WHERE Account=1637
 and Language=1
DEBUG: org.mybatis.spring.SqlSessionUtils - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@7977b0b]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@7977b0b]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@7977b0b]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@7977b0b]
DEBUG: first.common.logger.LoggerAspect - ServiceImpl  	:  first.builder.service.BuilderService.getAnswerList()
DEBUG: first.common.logger.LoggerAspect - DAO  		:  first.builder.dao.BuilderDAO.getAnswerList()
DEBUG: first.builder.dao.AbstractDAO - 	 QueryId  	:  builder.getAnswerList
DEBUG: org.mybatis.spring.SqlSessionUtils - Creating a new SqlSession
DEBUG: org.mybatis.spring.SqlSessionUtils - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@6c503469]
DEBUG: org.mybatis.spring.transaction.SpringManagedTransaction - JDBC Connection [net.sf.log4jdbc.ConnectionSpy@3c14d785] will be managed by Spring
2024-03-04 13:58:20,307  INFO SQL(simplebot)        :  SELECT I.No, I.Main, I.Name, A.answer, I.Account
		FROM Intent I LEFT OUTER JOIN Answer A
		ON I.Answer = A.No
		WHERE I.Account=1637
 and I.Language=1
		ORDER BY I.No
		OFFSET 0 ROWS
		FETCH NEXT 15 ROWS ONLY
DEBUG: org.mybatis.spring.SqlSessionUtils - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@6c503469]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@6c503469]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@6c503469]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@6c503469]
DEBUG: first.common.logger.LoggerAspect - ServiceImpl  	:  first.builder.service.BuilderService.getAllIntents()
DEBUG: first.common.logger.LoggerAspect - DAO  		:  first.builder.dao.BuilderDAO.getAllIntents()
DEBUG: first.builder.dao.AbstractDAO - 	 QueryId  	:  builder.getAllIntents
DEBUG: org.mybatis.spring.SqlSessionUtils - Creating a new SqlSession
DEBUG: org.mybatis.spring.SqlSessionUtils - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@30521e16]
DEBUG: org.mybatis.spring.transaction.SpringManagedTransaction - JDBC Connection [net.sf.log4jdbc.ConnectionSpy@2d1f69bc] will be managed by Spring
2024-03-04 13:58:20,311  INFO SQL(simplebot)        :  SELECT I.No, I.Main, I.Name,I.Next, I.URL, I.Language
		FROM Intent I
		WHERE I.Account=1637
		ORDER BY I.No
DEBUG: org.mybatis.spring.SqlSessionUtils - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@30521e16]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@30521e16]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@30521e16]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@30521e16]
DEBUG: first.common.logger.LoggerAspect - ServiceImpl  	:  first.builder.service.BuilderService.getAllBertIntents()
DEBUG: first.common.logger.LoggerAspect - DAO  		:  first.builder.dao.BuilderDAO.getAllBertIntents()
DEBUG: first.builder.dao.AbstractDAO - 	 QueryId  	:  builder.getAllBertIntents
DEBUG: org.mybatis.spring.SqlSessionUtils - Creating a new SqlSession
DEBUG: org.mybatis.spring.SqlSessionUtils - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@506d1162]
DEBUG: org.mybatis.spring.transaction.SpringManagedTransaction - JDBC Connection [net.sf.log4jdbc.ConnectionSpy@6fef8f8c] will be managed by Spring
2024-03-04 13:58:20,315  INFO SQL(simplebot)        :  SELECT B.No, B.Name, B.Language
		FROM BertIntent B LEFT OUTER JOIN BackendInfo BI
		ON B.BertItfId = BI.id
		WHERE BI.host=1637
		ORDER BY B.No
DEBUG: org.mybatis.spring.SqlSessionUtils - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@506d1162]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@506d1162]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@506d1162]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@506d1162]
DEBUG: first.common.logger.LoggerAspect - Controller  	:  first.builder.controller.BuilderController.getTestPage()
DEBUG: first.common.logger.LoggerAspect - ServiceImpl  	:  first.builder.service.BuilderService.getHostByAccount()
DEBUG: first.common.logger.LoggerAspect - DAO  		:  first.builder.dao.BuilderDAO.getHostByAccount()
DEBUG: first.builder.dao.AbstractDAO - 	 QueryId  	:  builder.getHostByAccount
DEBUG: org.mybatis.spring.SqlSessionUtils - Creating a new SqlSession
DEBUG: org.mybatis.spring.SqlSessionUtils - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@ce518a0]
DEBUG: org.mybatis.spring.transaction.SpringManagedTransaction - JDBC Connection [net.sf.log4jdbc.ConnectionSpy@41bee105] will be managed by Spring
2024-03-04 13:58:22,251  INFO SQL(simplebot)        :  SELECT Host
		From Account
		Where No=1637
DEBUG: org.mybatis.spring.SqlSessionUtils - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@ce518a0]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@ce518a0]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@ce518a0]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@ce518a0]
DEBUG: first.common.logger.LoggerAspect - Controller  	:  first.builder.controller.BuilderController.getTask()
DEBUG: first.common.logger.LoggerAspect - ServiceImpl  	:  first.builder.service.BuilderService.getTaskCount()
DEBUG: first.common.logger.LoggerAspect - DAO  		:  first.builder.dao.BuilderDAO.getTaskCount()
DEBUG: first.builder.dao.AbstractDAO - 	 QueryId  	:  builder.getTaskCount
DEBUG: org.mybatis.spring.SqlSessionUtils - Creating a new SqlSession
DEBUG: org.mybatis.spring.SqlSessionUtils - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@7a7e52ca]
DEBUG: org.mybatis.spring.transaction.SpringManagedTransaction - JDBC Connection [net.sf.log4jdbc.ConnectionSpy@21d4ea8d] will be managed by Spring
2024-03-04 13:58:24,873  INFO SQL(simplebot)        :  SELECT COUNT(*) FROM Intent WHERE Account=1638
 and Language=1
DEBUG: org.mybatis.spring.SqlSessionUtils - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@7a7e52ca]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@7a7e52ca]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@7a7e52ca]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@7a7e52ca]
DEBUG: first.common.logger.LoggerAspect - ServiceImpl  	:  first.builder.service.BuilderService.getAnswerList()
DEBUG: first.common.logger.LoggerAspect - DAO  		:  first.builder.dao.BuilderDAO.getAnswerList()
DEBUG: first.builder.dao.AbstractDAO - 	 QueryId  	:  builder.getAnswerList
DEBUG: org.mybatis.spring.SqlSessionUtils - Creating a new SqlSession
DEBUG: org.mybatis.spring.SqlSessionUtils - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@4b29b50d]
DEBUG: org.mybatis.spring.transaction.SpringManagedTransaction - JDBC Connection [net.sf.log4jdbc.ConnectionSpy@15288fe2] will be managed by Spring
2024-03-04 13:58:24,876  INFO SQL(simplebot)        :  SELECT I.No, I.Main, I.Name, A.answer, I.Account
		FROM Intent I LEFT OUTER JOIN Answer A
		ON I.Answer = A.No
		WHERE I.Account=1638
 and I.Language=1
		ORDER BY I.No
		OFFSET 0 ROWS
		FETCH NEXT 15 ROWS ONLY
DEBUG: org.mybatis.spring.SqlSessionUtils - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@4b29b50d]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@4b29b50d]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@4b29b50d]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@4b29b50d]
DEBUG: first.common.logger.LoggerAspect - ServiceImpl  	:  first.builder.service.BuilderService.getAllIntents()
DEBUG: first.common.logger.LoggerAspect - DAO  		:  first.builder.dao.BuilderDAO.getAllIntents()
DEBUG: first.builder.dao.AbstractDAO - 	 QueryId  	:  builder.getAllIntents
DEBUG: org.mybatis.spring.SqlSessionUtils - Creating a new SqlSession
DEBUG: org.mybatis.spring.SqlSessionUtils - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@4a5a869c]
DEBUG: org.mybatis.spring.transaction.SpringManagedTransaction - JDBC Connection [net.sf.log4jdbc.ConnectionSpy@45e5e390] will be managed by Spring
2024-03-04 13:58:24,879  INFO SQL(simplebot)        :  SELECT I.No, I.Main, I.Name,I.Next, I.URL, I.Language
		FROM Intent I
		WHERE I.Account=1638
		ORDER BY I.No
DEBUG: org.mybatis.spring.SqlSessionUtils - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@4a5a869c]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@4a5a869c]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@4a5a869c]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@4a5a869c]
DEBUG: first.common.logger.LoggerAspect - ServiceImpl  	:  first.builder.service.BuilderService.getAllBertIntents()
DEBUG: first.common.logger.LoggerAspect - DAO  		:  first.builder.dao.BuilderDAO.getAllBertIntents()
DEBUG: first.builder.dao.AbstractDAO - 	 QueryId  	:  builder.getAllBertIntents
DEBUG: org.mybatis.spring.SqlSessionUtils - Creating a new SqlSession
DEBUG: org.mybatis.spring.SqlSessionUtils - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@59d6664b]
DEBUG: org.mybatis.spring.transaction.SpringManagedTransaction - JDBC Connection [net.sf.log4jdbc.ConnectionSpy@7650aa7] will be managed by Spring
2024-03-04 13:58:24,883  INFO SQL(simplebot)        :  SELECT B.No, B.Name, B.Language
		FROM BertIntent B LEFT OUTER JOIN BackendInfo BI
		ON B.BertItfId = BI.id
		WHERE BI.host=1638
		ORDER BY B.No
DEBUG: org.mybatis.spring.SqlSessionUtils - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@59d6664b]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@59d6664b]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@59d6664b]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@59d6664b]
DEBUG: first.common.logger.LoggerAspect - Controller  	:  first.builder.controller.BuilderController.getTestPage()
DEBUG: first.common.logger.LoggerAspect - ServiceImpl  	:  first.builder.service.BuilderService.getHostByAccount()
DEBUG: first.common.logger.LoggerAspect - DAO  		:  first.builder.dao.BuilderDAO.getHostByAccount()
DEBUG: first.builder.dao.AbstractDAO - 	 QueryId  	:  builder.getHostByAccount
DEBUG: org.mybatis.spring.SqlSessionUtils - Creating a new SqlSession
DEBUG: org.mybatis.spring.SqlSessionUtils - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@76937d9b]
DEBUG: org.mybatis.spring.transaction.SpringManagedTransaction - JDBC Connection [net.sf.log4jdbc.ConnectionSpy@5261dbb] will be managed by Spring
2024-03-04 13:58:26,307  INFO SQL(simplebot)        :  SELECT Host
		From Account
		Where No=1638
DEBUG: org.mybatis.spring.SqlSessionUtils - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@76937d9b]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@76937d9b]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@76937d9b]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@76937d9b]
DEBUG: first.common.logger.LoggerAspect - Controller  	:  first.builder.controller.BuilderController.getDetailTask()
DEBUG: first.common.logger.LoggerAspect - ServiceImpl  	:  first.builder.service.BuilderService.getIntentDetail()
DEBUG: first.common.logger.LoggerAspect - DAO  		:  first.builder.dao.BuilderDAO.getIntentDetail()
DEBUG: first.builder.dao.AbstractDAO - 	 QueryId  	:  builder.getAnswerDetail
DEBUG: org.mybatis.spring.SqlSessionUtils - Creating a new SqlSession
DEBUG: org.mybatis.spring.SqlSessionUtils - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@584ca14c]
DEBUG: org.mybatis.spring.transaction.SpringManagedTransaction - JDBC Connection [net.sf.log4jdbc.ConnectionSpy@13e25862] will be managed by Spring
2024-03-04 13:58:30,419  INFO SQL(simplebot)        :  SELECT I.No, I.Name, A.answer, I.URL, I.Description, I.Next, I.Language, I.Main, I.ResponseOrder, A.Url as A_URL
		FROM Intent I LEFT OUTER JOIN Answer A ON I.Answer = A.No
		WHERE I.No=1723134
		ORDER BY I.No
DEBUG: org.mybatis.spring.SqlSessionUtils - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@584ca14c]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@584ca14c]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@584ca14c]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@584ca14c]
DEBUG: first.common.logger.LoggerAspect - ServiceImpl  	:  first.builder.service.BuilderService.getIntentDetailByMain()
DEBUG: first.common.logger.LoggerAspect - DAO  		:  first.builder.dao.BuilderDAO.getIntentDetailByMain()
DEBUG: first.builder.dao.AbstractDAO - 	 QueryId  	:  builder.getAnswerDetailByMain
DEBUG: org.mybatis.spring.SqlSessionUtils - Creating a new SqlSession
DEBUG: org.mybatis.spring.SqlSessionUtils - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@496ebf12]
DEBUG: org.mybatis.spring.transaction.SpringManagedTransaction - JDBC Connection [net.sf.log4jdbc.ConnectionSpy@7d3aa8ed] will be managed by Spring
2024-03-04 13:58:30,425  INFO SQL(simplebot)        :  SELECT I.No, I.Name, I.Main, A.answer, I.URL, I.Description, I.Next, I.Language, A.Url as A_URL
		FROM Intent I LEFT OUTER JOIN Answer A ON I.Answer = A.No
		WHERE I.Main = '처음으로' AND I.Language != 1 AND I.Account = 1638
		ORDER BY I.No
DEBUG: org.mybatis.spring.SqlSessionUtils - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@496ebf12]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@496ebf12]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@496ebf12]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@496ebf12]
DEBUG: first.common.logger.LoggerAspect - ServiceImpl  	:  first.builder.service.BuilderService.getIntentRelInAnsDetail()
DEBUG: first.common.logger.LoggerAspect - DAO  		:  first.builder.dao.BuilderDAO.getIntentRelInAnsDetail()
DEBUG: first.builder.dao.AbstractDAO - 	 QueryId  	:  builder.getIntentRelInAnsDetail
DEBUG: org.mybatis.spring.SqlSessionUtils - Creating a new SqlSession
DEBUG: org.mybatis.spring.SqlSessionUtils - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@20903ee7]
DEBUG: org.mybatis.spring.transaction.SpringManagedTransaction - JDBC Connection [net.sf.log4jdbc.ConnectionSpy@73090f77] will be managed by Spring
2024-03-04 13:58:30,429  INFO SQL(simplebot)        :  SELECT IR.SrcIntent, IR.BertIntent, IR.DestIntent
		FROM IntentRel IR
		WHERE DestIntent=1723134
		ORDER By SrcIntent
DEBUG: org.mybatis.spring.SqlSessionUtils - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@20903ee7]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@20903ee7]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@20903ee7]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@20903ee7]
DEBUG: first.common.logger.LoggerAspect - Controller  	:  first.builder.controller.BuilderController.getImageCarousel()
DEBUG: first.common.logger.LoggerAspect - Controller  	:  first.builder.controller.BuilderController.deleteCache()
deleteCache start
/deleteCache :: DEL HOST :: 1638
DEBUG: first.common.logger.LoggerAspect - Controller  	:  first.builder.controller.BuilderController.getTaskCheck()
DEBUG: first.common.logger.LoggerAspect - ServiceImpl  	:  first.builder.service.BuilderService.getTaskCheck()
DEBUG: first.common.logger.LoggerAspect - DAO  		:  first.builder.dao.BuilderDAO.getTaskCheck()
DEBUG: first.builder.dao.AbstractDAO - 	 QueryId  	:  builder.getTaskCheck
DEBUG: org.mybatis.spring.SqlSessionUtils - Creating a new SqlSession
DEBUG: org.mybatis.spring.SqlSessionUtils - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@3d601cf1]
DEBUG: org.mybatis.spring.transaction.SpringManagedTransaction - JDBC Connection [net.sf.log4jdbc.ConnectionSpy@454889df] will be managed by Spring
2024-03-04 13:58:39,107  INFO SQL(simplebot)        :  SELECT IT.No, IT.Main
		FROM Intent IT
		WHERE Main=''
 and Language=1
 and Account=1638
DEBUG: org.mybatis.spring.SqlSessionUtils - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@3d601cf1]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@3d601cf1]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@3d601cf1]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@3d601cf1]
DEBUG: first.common.logger.LoggerAspect - Controller  	:  first.builder.controller.BuilderController.addModIntent()
DEBUG: first.common.logger.LoggerAspect - ServiceImpl  	:  first.builder.service.BuilderService.selectIntentNoAnswer()
DEBUG: first.common.logger.LoggerAspect - DAO  		:  first.builder.dao.BuilderDAO.selectIntentNoAnswer()
DEBUG: first.builder.dao.AbstractDAO - 	 QueryId  	:  builder.selectIntentNoAnswer
DEBUG: org.mybatis.spring.SqlSessionUtils - Creating a new SqlSession
DEBUG: org.mybatis.spring.SqlSessionUtils - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@278e32d6]
DEBUG: org.mybatis.spring.transaction.SpringManagedTransaction - JDBC Connection [net.sf.log4jdbc.ConnectionSpy@8c40bed] will be managed by Spring
2024-03-04 13:58:39,119  INFO SQL(simplebot)        :  SELECT Answer, URL
		FROM Intent
		WHERE No=1723134
DEBUG: org.mybatis.spring.SqlSessionUtils - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@278e32d6]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@278e32d6]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@278e32d6]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@278e32d6]
DEBUG: first.common.logger.LoggerAspect - ServiceImpl  	:  first.builder.service.BuilderService.insertAnswerNew()
DEBUG: first.common.logger.LoggerAspect - DAO  		:  first.builder.dao.BuilderDAO.insertAnswerNew()
DEBUG: first.builder.dao.AbstractDAO - 	 QueryId  	:  builder.insertAnswerNew
DEBUG: org.mybatis.spring.SqlSessionUtils - Creating a new SqlSession
DEBUG: org.mybatis.spring.SqlSessionUtils - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1deecd89] was not registered for synchronization because synchronization is not active
DEBUG: org.mybatis.spring.transaction.SpringManagedTransaction - JDBC Connection [net.sf.log4jdbc.ConnectionSpy@11eb6f88] will not be managed by Spring
2024-03-04 13:58:39,122  INFO SQL(simplebot)        :  insert into Answer (Answer, Account, Language, Url)
		values ('안녕하세요 init2 입니다',1638,1, '')
DEBUG: org.mybatis.spring.SqlSessionUtils - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1deecd89]
DEBUG: first.common.logger.LoggerAspect - ServiceImpl  	:  first.builder.service.BuilderService.updateOldIntent()
DEBUG: first.common.logger.LoggerAspect - DAO  		:  first.builder.dao.BuilderDAO.updateOldIntent()
DEBUG: first.builder.dao.AbstractDAO - 	 QueryId  	:  builder.updateOldIntent
DEBUG: org.mybatis.spring.SqlSessionUtils - Creating a new SqlSession
DEBUG: org.mybatis.spring.SqlSessionUtils - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@8f935de] was not registered for synchronization because synchronization is not active
DEBUG: org.mybatis.spring.transaction.SpringManagedTransaction - JDBC Connection [net.sf.log4jdbc.ConnectionSpy@8e17927] will not be managed by Spring
2024-03-04 13:58:39,132  INFO SQL(simplebot)        :  update Intent
		set Main = '처음으로', Name = '처음으로', Answer = 1031644, Next = '', URL = '', Description = '', ResponseOrder = '0,1,2'
		WHERE No = 1723134
DEBUG: org.mybatis.spring.SqlSessionUtils - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@8f935de]
DEBUG: first.common.logger.LoggerAspect - ServiceImpl  	:  first.builder.service.BuilderService.getBertIntentByDestIntent()
DEBUG: first.common.logger.LoggerAspect - DAO  		:  first.builder.dao.BuilderDAO.getBertIntentByDestIntent()
DEBUG: first.builder.dao.AbstractDAO - 	 QueryId  	:  builder.getBertIntentByDestIntent
DEBUG: org.mybatis.spring.SqlSessionUtils - Creating a new SqlSession
DEBUG: org.mybatis.spring.SqlSessionUtils - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@57ba5097]
DEBUG: org.mybatis.spring.transaction.SpringManagedTransaction - JDBC Connection [net.sf.log4jdbc.ConnectionSpy@4091c578] will be managed by Spring
2024-03-04 13:58:39,136  INFO SQL(simplebot)        :  SELECT IR.BertIntent
		FROM IntentRel IR WHERE DestIntent= 1723134
		GROUP BY IR.BertIntent
DEBUG: org.mybatis.spring.SqlSessionUtils - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@57ba5097]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@57ba5097]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@57ba5097]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@57ba5097]
DEBUG: first.common.logger.LoggerAspect - ServiceImpl  	:  first.builder.service.BuilderService.deleteOldIntentRel()
DEBUG: first.common.logger.LoggerAspect - DAO  		:  first.builder.dao.BuilderDAO.deleteOldIntentRel()
DEBUG: first.builder.dao.AbstractDAO - 	 QueryId  	:  builder.deleteOldIntentRel
DEBUG: org.mybatis.spring.SqlSessionUtils - Creating a new SqlSession
DEBUG: org.mybatis.spring.SqlSessionUtils - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@2639149f]
DEBUG: org.mybatis.spring.transaction.SpringManagedTransaction - JDBC Connection [net.sf.log4jdbc.ConnectionSpy@14b7a662] will be managed by Spring
2024-03-04 13:58:39,139  INFO SQL(simplebot)        :  delete
 from IntentRel
 where DestIntent = 1723134
DEBUG: org.mybatis.spring.SqlSessionUtils - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@2639149f]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@2639149f]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@2639149f]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@2639149f]
DEBUG: first.common.logger.LoggerAspect - ServiceImpl  	:  first.builder.service.BuilderService.deleteNoAnswerFromIntent()
DEBUG: first.common.logger.LoggerAspect - DAO  		:  first.builder.dao.BuilderDAO.deleteNoAnswerFromIntent()
DEBUG: first.builder.dao.AbstractDAO - 	 QueryId  	:  builder.deleteNoAnswerFromIntent
DEBUG: org.mybatis.spring.SqlSessionUtils - Creating a new SqlSession
DEBUG: org.mybatis.spring.SqlSessionUtils - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@544f8f79]
DEBUG: org.mybatis.spring.transaction.SpringManagedTransaction - JDBC Connection [net.sf.log4jdbc.ConnectionSpy@57398fe0] will be managed by Spring
2024-03-04 13:58:39,142  INFO SQL(simplebot)        :  DELETE A
		FROM Answer A
		LEFT JOIN Intent I ON A.No = I.Answer
		WHERE A.Account = 1638
		AND I.No IS NULL
DEBUG: org.mybatis.spring.SqlSessionUtils - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@544f8f79]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@544f8f79]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@544f8f79]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@544f8f79]
DEBUG: first.common.logger.LoggerAspect - Controller  	:  first.builder.controller.BuilderController.getTask()
DEBUG: first.common.logger.LoggerAspect - ServiceImpl  	:  first.builder.service.BuilderService.getTaskCount()
DEBUG: first.common.logger.LoggerAspect - DAO  		:  first.builder.dao.BuilderDAO.getTaskCount()
DEBUG: first.builder.dao.AbstractDAO - 	 QueryId  	:  builder.getTaskCount
DEBUG: org.mybatis.spring.SqlSessionUtils - Creating a new SqlSession
DEBUG: org.mybatis.spring.SqlSessionUtils - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@41e2504e]
DEBUG: org.mybatis.spring.transaction.SpringManagedTransaction - JDBC Connection [net.sf.log4jdbc.ConnectionSpy@3bb8b810] will be managed by Spring
2024-03-04 13:58:39,158  INFO SQL(simplebot)        :  SELECT COUNT(*) FROM Intent WHERE Account=1638
 and Language=1
DEBUG: org.mybatis.spring.SqlSessionUtils - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@41e2504e]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@41e2504e]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@41e2504e]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@41e2504e]
DEBUG: first.common.logger.LoggerAspect - ServiceImpl  	:  first.builder.service.BuilderService.getAnswerList()
DEBUG: first.common.logger.LoggerAspect - DAO  		:  first.builder.dao.BuilderDAO.getAnswerList()
DEBUG: first.builder.dao.AbstractDAO - 	 QueryId  	:  builder.getAnswerList
DEBUG: org.mybatis.spring.SqlSessionUtils - Creating a new SqlSession
DEBUG: org.mybatis.spring.SqlSessionUtils - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@42e39685]
DEBUG: org.mybatis.spring.transaction.SpringManagedTransaction - JDBC Connection [net.sf.log4jdbc.ConnectionSpy@54fd590c] will be managed by Spring
2024-03-04 13:58:39,161  INFO SQL(simplebot)        :  SELECT I.No, I.Main, I.Name, A.answer, I.Account
		FROM Intent I LEFT OUTER JOIN Answer A
		ON I.Answer = A.No
		WHERE I.Account=1638
 and I.Language=1
		ORDER BY I.No
		OFFSET 0 ROWS
		FETCH NEXT 15 ROWS ONLY
DEBUG: org.mybatis.spring.SqlSessionUtils - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@42e39685]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@42e39685]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@42e39685]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@42e39685]
DEBUG: first.common.logger.LoggerAspect - ServiceImpl  	:  first.builder.service.BuilderService.getAllIntents()
DEBUG: first.common.logger.LoggerAspect - DAO  		:  first.builder.dao.BuilderDAO.getAllIntents()
DEBUG: first.builder.dao.AbstractDAO - 	 QueryId  	:  builder.getAllIntents
DEBUG: org.mybatis.spring.SqlSessionUtils - Creating a new SqlSession
DEBUG: org.mybatis.spring.SqlSessionUtils - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@e4b5280]
DEBUG: org.mybatis.spring.transaction.SpringManagedTransaction - JDBC Connection [net.sf.log4jdbc.ConnectionSpy@1f6a1726] will be managed by Spring
2024-03-04 13:58:39,165  INFO SQL(simplebot)        :  SELECT I.No, I.Main, I.Name,I.Next, I.URL, I.Language
		FROM Intent I
		WHERE I.Account=1638
		ORDER BY I.No
DEBUG: org.mybatis.spring.SqlSessionUtils - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@e4b5280]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@e4b5280]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@e4b5280]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@e4b5280]
DEBUG: first.common.logger.LoggerAspect - ServiceImpl  	:  first.builder.service.BuilderService.getAllBertIntents()
DEBUG: first.common.logger.LoggerAspect - DAO  		:  first.builder.dao.BuilderDAO.getAllBertIntents()
DEBUG: first.builder.dao.AbstractDAO - 	 QueryId  	:  builder.getAllBertIntents
DEBUG: org.mybatis.spring.SqlSessionUtils - Creating a new SqlSession
DEBUG: org.mybatis.spring.SqlSessionUtils - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@4486b3ef]
DEBUG: org.mybatis.spring.transaction.SpringManagedTransaction - JDBC Connection [net.sf.log4jdbc.ConnectionSpy@634b3409] will be managed by Spring
2024-03-04 13:58:39,168  INFO SQL(simplebot)        :  SELECT B.No, B.Name, B.Language
		FROM BertIntent B LEFT OUTER JOIN BackendInfo BI
		ON B.BertItfId = BI.id
		WHERE BI.host=1638
		ORDER BY B.No
DEBUG: org.mybatis.spring.SqlSessionUtils - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@4486b3ef]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@4486b3ef]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@4486b3ef]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@4486b3ef]
DEBUG: first.common.logger.LoggerAspect - Controller  	:  first.builder.controller.BuilderController.getTestPage()
DEBUG: first.common.logger.LoggerAspect - ServiceImpl  	:  first.builder.service.BuilderService.getHostByAccount()
DEBUG: first.common.logger.LoggerAspect - DAO  		:  first.builder.dao.BuilderDAO.getHostByAccount()
DEBUG: first.builder.dao.AbstractDAO - 	 QueryId  	:  builder.getHostByAccount
DEBUG: org.mybatis.spring.SqlSessionUtils - Creating a new SqlSession
DEBUG: org.mybatis.spring.SqlSessionUtils - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@6c4f7050]
DEBUG: org.mybatis.spring.transaction.SpringManagedTransaction - JDBC Connection [net.sf.log4jdbc.ConnectionSpy@42c41797] will be managed by Spring
2024-03-04 13:58:41,197  INFO SQL(simplebot)        :  SELECT Host
		From Account
		Where No=1638
DEBUG: org.mybatis.spring.SqlSessionUtils - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@6c4f7050]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@6c4f7050]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@6c4f7050]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@6c4f7050]
DEBUG: first.common.logger.LoggerAspect - Controller  	:  first.builder.controller.BuilderController.chatbotBuilderCommon()
DEBUG: first.common.logger.LoggerAspect - Controller  	:  first.builder.controller.BuilderController.getChatList()
DEBUG: first.common.logger.LoggerAspect - ServiceImpl  	:  first.builder.service.BuilderService.getChatbotList()
DEBUG: first.common.logger.LoggerAspect - DAO  		:  first.builder.dao.BuilderDAO.getChatbotList()
DEBUG: first.builder.dao.AbstractDAO - 	 QueryId  	:  builder.getChatbotList
DEBUG: org.mybatis.spring.SqlSessionUtils - Creating a new SqlSession
DEBUG: org.mybatis.spring.SqlSessionUtils - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@175b2c06]
DEBUG: org.mybatis.spring.transaction.SpringManagedTransaction - JDBC Connection [net.sf.log4jdbc.ConnectionSpy@2765dbee] will be managed by Spring
2024-03-05 01:01:48,758  INFO SQL(simplebot)        :  SELECT  /* No, Name, Host, Language */
			*
		from Account WHERE 1=1
		AND No IN
		 
				 (  
					'1637'
				 , 
					'1638'
				 ) 
			 

		 
		ORDER BY No
DEBUG: org.mybatis.spring.SqlSessionUtils - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@175b2c06]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@175b2c06]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@175b2c06]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@175b2c06]
DEBUG: first.common.logger.LoggerAspect - Controller  	:  first.builder.controller.BuilderController.builderContentsAnswer()
DEBUG: first.common.logger.LoggerAspect - Controller  	:  first.builder.controller.BuilderController.builderBottomAnswer()
DEBUG: first.common.logger.LoggerAspect - Controller  	:  first.builder.controller.BuilderController.getTask()
DEBUG: first.common.logger.LoggerAspect - ServiceImpl  	:  first.builder.service.BuilderService.getTaskCount()
DEBUG: first.common.logger.LoggerAspect - DAO  		:  first.builder.dao.BuilderDAO.getTaskCount()
DEBUG: first.builder.dao.AbstractDAO - 	 QueryId  	:  builder.getTaskCount
DEBUG: org.mybatis.spring.SqlSessionUtils - Creating a new SqlSession
DEBUG: org.mybatis.spring.SqlSessionUtils - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@7e093c07]
DEBUG: org.mybatis.spring.transaction.SpringManagedTransaction - JDBC Connection [net.sf.log4jdbc.ConnectionSpy@4f3d2434] will be managed by Spring
2024-03-05 01:01:49,024  INFO SQL(simplebot)        :  SELECT COUNT(*) FROM Intent WHERE Account=1637
 and Language=1
DEBUG: org.mybatis.spring.SqlSessionUtils - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@7e093c07]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@7e093c07]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@7e093c07]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@7e093c07]
DEBUG: first.common.logger.LoggerAspect - ServiceImpl  	:  first.builder.service.BuilderService.getAnswerList()
DEBUG: first.common.logger.LoggerAspect - DAO  		:  first.builder.dao.BuilderDAO.getAnswerList()
DEBUG: first.builder.dao.AbstractDAO - 	 QueryId  	:  builder.getAnswerList
DEBUG: org.mybatis.spring.SqlSessionUtils - Creating a new SqlSession
DEBUG: org.mybatis.spring.SqlSessionUtils - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@bd27d2d]
DEBUG: org.mybatis.spring.transaction.SpringManagedTransaction - JDBC Connection [net.sf.log4jdbc.ConnectionSpy@3eb14c96] will be managed by Spring
2024-03-05 01:01:49,027  INFO SQL(simplebot)        :  SELECT I.No, I.Main, I.Name, A.answer, I.Account
		FROM Intent I LEFT OUTER JOIN Answer A
		ON I.Answer = A.No
		WHERE I.Account=1637
 and I.Language=1
		ORDER BY I.No
		OFFSET 0 ROWS
		FETCH NEXT 15 ROWS ONLY
DEBUG: org.mybatis.spring.SqlSessionUtils - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@bd27d2d]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@bd27d2d]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@bd27d2d]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@bd27d2d]
DEBUG: first.common.logger.LoggerAspect - ServiceImpl  	:  first.builder.service.BuilderService.getAllIntents()
DEBUG: first.common.logger.LoggerAspect - DAO  		:  first.builder.dao.BuilderDAO.getAllIntents()
DEBUG: first.builder.dao.AbstractDAO - 	 QueryId  	:  builder.getAllIntents
DEBUG: org.mybatis.spring.SqlSessionUtils - Creating a new SqlSession
DEBUG: org.mybatis.spring.SqlSessionUtils - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@50f1e0fd]
DEBUG: org.mybatis.spring.transaction.SpringManagedTransaction - JDBC Connection [net.sf.log4jdbc.ConnectionSpy@340cbea1] will be managed by Spring
2024-03-05 01:01:49,031  INFO SQL(simplebot)        :  SELECT I.No, I.Main, I.Name,I.Next, I.URL, I.Language
		FROM Intent I
		WHERE I.Account=1637
		ORDER BY I.No
DEBUG: org.mybatis.spring.SqlSessionUtils - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@50f1e0fd]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@50f1e0fd]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@50f1e0fd]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@50f1e0fd]
DEBUG: first.common.logger.LoggerAspect - ServiceImpl  	:  first.builder.service.BuilderService.getAllBertIntents()
DEBUG: first.common.logger.LoggerAspect - DAO  		:  first.builder.dao.BuilderDAO.getAllBertIntents()
DEBUG: first.builder.dao.AbstractDAO - 	 QueryId  	:  builder.getAllBertIntents
DEBUG: org.mybatis.spring.SqlSessionUtils - Creating a new SqlSession
DEBUG: org.mybatis.spring.SqlSessionUtils - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@2b949394]
DEBUG: org.mybatis.spring.transaction.SpringManagedTransaction - JDBC Connection [net.sf.log4jdbc.ConnectionSpy@4489b364] will be managed by Spring
2024-03-05 01:01:49,035  INFO SQL(simplebot)        :  SELECT B.No, B.Name, B.Language
		FROM BertIntent B LEFT OUTER JOIN BackendInfo BI
		ON B.BertItfId = BI.id
		WHERE BI.host=1637
		ORDER BY B.No
DEBUG: org.mybatis.spring.SqlSessionUtils - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@2b949394]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@2b949394]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@2b949394]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@2b949394]
DEBUG: first.common.logger.LoggerAspect - Controller  	:  first.builder.controller.BuilderController.getTask()
DEBUG: first.common.logger.LoggerAspect - ServiceImpl  	:  first.builder.service.BuilderService.getTaskCount()
DEBUG: first.common.logger.LoggerAspect - DAO  		:  first.builder.dao.BuilderDAO.getTaskCount()
DEBUG: first.builder.dao.AbstractDAO - 	 QueryId  	:  builder.getTaskCount
DEBUG: org.mybatis.spring.SqlSessionUtils - Creating a new SqlSession
DEBUG: org.mybatis.spring.SqlSessionUtils - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@14fa32b6]
DEBUG: org.mybatis.spring.transaction.SpringManagedTransaction - JDBC Connection [net.sf.log4jdbc.ConnectionSpy@49be5e2a] will be managed by Spring
2024-03-05 01:01:49,309  INFO SQL(simplebot)        :  SELECT COUNT(*) FROM Intent WHERE Account=1637
 and Language=1
DEBUG: org.mybatis.spring.SqlSessionUtils - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@14fa32b6]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@14fa32b6]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@14fa32b6]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@14fa32b6]
DEBUG: first.common.logger.LoggerAspect - ServiceImpl  	:  first.builder.service.BuilderService.getAnswerList()
DEBUG: first.common.logger.LoggerAspect - DAO  		:  first.builder.dao.BuilderDAO.getAnswerList()
DEBUG: first.builder.dao.AbstractDAO - 	 QueryId  	:  builder.getAnswerList
DEBUG: org.mybatis.spring.SqlSessionUtils - Creating a new SqlSession
DEBUG: org.mybatis.spring.SqlSessionUtils - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@24efeead]
DEBUG: org.mybatis.spring.transaction.SpringManagedTransaction - JDBC Connection [net.sf.log4jdbc.ConnectionSpy@78e8a837] will be managed by Spring
2024-03-05 01:01:49,313  INFO SQL(simplebot)        :  SELECT I.No, I.Main, I.Name, A.answer, I.Account
		FROM Intent I LEFT OUTER JOIN Answer A
		ON I.Answer = A.No
		WHERE I.Account=1637
 and I.Language=1
		ORDER BY I.No
		OFFSET 0 ROWS
		FETCH NEXT 15 ROWS ONLY
DEBUG: org.mybatis.spring.SqlSessionUtils - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@24efeead]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@24efeead]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@24efeead]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@24efeead]
DEBUG: first.common.logger.LoggerAspect - ServiceImpl  	:  first.builder.service.BuilderService.getAllIntents()
DEBUG: first.common.logger.LoggerAspect - DAO  		:  first.builder.dao.BuilderDAO.getAllIntents()
DEBUG: first.builder.dao.AbstractDAO - 	 QueryId  	:  builder.getAllIntents
DEBUG: org.mybatis.spring.SqlSessionUtils - Creating a new SqlSession
DEBUG: org.mybatis.spring.SqlSessionUtils - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@21a6dc56]
DEBUG: org.mybatis.spring.transaction.SpringManagedTransaction - JDBC Connection [net.sf.log4jdbc.ConnectionSpy@1b331210] will be managed by Spring
2024-03-05 01:01:49,316  INFO SQL(simplebot)        :  SELECT I.No, I.Main, I.Name,I.Next, I.URL, I.Language
		FROM Intent I
		WHERE I.Account=1637
		ORDER BY I.No
DEBUG: org.mybatis.spring.SqlSessionUtils - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@21a6dc56]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@21a6dc56]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@21a6dc56]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@21a6dc56]
DEBUG: first.common.logger.LoggerAspect - ServiceImpl  	:  first.builder.service.BuilderService.getAllBertIntents()
DEBUG: first.common.logger.LoggerAspect - DAO  		:  first.builder.dao.BuilderDAO.getAllBertIntents()
DEBUG: first.builder.dao.AbstractDAO - 	 QueryId  	:  builder.getAllBertIntents
DEBUG: org.mybatis.spring.SqlSessionUtils - Creating a new SqlSession
DEBUG: org.mybatis.spring.SqlSessionUtils - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@424a30f7]
DEBUG: org.mybatis.spring.transaction.SpringManagedTransaction - JDBC Connection [net.sf.log4jdbc.ConnectionSpy@5b43af86] will be managed by Spring
2024-03-05 01:01:49,319  INFO SQL(simplebot)        :  SELECT B.No, B.Name, B.Language
		FROM BertIntent B LEFT OUTER JOIN BackendInfo BI
		ON B.BertItfId = BI.id
		WHERE BI.host=1637
		ORDER BY B.No
DEBUG: org.mybatis.spring.SqlSessionUtils - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@424a30f7]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@424a30f7]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@424a30f7]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@424a30f7]
DEBUG: first.common.logger.LoggerAspect - Controller  	:  first.builder.controller.BuilderController.chatbotBuilderCommon()
DEBUG: first.common.logger.LoggerAspect - Controller  	:  first.builder.controller.BuilderController.getChatList()
DEBUG: first.common.logger.LoggerAspect - ServiceImpl  	:  first.builder.service.BuilderService.getChatbotList()
DEBUG: first.common.logger.LoggerAspect - DAO  		:  first.builder.dao.BuilderDAO.getChatbotList()
DEBUG: first.builder.dao.AbstractDAO - 	 QueryId  	:  builder.getChatbotList
DEBUG: org.mybatis.spring.SqlSessionUtils - Creating a new SqlSession
DEBUG: org.mybatis.spring.SqlSessionUtils - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@d119595]
DEBUG: org.mybatis.spring.transaction.SpringManagedTransaction - JDBC Connection [net.sf.log4jdbc.ConnectionSpy@1258aec] will be managed by Spring
2024-03-05 04:52:15,464  INFO SQL(simplebot)        :  SELECT  /* No, Name, Host, Language */
			*
		from Account WHERE 1=1
		AND No IN
		 
				 (  
					'1637'
				 , 
					'1638'
				 ) 
			 

		 
		ORDER BY No
DEBUG: org.mybatis.spring.SqlSessionUtils - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@d119595]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@d119595]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@d119595]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@d119595]
DEBUG: first.common.logger.LoggerAspect - Controller  	:  first.builder.controller.BuilderController.builderContentsAnswer()
DEBUG: first.common.logger.LoggerAspect - Controller  	:  first.builder.controller.BuilderController.builderBottomAnswer()
DEBUG: first.common.logger.LoggerAspect - Controller  	:  first.builder.controller.BuilderController.getTask()
DEBUG: first.common.logger.LoggerAspect - ServiceImpl  	:  first.builder.service.BuilderService.getTaskCount()
DEBUG: first.common.logger.LoggerAspect - DAO  		:  first.builder.dao.BuilderDAO.getTaskCount()
DEBUG: first.builder.dao.AbstractDAO - 	 QueryId  	:  builder.getTaskCount
DEBUG: org.mybatis.spring.SqlSessionUtils - Creating a new SqlSession
DEBUG: org.mybatis.spring.SqlSessionUtils - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@19221520]
DEBUG: org.mybatis.spring.transaction.SpringManagedTransaction - JDBC Connection [net.sf.log4jdbc.ConnectionSpy@28714915] will be managed by Spring
2024-03-05 04:52:15,515  INFO SQL(simplebot)        :  SELECT COUNT(*) FROM Intent WHERE Account=1637
 and Language=1
DEBUG: org.mybatis.spring.SqlSessionUtils - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@19221520]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@19221520]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@19221520]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@19221520]
DEBUG: first.common.logger.LoggerAspect - ServiceImpl  	:  first.builder.service.BuilderService.getAnswerList()
DEBUG: first.common.logger.LoggerAspect - DAO  		:  first.builder.dao.BuilderDAO.getAnswerList()
DEBUG: first.builder.dao.AbstractDAO - 	 QueryId  	:  builder.getAnswerList
DEBUG: org.mybatis.spring.SqlSessionUtils - Creating a new SqlSession
DEBUG: org.mybatis.spring.SqlSessionUtils - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@b5f0ff7]
DEBUG: org.mybatis.spring.transaction.SpringManagedTransaction - JDBC Connection [net.sf.log4jdbc.ConnectionSpy@372ea029] will be managed by Spring
2024-03-05 04:52:15,519  INFO SQL(simplebot)        :  SELECT I.No, I.Main, I.Name, A.answer, I.Account
		FROM Intent I LEFT OUTER JOIN Answer A
		ON I.Answer = A.No
		WHERE I.Account=1637
 and I.Language=1
		ORDER BY I.No
		OFFSET 0 ROWS
		FETCH NEXT 15 ROWS ONLY
DEBUG: org.mybatis.spring.SqlSessionUtils - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@b5f0ff7]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@b5f0ff7]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@b5f0ff7]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@b5f0ff7]
DEBUG: first.common.logger.LoggerAspect - ServiceImpl  	:  first.builder.service.BuilderService.getAllIntents()
DEBUG: first.common.logger.LoggerAspect - DAO  		:  first.builder.dao.BuilderDAO.getAllIntents()
DEBUG: first.builder.dao.AbstractDAO - 	 QueryId  	:  builder.getAllIntents
DEBUG: org.mybatis.spring.SqlSessionUtils - Creating a new SqlSession
DEBUG: org.mybatis.spring.SqlSessionUtils - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@28188a21]
DEBUG: org.mybatis.spring.transaction.SpringManagedTransaction - JDBC Connection [net.sf.log4jdbc.ConnectionSpy@72f014e8] will be managed by Spring
2024-03-05 04:52:15,523  INFO SQL(simplebot)        :  SELECT I.No, I.Main, I.Name,I.Next, I.URL, I.Language
		FROM Intent I
		WHERE I.Account=1637
		ORDER BY I.No
DEBUG: org.mybatis.spring.SqlSessionUtils - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@28188a21]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@28188a21]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@28188a21]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@28188a21]
DEBUG: first.common.logger.LoggerAspect - ServiceImpl  	:  first.builder.service.BuilderService.getAllBertIntents()
DEBUG: first.common.logger.LoggerAspect - DAO  		:  first.builder.dao.BuilderDAO.getAllBertIntents()
DEBUG: first.builder.dao.AbstractDAO - 	 QueryId  	:  builder.getAllBertIntents
DEBUG: org.mybatis.spring.SqlSessionUtils - Creating a new SqlSession
DEBUG: org.mybatis.spring.SqlSessionUtils - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@bed4f5f]
DEBUG: org.mybatis.spring.transaction.SpringManagedTransaction - JDBC Connection [net.sf.log4jdbc.ConnectionSpy@1f85e774] will be managed by Spring
2024-03-05 04:52:15,526  INFO SQL(simplebot)        :  SELECT B.No, B.Name, B.Language
		FROM BertIntent B LEFT OUTER JOIN BackendInfo BI
		ON B.BertItfId = BI.id
		WHERE BI.host=1637
		ORDER BY B.No
DEBUG: org.mybatis.spring.SqlSessionUtils - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@bed4f5f]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@bed4f5f]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@bed4f5f]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@bed4f5f]
DEBUG: first.common.logger.LoggerAspect - Controller  	:  first.builder.controller.BuilderController.getTask()
DEBUG: first.common.logger.LoggerAspect - ServiceImpl  	:  first.builder.service.BuilderService.getTaskCount()
DEBUG: first.common.logger.LoggerAspect - DAO  		:  first.builder.dao.BuilderDAO.getTaskCount()
DEBUG: first.builder.dao.AbstractDAO - 	 QueryId  	:  builder.getTaskCount
DEBUG: org.mybatis.spring.SqlSessionUtils - Creating a new SqlSession
DEBUG: org.mybatis.spring.SqlSessionUtils - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@6a2149a]
DEBUG: org.mybatis.spring.transaction.SpringManagedTransaction - JDBC Connection [net.sf.log4jdbc.ConnectionSpy@544d2f95] will be managed by Spring
2024-03-05 04:52:15,578  INFO SQL(simplebot)        :  SELECT COUNT(*) FROM Intent WHERE Account=1637
 and Language=1
DEBUG: org.mybatis.spring.SqlSessionUtils - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@6a2149a]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@6a2149a]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@6a2149a]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@6a2149a]
DEBUG: first.common.logger.LoggerAspect - ServiceImpl  	:  first.builder.service.BuilderService.getAnswerList()
DEBUG: first.common.logger.LoggerAspect - DAO  		:  first.builder.dao.BuilderDAO.getAnswerList()
DEBUG: first.builder.dao.AbstractDAO - 	 QueryId  	:  builder.getAnswerList
DEBUG: org.mybatis.spring.SqlSessionUtils - Creating a new SqlSession
DEBUG: org.mybatis.spring.SqlSessionUtils - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@4ea1f952]
DEBUG: org.mybatis.spring.transaction.SpringManagedTransaction - JDBC Connection [net.sf.log4jdbc.ConnectionSpy@7906e35c] will be managed by Spring
2024-03-05 04:52:15,581  INFO SQL(simplebot)        :  SELECT I.No, I.Main, I.Name, A.answer, I.Account
		FROM Intent I LEFT OUTER JOIN Answer A
		ON I.Answer = A.No
		WHERE I.Account=1637
 and I.Language=1
		ORDER BY I.No
		OFFSET 0 ROWS
		FETCH NEXT 15 ROWS ONLY
DEBUG: org.mybatis.spring.SqlSessionUtils - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@4ea1f952]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@4ea1f952]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@4ea1f952]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@4ea1f952]
DEBUG: first.common.logger.LoggerAspect - ServiceImpl  	:  first.builder.service.BuilderService.getAllIntents()
DEBUG: first.common.logger.LoggerAspect - DAO  		:  first.builder.dao.BuilderDAO.getAllIntents()
DEBUG: first.builder.dao.AbstractDAO - 	 QueryId  	:  builder.getAllIntents
DEBUG: org.mybatis.spring.SqlSessionUtils - Creating a new SqlSession
DEBUG: org.mybatis.spring.SqlSessionUtils - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@65038b1b]
DEBUG: org.mybatis.spring.transaction.SpringManagedTransaction - JDBC Connection [net.sf.log4jdbc.ConnectionSpy@56e08128] will be managed by Spring
2024-03-05 04:52:15,585  INFO SQL(simplebot)        :  SELECT I.No, I.Main, I.Name,I.Next, I.URL, I.Language
		FROM Intent I
		WHERE I.Account=1637
		ORDER BY I.No
DEBUG: org.mybatis.spring.SqlSessionUtils - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@65038b1b]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@65038b1b]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@65038b1b]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@65038b1b]
DEBUG: first.common.logger.LoggerAspect - ServiceImpl  	:  first.builder.service.BuilderService.getAllBertIntents()
DEBUG: first.common.logger.LoggerAspect - DAO  		:  first.builder.dao.BuilderDAO.getAllBertIntents()
DEBUG: first.builder.dao.AbstractDAO - 	 QueryId  	:  builder.getAllBertIntents
DEBUG: org.mybatis.spring.SqlSessionUtils - Creating a new SqlSession
DEBUG: org.mybatis.spring.SqlSessionUtils - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@29ef2533]
DEBUG: org.mybatis.spring.transaction.SpringManagedTransaction - JDBC Connection [net.sf.log4jdbc.ConnectionSpy@394d47da] will be managed by Spring
2024-03-05 04:52:15,589  INFO SQL(simplebot)        :  SELECT B.No, B.Name, B.Language
		FROM BertIntent B LEFT OUTER JOIN BackendInfo BI
		ON B.BertItfId = BI.id
		WHERE BI.host=1637
		ORDER BY B.No
DEBUG: org.mybatis.spring.SqlSessionUtils - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@29ef2533]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@29ef2533]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@29ef2533]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@29ef2533]
DEBUG: first.common.logger.LoggerAspect - Controller  	:  first.builder.controller.BuilderController.builderContentsIntention()
DEBUG: first.common.logger.LoggerAspect - Controller  	:  first.builder.controller.BuilderController.builderBottomIntention()
DEBUG: first.common.logger.LoggerAspect - Controller  	:  first.builder.controller.BuilderController.getIntention()
DEBUG: first.common.logger.LoggerAspect - ServiceImpl  	:  first.builder.service.BuilderService.getIntentCount()
DEBUG: first.common.logger.LoggerAspect - DAO  		:  first.builder.dao.BuilderDAO.getIntentCount()
DEBUG: first.builder.dao.AbstractDAO - 	 QueryId  	:  builder.getIntentCount
DEBUG: org.mybatis.spring.SqlSessionUtils - Creating a new SqlSession
DEBUG: org.mybatis.spring.SqlSessionUtils - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@20c9c76]
DEBUG: org.mybatis.spring.transaction.SpringManagedTransaction - JDBC Connection [net.sf.log4jdbc.ConnectionSpy@6fdfcce5] will be managed by Spring
2024-03-05 04:52:19,079  INFO SQL(simplebot)        :  SELECT COUNT(DISTINCT a.name) FROM BertIntent a
		INNER JOIN BackendInfo b
		ON a.BertItfId = b.id
 		
 		
		LEFT OUTER JOIN RegexIntent d
		ON a.No = d.BertIntentNo
		LEFT OUTER JOIN RegexRule e
		ON d.No = e.RegexIntentNo
		WHERE b.host = 1637
 and a.Language= 1
DEBUG: org.mybatis.spring.SqlSessionUtils - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@20c9c76]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@20c9c76]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@20c9c76]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@20c9c76]
DEBUG: first.common.logger.LoggerAspect - ServiceImpl  	:  first.builder.service.BuilderService.getIntentStcList()
DEBUG: first.common.logger.LoggerAspect - DAO  		:  first.builder.dao.BuilderDAO.getIntentStcList()
DEBUG: first.builder.dao.AbstractDAO - 	 QueryId  	:  builder.getIntentStcList
DEBUG: org.mybatis.spring.SqlSessionUtils - Creating a new SqlSession
DEBUG: org.mybatis.spring.SqlSessionUtils - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@3dcd5ccc]
DEBUG: org.mybatis.spring.transaction.SpringManagedTransaction - JDBC Connection [net.sf.log4jdbc.ConnectionSpy@3e7a0013] will be managed by Spring
2024-03-05 04:52:19,083  INFO SQL(simplebot)        :  SELECT f.No, f.Name, f.host, f.BertIntentNo,
		IFNULL(SUBSTRING((SELECT GROUP_CONCAT('@', Regex) FROM RegexIntent
		WHERE BertIntentNo = f.BertIntentNo), 2, 1000), SUBSTRING((SELECT GROUP_CONCAT('@', Regex) FROM RegexIntent
		WHERE BertIntentNo = f.BertIntentNo), 2, 1000)) AS regex
		FROM (
		SELECT a.No, a.Name, b.host, d.BertIntentNo
		FROM BertIntent a
		INNER JOIN BackendInfo b
		ON a.BertItfId = b.id
		LEFT OUTER JOIN RegexIntent d
		ON a.No = d.BertIntentNo
		LEFT OUTER JOIN RegexRule e
		ON d.No = e.RegexIntentNo
		WHERE b.host = 1637
 and a.Language= 1
		 
		GROUP BY a.No, a.Name, b.host, d.BertIntentNo
		ORDER BY a.No
		OFFSET 0 ROWS FETCH NEXT 15 ROWS ONLY
		) f
DEBUG: org.mybatis.spring.SqlSessionUtils - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@3dcd5ccc]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@3dcd5ccc]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@3dcd5ccc]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@3dcd5ccc]
DEBUG: first.common.logger.LoggerAspect - Controller  	:  first.builder.controller.BuilderController.getIntention()
DEBUG: first.common.logger.LoggerAspect - ServiceImpl  	:  first.builder.service.BuilderService.getIntentCount()
DEBUG: first.common.logger.LoggerAspect - DAO  		:  first.builder.dao.BuilderDAO.getIntentCount()
DEBUG: first.builder.dao.AbstractDAO - 	 QueryId  	:  builder.getIntentCount
DEBUG: org.mybatis.spring.SqlSessionUtils - Creating a new SqlSession
DEBUG: org.mybatis.spring.SqlSessionUtils - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@4dc5d0ef]
DEBUG: first.common.logger.LoggerAspect - Controller  	:  first.builder.controller.NQAQASetController.getChannelInfo()
DEBUG: org.mybatis.spring.transaction.SpringManagedTransaction - JDBC Connection [net.sf.log4jdbc.ConnectionSpy@7004d06b] will be managed by Spring
2024-03-05 04:52:19,134  INFO SQL(simplebot)        :  SELECT COUNT(DISTINCT a.name) FROM BertIntent a
		INNER JOIN BackendInfo b
		ON a.BertItfId = b.id
 		
 		
		LEFT OUTER JOIN RegexIntent d
		ON a.No = d.BertIntentNo
		LEFT OUTER JOIN RegexRule e
		ON d.No = e.RegexIntentNo
		WHERE b.host = 1637
 and a.Language= 1
DEBUG: org.mybatis.spring.SqlSessionUtils - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@4dc5d0ef]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@4dc5d0ef]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@4dc5d0ef]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@4dc5d0ef]
DEBUG: first.common.logger.LoggerAspect - ServiceImpl  	:  first.builder.service.BuilderService.getIntentStcList()
DEBUG: first.common.logger.LoggerAspect - DAO  		:  first.builder.dao.BuilderDAO.getIntentStcList()
DEBUG: first.builder.dao.AbstractDAO - 	 QueryId  	:  builder.getIntentStcList
DEBUG: org.mybatis.spring.SqlSessionUtils - Creating a new SqlSession
DEBUG: org.mybatis.spring.SqlSessionUtils - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@133bf0c0]
DEBUG: org.mybatis.spring.transaction.SpringManagedTransaction - JDBC Connection [net.sf.log4jdbc.ConnectionSpy@151f6973] will be managed by Spring
2024-03-05 04:52:19,138  INFO SQL(simplebot)        :  SELECT f.No, f.Name, f.host, f.BertIntentNo,
		IFNULL(SUBSTRING((SELECT GROUP_CONCAT('@', Regex) FROM RegexIntent
		WHERE BertIntentNo = f.BertIntentNo), 2, 1000), SUBSTRING((SELECT GROUP_CONCAT('@', Regex) FROM RegexIntent
		WHERE BertIntentNo = f.BertIntentNo), 2, 1000)) AS regex
		FROM (
		SELECT a.No, a.Name, b.host, d.BertIntentNo
		FROM BertIntent a
		INNER JOIN BackendInfo b
		ON a.BertItfId = b.id
		LEFT OUTER JOIN RegexIntent d
		ON a.No = d.BertIntentNo
		LEFT OUTER JOIN RegexRule e
		ON d.No = e.RegexIntentNo
		WHERE b.host = 1637
 and a.Language= 1
		 
		GROUP BY a.No, a.Name, b.host, d.BertIntentNo
		ORDER BY a.No
		OFFSET 0 ROWS FETCH NEXT 15 ROWS ONLY
		) f
DEBUG: org.mybatis.spring.SqlSessionUtils - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@133bf0c0]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@133bf0c0]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@133bf0c0]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@133bf0c0]
DEBUG: first.common.logger.LoggerAspect - Controller  	:  first.builder.controller.NQAQASetController.getChannelInfo()
DEBUG: first.common.logger.LoggerAspect - Controller  	:  first.builder.controller.NQAQASetController.getChannelInfo()
DEBUG: first.common.logger.LoggerAspect - Controller  	:  first.builder.controller.BuilderController.builderContentsIntentionDetail()
DEBUG: first.common.logger.LoggerAspect - Controller  	:  first.builder.controller.BuilderController.builderBottomIntentionDetail()
DEBUG: first.common.logger.LoggerAspect - Controller  	:  first.builder.controller.BuilderController.getRegexList()
DEBUG: first.common.logger.LoggerAspect - ServiceImpl  	:  first.builder.service.BuilderService.getRegexCount()
DEBUG: first.common.logger.LoggerAspect - DAO  		:  first.builder.dao.BuilderDAO.getRegexCount()
DEBUG: first.builder.dao.AbstractDAO - 	 QueryId  	:  builder.getRegexCount
DEBUG: org.mybatis.spring.SqlSessionUtils - Creating a new SqlSession
DEBUG: org.mybatis.spring.SqlSessionUtils - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@527eb3c4]
DEBUG: org.mybatis.spring.transaction.SpringManagedTransaction - JDBC Connection [net.sf.log4jdbc.ConnectionSpy@79d10ecc] will be managed by Spring
2024-03-05 04:52:24,831  INFO SQL(simplebot)        :  SELECT COUNT(DISTINCT b.No) FROM BertIntent a LEFT OUTER JOIN RegexIntent b
		ON a.No = b.BertIntentNo LEFT OUTER JOIN RegexRule c
		ON b.No = c.RegexIntentNo
		WHERE 1=1
		 
				AND a.No = '923467'
			 
		AND a.Language = 1
DEBUG: org.mybatis.spring.SqlSessionUtils - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@527eb3c4]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@527eb3c4]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@527eb3c4]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@527eb3c4]
DEBUG: first.common.logger.LoggerAspect - ServiceImpl  	:  first.builder.service.BuilderService.getRegexList()
DEBUG: first.common.logger.LoggerAspect - DAO  		:  first.builder.dao.BuilderDAO.getRegexList()
DEBUG: first.builder.dao.AbstractDAO - 	 QueryId  	:  builder.getRegexList
DEBUG: org.mybatis.spring.SqlSessionUtils - Creating a new SqlSession
DEBUG: org.mybatis.spring.SqlSessionUtils - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@731d5352]
DEBUG: org.mybatis.spring.transaction.SpringManagedTransaction - JDBC Connection [net.sf.log4jdbc.ConnectionSpy@43033f6b] will be managed by Spring
2024-03-05 04:52:24,834  INFO SQL(simplebot)        :  SELECT f.BertIntentNo
 			 , f.Name
		     , f.RegexIntentNo
		     , f.Regex AS Regex
		     , SUBSTRING((SELECT GROUP_CONCAT('@', a.RuleValue, '#', b.RuleType) FROM RegexRule a, RegexRuleType b WHERE a.RuleTypeNo = b.No AND a.RegexIntentNo = f.RegexIntentNo
    ORDER BY a.No), 2, 1000) AS RegexRule
		FROM (
		SELECT a.No As BertIntentNo, a.Name, b.No As RegexIntentNo, b.Regex
		FROM BertIntent a LEFT OUTER JOIN RegexIntent b
		ON a.No = b.BertIntentNo LEFT OUTER JOIN RegexRule c
		ON b.No = c.RegexIntentNo
		WHERE 1=1
		 
				AND a.No = '923467'
			 
		AND a.Language = 1
		 
		GROUP BY a.No, a.Name, b.No, b.Regex
		ORDER BY b.No OFFSET 0 ROWS FETCH NEXT 15 ROWS ONLY) f
DEBUG: org.mybatis.spring.SqlSessionUtils - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@731d5352]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@731d5352]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@731d5352]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@731d5352]
DEBUG: first.common.logger.LoggerAspect - Controller  	:  first.builder.controller.NQAQASetController.getNqaDetail()
DEBUG: first.common.logger.LoggerAspect - Controller  	:  first.builder.controller.BuilderController.getRegexList()
DEBUG: first.common.logger.LoggerAspect - ServiceImpl  	:  first.builder.service.BuilderService.getRegexCount()
DEBUG: first.common.logger.LoggerAspect - DAO  		:  first.builder.dao.BuilderDAO.getRegexCount()
DEBUG: first.builder.dao.AbstractDAO - 	 QueryId  	:  builder.getRegexCount
DEBUG: org.mybatis.spring.SqlSessionUtils - Creating a new SqlSession
DEBUG: org.mybatis.spring.SqlSessionUtils - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@48c0cf62]
DEBUG: org.mybatis.spring.transaction.SpringManagedTransaction - JDBC Connection [net.sf.log4jdbc.ConnectionSpy@71c5d36e] will be managed by Spring
2024-03-05 04:52:26,855  INFO SQL(simplebot)        :  SELECT COUNT(DISTINCT b.No) FROM BertIntent a LEFT OUTER JOIN RegexIntent b
		ON a.No = b.BertIntentNo LEFT OUTER JOIN RegexRule c
		ON b.No = c.RegexIntentNo
		WHERE 1=1
		 
				AND a.No = (SELECT a.No FROM BertIntent a, BackendInfo b WHERE a.BertItfId = b.id AND a.Name = 'base' AND a.Language = 1 AND b.host = 1637)
			 
		AND a.Language = 1
DEBUG: org.mybatis.spring.SqlSessionUtils - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@48c0cf62]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@48c0cf62]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@48c0cf62]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@48c0cf62]
DEBUG: first.common.logger.LoggerAspect - ServiceImpl  	:  first.builder.service.BuilderService.getRegexList()
DEBUG: first.common.logger.LoggerAspect - DAO  		:  first.builder.dao.BuilderDAO.getRegexList()
DEBUG: first.builder.dao.AbstractDAO - 	 QueryId  	:  builder.getRegexList
DEBUG: org.mybatis.spring.SqlSessionUtils - Creating a new SqlSession
DEBUG: org.mybatis.spring.SqlSessionUtils - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@2628bd6f]
DEBUG: org.mybatis.spring.transaction.SpringManagedTransaction - JDBC Connection [net.sf.log4jdbc.ConnectionSpy@d383fa5] will be managed by Spring
2024-03-05 04:52:26,859  INFO SQL(simplebot)        :  SELECT f.BertIntentNo
 			 , f.Name
		     , f.RegexIntentNo
		     , f.Regex AS Regex
		     , SUBSTRING((SELECT GROUP_CONCAT('@', a.RuleValue, '#', b.RuleType) FROM RegexRule a, RegexRuleType b WHERE a.RuleTypeNo = b.No AND a.RegexIntentNo = f.RegexIntentNo
    ORDER BY a.No), 2, 1000) AS RegexRule
		FROM (
		SELECT a.No As BertIntentNo, a.Name, b.No As RegexIntentNo, b.Regex
		FROM BertIntent a LEFT OUTER JOIN RegexIntent b
		ON a.No = b.BertIntentNo LEFT OUTER JOIN RegexRule c
		ON b.No = c.RegexIntentNo
		WHERE 1=1
		 
				AND a.No = (SELECT a.No FROM BertIntent a, BackendInfo b WHERE a.BertItfId = b.id AND a.Name = 'base' AND a.Language = 1 AND b.host = 1637)
			 
		AND a.Language = 1
		 
		GROUP BY a.No, a.Name, b.No, b.Regex
		ORDER BY b.No OFFSET 0 ROWS FETCH NEXT 15 ROWS ONLY) f
DEBUG: org.mybatis.spring.SqlSessionUtils - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@2628bd6f]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@2628bd6f]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@2628bd6f]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@2628bd6f]
DEBUG: first.common.logger.LoggerAspect - Controller  	:  first.builder.controller.BuilderController.getTestPage()
DEBUG: first.common.logger.LoggerAspect - ServiceImpl  	:  first.builder.service.BuilderService.getHostByAccount()
DEBUG: first.common.logger.LoggerAspect - DAO  		:  first.builder.dao.BuilderDAO.getHostByAccount()
DEBUG: first.builder.dao.AbstractDAO - 	 QueryId  	:  builder.getHostByAccount
DEBUG: org.mybatis.spring.SqlSessionUtils - Creating a new SqlSession
DEBUG: org.mybatis.spring.SqlSessionUtils - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1b96644b]
DEBUG: org.mybatis.spring.transaction.SpringManagedTransaction - JDBC Connection [net.sf.log4jdbc.ConnectionSpy@2ac79eab] will be managed by Spring
2024-03-05 04:52:33,705  INFO SQL(simplebot)        :  SELECT Host
		From Account
		Where No=1637
DEBUG: org.mybatis.spring.SqlSessionUtils - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1b96644b]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1b96644b]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1b96644b]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1b96644b]
DEBUG: first.common.logger.LoggerAspect - Controller  	:  first.builder.controller.BuilderController.builderBottomSetting()
DEBUG: first.common.logger.LoggerAspect - Controller  	:  first.builder.controller.BuilderController.builderContentsSetting()
DEBUG: first.common.logger.LoggerAspect - Controller  	:  first.builder.controller.BuilderController.getSetting()
DEBUG: first.common.logger.LoggerAspect - ServiceImpl  	:  first.builder.service.BuilderService.getSettingVal()
DEBUG: first.common.logger.LoggerAspect - DAO  		:  first.builder.dao.BuilderDAO.getSettingVal()
DEBUG: first.builder.dao.AbstractDAO - 	 QueryId  	:  builder.getSettingVal
DEBUG: org.mybatis.spring.SqlSessionUtils - Creating a new SqlSession
DEBUG: org.mybatis.spring.SqlSessionUtils - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@304b1c88]
DEBUG: org.mybatis.spring.transaction.SpringManagedTransaction - JDBC Connection [net.sf.log4jdbc.ConnectionSpy@d932d53] will be managed by Spring
2024-03-05 04:53:02,473  INFO SQL(simplebot)        :  SELECT AC.Name, AC.Email, AC.HOST, AC.Description
		FROM Account AC
		WHERE No=1637
DEBUG: org.mybatis.spring.SqlSessionUtils - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@304b1c88]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@304b1c88]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@304b1c88]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@304b1c88]
DEBUG: first.common.logger.LoggerAspect - ServiceImpl  	:  first.builder.service.BuilderService.getStyleCSS()
DEBUG: first.common.logger.LoggerAspect - DAO  		:  first.builder.dao.BuilderDAO.getStyleCSS()
DEBUG: first.builder.dao.AbstractDAO - 	 QueryId  	:  builder.getStyleCSS
DEBUG: org.mybatis.spring.SqlSessionUtils - Creating a new SqlSession
DEBUG: org.mybatis.spring.SqlSessionUtils - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@75e17f74]
DEBUG: org.mybatis.spring.transaction.SpringManagedTransaction - JDBC Connection [net.sf.log4jdbc.ConnectionSpy@29ffb368] will be managed by Spring
2024-03-05 04:53:02,477  INFO SQL(simplebot)        :  SELECT *
		FROM style_css SC
		WHERE host=1637
DEBUG: org.mybatis.spring.SqlSessionUtils - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@75e17f74]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@75e17f74]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@75e17f74]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@75e17f74]
DEBUG: first.common.logger.LoggerAspect - Controller  	:  first.builder.controller.BuilderController.settingFile()
DEBUG: first.common.logger.LoggerAspect - Controller  	:  first.builder.controller.BuilderController.settingFile()
java.io.FileNotFoundException: /home/minds/maum/sds-builder/imgUpload/1637/IconImg (No such file or directory)
java.io.FileNotFoundException: /home/minds/maum/sds-builder/imgUpload/1637/logoImg (No such file or directory)
DEBUG: first.common.logger.LoggerAspect - Controller  	:  first.builder.controller.BuilderController.settingFile()
java.io.FileNotFoundException: /home/minds/maum/sds-builder/imgUpload/1637/logoImg (No such file or directory)
DEBUG: first.common.logger.LoggerAspect - Controller  	:  first.builder.controller.BuilderController.settingFile()
java.io.FileNotFoundException: /home/minds/maum/sds-builder/imgUpload/1637/IconImg (No such file or directory)
DEBUG: first.common.logger.LoggerAspect - Controller  	:  first.builder.controller.BuilderController.builderContentsReplaceDict()
DEBUG: first.common.logger.LoggerAspect - Controller  	:  first.builder.controller.BuilderController.builderBottomReplaceDict()
DEBUG: first.common.logger.LoggerAspect - Controller  	:  first.builder.controller.BuilderController.getReplaceDict()
DEBUG: first.common.logger.LoggerAspect - ServiceImpl  	:  first.builder.service.BuilderService.getReplaceDictCount()
DEBUG: first.common.logger.LoggerAspect - DAO  		:  first.builder.dao.BuilderDAO.getReplaceDictCount()
DEBUG: first.builder.dao.AbstractDAO - 	 QueryId  	:  builder.getReplaceDictCount
DEBUG: org.mybatis.spring.SqlSessionUtils - Creating a new SqlSession
DEBUG: org.mybatis.spring.SqlSessionUtils - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1f1fb3d1]
DEBUG: org.mybatis.spring.transaction.SpringManagedTransaction - JDBC Connection [net.sf.log4jdbc.ConnectionSpy@4969fc7] will be managed by Spring
2024-03-05 04:53:08,543  INFO SQL(simplebot)        :  SELECT COUNT(*) 
		  FROM ReplaceDict 
		 WHERE Host = 1637 
		   AND Lang = 1
DEBUG: org.mybatis.spring.SqlSessionUtils - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1f1fb3d1]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1f1fb3d1]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1f1fb3d1]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1f1fb3d1]
DEBUG: first.common.logger.LoggerAspect - ServiceImpl  	:  first.builder.service.BuilderService.getReplaceDictLst()
DEBUG: first.common.logger.LoggerAspect - DAO  		:  first.builder.dao.BuilderDAO.getReplaceDictLst()
DEBUG: first.builder.dao.AbstractDAO - 	 QueryId  	:  builder.getReplaceDictLst
DEBUG: org.mybatis.spring.SqlSessionUtils - Creating a new SqlSession
DEBUG: org.mybatis.spring.SqlSessionUtils - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@38cfde22]
DEBUG: org.mybatis.spring.transaction.SpringManagedTransaction - JDBC Connection [net.sf.log4jdbc.ConnectionSpy@6be8c637] will be managed by Spring
2024-03-05 04:53:08,547  INFO SQL(simplebot)        :  SELECT T.* FROM (
		SELECT @rownum := @rownum + 1 AS RNUM
			 , No
			 , Host
			 , Lang
			 , `Before`
			 , `After`
		  FROM ReplaceDict
		  JOIN (SELECT @rownum := 0) AS R
		 WHERE Host = 1637
		   AND Lang = 1
		 
		 
				ORDER BY No desc
			 
		) T
		LIMIT 100 OFFSET 0
DEBUG: org.mybatis.spring.SqlSessionUtils - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@38cfde22]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@38cfde22]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@38cfde22]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@38cfde22]
DEBUG: first.common.logger.LoggerAspect - Controller  	:  first.builder.controller.BuilderController.getReplaceDict()
DEBUG: first.common.logger.LoggerAspect - ServiceImpl  	:  first.builder.service.BuilderService.getReplaceDictCount()
DEBUG: first.common.logger.LoggerAspect - DAO  		:  first.builder.dao.BuilderDAO.getReplaceDictCount()
DEBUG: first.builder.dao.AbstractDAO - 	 QueryId  	:  builder.getReplaceDictCount
DEBUG: org.mybatis.spring.SqlSessionUtils - Creating a new SqlSession
DEBUG: org.mybatis.spring.SqlSessionUtils - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@f027ff2]
DEBUG: org.mybatis.spring.transaction.SpringManagedTransaction - JDBC Connection [net.sf.log4jdbc.ConnectionSpy@53dc9d1e] will be managed by Spring
2024-03-05 04:53:08,605  INFO SQL(simplebot)        :  SELECT COUNT(*) 
		  FROM ReplaceDict 
		 WHERE Host = 1637 
		   AND Lang = 1
DEBUG: org.mybatis.spring.SqlSessionUtils - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@f027ff2]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@f027ff2]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@f027ff2]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@f027ff2]
DEBUG: first.common.logger.LoggerAspect - ServiceImpl  	:  first.builder.service.BuilderService.getReplaceDictLst()
DEBUG: first.common.logger.LoggerAspect - DAO  		:  first.builder.dao.BuilderDAO.getReplaceDictLst()
DEBUG: first.builder.dao.AbstractDAO - 	 QueryId  	:  builder.getReplaceDictLst
DEBUG: org.mybatis.spring.SqlSessionUtils - Creating a new SqlSession
DEBUG: org.mybatis.spring.SqlSessionUtils - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@591f1875]
DEBUG: org.mybatis.spring.transaction.SpringManagedTransaction - JDBC Connection [net.sf.log4jdbc.ConnectionSpy@54911048] will be managed by Spring
2024-03-05 04:53:08,609  INFO SQL(simplebot)        :  SELECT T.* FROM (
		SELECT @rownum := @rownum + 1 AS RNUM
			 , No
			 , Host
			 , Lang
			 , `Before`
			 , `After`
		  FROM ReplaceDict
		  JOIN (SELECT @rownum := 0) AS R
		 WHERE Host = 1637
		   AND Lang = 1
		 
		 
				ORDER BY No desc
			 
		) T
		LIMIT 100 OFFSET 0
DEBUG: org.mybatis.spring.SqlSessionUtils - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@591f1875]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@591f1875]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@591f1875]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@591f1875]
DEBUG: first.common.logger.LoggerAspect - Controller  	:  first.builder.controller.BuilderController.builderBottomDeepLearning()
DEBUG: first.common.logger.LoggerAspect - Controller  	:  first.builder.controller.BuilderController.builderContentsDeepLearning()
DEBUG: first.common.logger.LoggerAspect - Controller  	:  first.builder.controller.BuilderController.builderContentsIntention()
DEBUG: first.common.logger.LoggerAspect - Controller  	:  first.builder.controller.BuilderController.builderBottomIntention()
DEBUG: first.common.logger.LoggerAspect - Controller  	:  first.builder.controller.BuilderController.getIntention()
DEBUG: first.common.logger.LoggerAspect - Controller  	:  first.builder.controller.NQAQASetController.getChannelInfo()
DEBUG: first.common.logger.LoggerAspect - ServiceImpl  	:  first.builder.service.BuilderService.getIntentCount()
DEBUG: first.common.logger.LoggerAspect - DAO  		:  first.builder.dao.BuilderDAO.getIntentCount()
DEBUG: first.builder.dao.AbstractDAO - 	 QueryId  	:  builder.getIntentCount
DEBUG: org.mybatis.spring.SqlSessionUtils - Creating a new SqlSession
DEBUG: org.mybatis.spring.SqlSessionUtils - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@555802f5]
DEBUG: org.mybatis.spring.transaction.SpringManagedTransaction - JDBC Connection [net.sf.log4jdbc.ConnectionSpy@7882bf74] will be managed by Spring
2024-03-05 04:53:14,835  INFO SQL(simplebot)        :  SELECT COUNT(DISTINCT a.name) FROM BertIntent a
		INNER JOIN BackendInfo b
		ON a.BertItfId = b.id
 		
 		
		LEFT OUTER JOIN RegexIntent d
		ON a.No = d.BertIntentNo
		LEFT OUTER JOIN RegexRule e
		ON d.No = e.RegexIntentNo
		WHERE b.host = 1637
 and a.Language= 1
DEBUG: org.mybatis.spring.SqlSessionUtils - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@555802f5]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@555802f5]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@555802f5]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@555802f5]
DEBUG: first.common.logger.LoggerAspect - ServiceImpl  	:  first.builder.service.BuilderService.getIntentStcList()
DEBUG: first.common.logger.LoggerAspect - DAO  		:  first.builder.dao.BuilderDAO.getIntentStcList()
DEBUG: first.builder.dao.AbstractDAO - 	 QueryId  	:  builder.getIntentStcList
DEBUG: org.mybatis.spring.SqlSessionUtils - Creating a new SqlSession
DEBUG: org.mybatis.spring.SqlSessionUtils - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@71f16560]
DEBUG: org.mybatis.spring.transaction.SpringManagedTransaction - JDBC Connection [net.sf.log4jdbc.ConnectionSpy@563b1a02] will be managed by Spring
2024-03-05 04:53:14,839  INFO SQL(simplebot)        :  SELECT f.No, f.Name, f.host, f.BertIntentNo,
		IFNULL(SUBSTRING((SELECT GROUP_CONCAT('@', Regex) FROM RegexIntent
		WHERE BertIntentNo = f.BertIntentNo), 2, 1000), SUBSTRING((SELECT GROUP_CONCAT('@', Regex) FROM RegexIntent
		WHERE BertIntentNo = f.BertIntentNo), 2, 1000)) AS regex
		FROM (
		SELECT a.No, a.Name, b.host, d.BertIntentNo
		FROM BertIntent a
		INNER JOIN BackendInfo b
		ON a.BertItfId = b.id
		LEFT OUTER JOIN RegexIntent d
		ON a.No = d.BertIntentNo
		LEFT OUTER JOIN RegexRule e
		ON d.No = e.RegexIntentNo
		WHERE b.host = 1637
 and a.Language= 1
		 
		GROUP BY a.No, a.Name, b.host, d.BertIntentNo
		ORDER BY a.No
		OFFSET 0 ROWS FETCH NEXT 15 ROWS ONLY
		) f
DEBUG: org.mybatis.spring.SqlSessionUtils - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@71f16560]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@71f16560]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@71f16560]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@71f16560]
DEBUG: first.common.logger.LoggerAspect - Controller  	:  first.builder.controller.BuilderController.getIntention()
DEBUG: first.common.logger.LoggerAspect - ServiceImpl  	:  first.builder.service.BuilderService.getIntentCount()
DEBUG: first.common.logger.LoggerAspect - DAO  		:  first.builder.dao.BuilderDAO.getIntentCount()
DEBUG: first.builder.dao.AbstractDAO - 	 QueryId  	:  builder.getIntentCount
DEBUG: org.mybatis.spring.SqlSessionUtils - Creating a new SqlSession
DEBUG: org.mybatis.spring.SqlSessionUtils - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@833de12]
DEBUG: org.mybatis.spring.transaction.SpringManagedTransaction - JDBC Connection [net.sf.log4jdbc.ConnectionSpy@7c357b2e] will be managed by Spring
2024-03-05 04:53:14,849  INFO SQL(simplebot)        :  SELECT COUNT(DISTINCT a.name) FROM BertIntent a
		INNER JOIN BackendInfo b
		ON a.BertItfId = b.id
 		
 		
		LEFT OUTER JOIN RegexIntent d
		ON a.No = d.BertIntentNo
		LEFT OUTER JOIN RegexRule e
		ON d.No = e.RegexIntentNo
		WHERE b.host = 1637
 and a.Language= 1
DEBUG: org.mybatis.spring.SqlSessionUtils - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@833de12]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@833de12]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@833de12]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@833de12]
DEBUG: first.common.logger.LoggerAspect - Controller  	:  first.builder.controller.NQAQASetController.getChannelInfo()
DEBUG: first.common.logger.LoggerAspect - ServiceImpl  	:  first.builder.service.BuilderService.getIntentStcList()
DEBUG: first.common.logger.LoggerAspect - DAO  		:  first.builder.dao.BuilderDAO.getIntentStcList()
DEBUG: first.builder.dao.AbstractDAO - 	 QueryId  	:  builder.getIntentStcList
DEBUG: org.mybatis.spring.SqlSessionUtils - Creating a new SqlSession
DEBUG: org.mybatis.spring.SqlSessionUtils - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@5b8353e8]
DEBUG: org.mybatis.spring.transaction.SpringManagedTransaction - JDBC Connection [net.sf.log4jdbc.ConnectionSpy@d8e38e8] will be managed by Spring
2024-03-05 04:53:14,854  INFO SQL(simplebot)        :  SELECT f.No, f.Name, f.host, f.BertIntentNo,
		IFNULL(SUBSTRING((SELECT GROUP_CONCAT('@', Regex) FROM RegexIntent
		WHERE BertIntentNo = f.BertIntentNo), 2, 1000), SUBSTRING((SELECT GROUP_CONCAT('@', Regex) FROM RegexIntent
		WHERE BertIntentNo = f.BertIntentNo), 2, 1000)) AS regex
		FROM (
		SELECT a.No, a.Name, b.host, d.BertIntentNo
		FROM BertIntent a
		INNER JOIN BackendInfo b
		ON a.BertItfId = b.id
		LEFT OUTER JOIN RegexIntent d
		ON a.No = d.BertIntentNo
		LEFT OUTER JOIN RegexRule e
		ON d.No = e.RegexIntentNo
		WHERE b.host = 1637
 and a.Language= 1
		 
		GROUP BY a.No, a.Name, b.host, d.BertIntentNo
		ORDER BY a.No
		OFFSET 0 ROWS FETCH NEXT 15 ROWS ONLY
		) f
DEBUG: org.mybatis.spring.SqlSessionUtils - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@5b8353e8]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@5b8353e8]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@5b8353e8]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@5b8353e8]
DEBUG: first.common.logger.LoggerAspect - Controller  	:  first.builder.controller.NQAQASetController.getChannelInfo()
DEBUG: first.common.logger.LoggerAspect - Controller  	:  first.builder.controller.BuilderController.builderContentsAnswer()
DEBUG: first.common.logger.LoggerAspect - Controller  	:  first.builder.controller.BuilderController.builderBottomAnswer()
DEBUG: first.common.logger.LoggerAspect - Controller  	:  first.builder.controller.BuilderController.getTask()
DEBUG: first.common.logger.LoggerAspect - ServiceImpl  	:  first.builder.service.BuilderService.getTaskCount()
DEBUG: first.common.logger.LoggerAspect - DAO  		:  first.builder.dao.BuilderDAO.getTaskCount()
DEBUG: first.builder.dao.AbstractDAO - 	 QueryId  	:  builder.getTaskCount
DEBUG: org.mybatis.spring.SqlSessionUtils - Creating a new SqlSession
DEBUG: org.mybatis.spring.SqlSessionUtils - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@5ba05b8]
DEBUG: org.mybatis.spring.transaction.SpringManagedTransaction - JDBC Connection [net.sf.log4jdbc.ConnectionSpy@3fc5bd4] will be managed by Spring
2024-03-05 04:53:15,318  INFO SQL(simplebot)        :  SELECT COUNT(*) FROM Intent WHERE Account=1637
 and Language=1
DEBUG: org.mybatis.spring.SqlSessionUtils - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@5ba05b8]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@5ba05b8]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@5ba05b8]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@5ba05b8]
DEBUG: first.common.logger.LoggerAspect - ServiceImpl  	:  first.builder.service.BuilderService.getAnswerList()
DEBUG: first.common.logger.LoggerAspect - DAO  		:  first.builder.dao.BuilderDAO.getAnswerList()
DEBUG: first.builder.dao.AbstractDAO - 	 QueryId  	:  builder.getAnswerList
DEBUG: org.mybatis.spring.SqlSessionUtils - Creating a new SqlSession
DEBUG: org.mybatis.spring.SqlSessionUtils - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@53fa78d]
DEBUG: org.mybatis.spring.transaction.SpringManagedTransaction - JDBC Connection [net.sf.log4jdbc.ConnectionSpy@74d5023d] will be managed by Spring
2024-03-05 04:53:15,321  INFO SQL(simplebot)        :  SELECT I.No, I.Main, I.Name, A.answer, I.Account
		FROM Intent I LEFT OUTER JOIN Answer A
		ON I.Answer = A.No
		WHERE I.Account=1637
 and I.Language=1
		ORDER BY I.No
		OFFSET 0 ROWS
		FETCH NEXT 15 ROWS ONLY
DEBUG: org.mybatis.spring.SqlSessionUtils - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@53fa78d]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@53fa78d]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@53fa78d]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@53fa78d]
DEBUG: first.common.logger.LoggerAspect - ServiceImpl  	:  first.builder.service.BuilderService.getAllIntents()
DEBUG: first.common.logger.LoggerAspect - DAO  		:  first.builder.dao.BuilderDAO.getAllIntents()
DEBUG: first.builder.dao.AbstractDAO - 	 QueryId  	:  builder.getAllIntents
DEBUG: org.mybatis.spring.SqlSessionUtils - Creating a new SqlSession
DEBUG: org.mybatis.spring.SqlSessionUtils - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@6c25fa19]
DEBUG: org.mybatis.spring.transaction.SpringManagedTransaction - JDBC Connection [net.sf.log4jdbc.ConnectionSpy@68c5a4e1] will be managed by Spring
2024-03-05 04:53:15,324  INFO SQL(simplebot)        :  SELECT I.No, I.Main, I.Name,I.Next, I.URL, I.Language
		FROM Intent I
		WHERE I.Account=1637
		ORDER BY I.No
DEBUG: org.mybatis.spring.SqlSessionUtils - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@6c25fa19]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@6c25fa19]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@6c25fa19]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@6c25fa19]
DEBUG: first.common.logger.LoggerAspect - ServiceImpl  	:  first.builder.service.BuilderService.getAllBertIntents()
DEBUG: first.common.logger.LoggerAspect - DAO  		:  first.builder.dao.BuilderDAO.getAllBertIntents()
DEBUG: first.builder.dao.AbstractDAO - 	 QueryId  	:  builder.getAllBertIntents
DEBUG: org.mybatis.spring.SqlSessionUtils - Creating a new SqlSession
DEBUG: org.mybatis.spring.SqlSessionUtils - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@73879a4c]
DEBUG: org.mybatis.spring.transaction.SpringManagedTransaction - JDBC Connection [net.sf.log4jdbc.ConnectionSpy@7521af97] will be managed by Spring
2024-03-05 04:53:15,327  INFO SQL(simplebot)        :  SELECT B.No, B.Name, B.Language
		FROM BertIntent B LEFT OUTER JOIN BackendInfo BI
		ON B.BertItfId = BI.id
		WHERE BI.host=1637
		ORDER BY B.No
DEBUG: org.mybatis.spring.SqlSessionUtils - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@73879a4c]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@73879a4c]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@73879a4c]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@73879a4c]
DEBUG: first.common.logger.LoggerAspect - Controller  	:  first.builder.controller.BuilderController.getTask()
DEBUG: first.common.logger.LoggerAspect - ServiceImpl  	:  first.builder.service.BuilderService.getTaskCount()
DEBUG: first.common.logger.LoggerAspect - DAO  		:  first.builder.dao.BuilderDAO.getTaskCount()
DEBUG: first.builder.dao.AbstractDAO - 	 QueryId  	:  builder.getTaskCount
DEBUG: org.mybatis.spring.SqlSessionUtils - Creating a new SqlSession
DEBUG: org.mybatis.spring.SqlSessionUtils - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@765f77d2]
DEBUG: org.mybatis.spring.transaction.SpringManagedTransaction - JDBC Connection [net.sf.log4jdbc.ConnectionSpy@4805159c] will be managed by Spring
2024-03-05 04:53:15,396  INFO SQL(simplebot)        :  SELECT COUNT(*) FROM Intent WHERE Account=1637
 and Language=1
DEBUG: org.mybatis.spring.SqlSessionUtils - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@765f77d2]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@765f77d2]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@765f77d2]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@765f77d2]
DEBUG: first.common.logger.LoggerAspect - ServiceImpl  	:  first.builder.service.BuilderService.getAnswerList()
DEBUG: first.common.logger.LoggerAspect - DAO  		:  first.builder.dao.BuilderDAO.getAnswerList()
DEBUG: first.builder.dao.AbstractDAO - 	 QueryId  	:  builder.getAnswerList
DEBUG: org.mybatis.spring.SqlSessionUtils - Creating a new SqlSession
DEBUG: org.mybatis.spring.SqlSessionUtils - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@7cb91dd9]
DEBUG: org.mybatis.spring.transaction.SpringManagedTransaction - JDBC Connection [net.sf.log4jdbc.ConnectionSpy@5f0865b3] will be managed by Spring
2024-03-05 04:53:15,399  INFO SQL(simplebot)        :  SELECT I.No, I.Main, I.Name, A.answer, I.Account
		FROM Intent I LEFT OUTER JOIN Answer A
		ON I.Answer = A.No
		WHERE I.Account=1637
 and I.Language=1
		ORDER BY I.No
		OFFSET 0 ROWS
		FETCH NEXT 15 ROWS ONLY
DEBUG: org.mybatis.spring.SqlSessionUtils - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@7cb91dd9]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@7cb91dd9]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@7cb91dd9]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@7cb91dd9]
DEBUG: first.common.logger.LoggerAspect - ServiceImpl  	:  first.builder.service.BuilderService.getAllIntents()
DEBUG: first.common.logger.LoggerAspect - DAO  		:  first.builder.dao.BuilderDAO.getAllIntents()
DEBUG: first.builder.dao.AbstractDAO - 	 QueryId  	:  builder.getAllIntents
DEBUG: org.mybatis.spring.SqlSessionUtils - Creating a new SqlSession
DEBUG: org.mybatis.spring.SqlSessionUtils - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@223a50ce]
DEBUG: org.mybatis.spring.transaction.SpringManagedTransaction - JDBC Connection [net.sf.log4jdbc.ConnectionSpy@4f1a2b93] will be managed by Spring
2024-03-05 04:53:15,401  INFO SQL(simplebot)        :  SELECT I.No, I.Main, I.Name,I.Next, I.URL, I.Language
		FROM Intent I
		WHERE I.Account=1637
		ORDER BY I.No
DEBUG: org.mybatis.spring.SqlSessionUtils - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@223a50ce]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@223a50ce]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@223a50ce]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@223a50ce]
DEBUG: first.common.logger.LoggerAspect - ServiceImpl  	:  first.builder.service.BuilderService.getAllBertIntents()
DEBUG: first.common.logger.LoggerAspect - DAO  		:  first.builder.dao.BuilderDAO.getAllBertIntents()
DEBUG: first.builder.dao.AbstractDAO - 	 QueryId  	:  builder.getAllBertIntents
DEBUG: org.mybatis.spring.SqlSessionUtils - Creating a new SqlSession
DEBUG: org.mybatis.spring.SqlSessionUtils - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@624d1076]
DEBUG: org.mybatis.spring.transaction.SpringManagedTransaction - JDBC Connection [net.sf.log4jdbc.ConnectionSpy@384adfa2] will be managed by Spring
2024-03-05 04:53:15,404  INFO SQL(simplebot)        :  SELECT B.No, B.Name, B.Language
		FROM BertIntent B LEFT OUTER JOIN BackendInfo BI
		ON B.BertItfId = BI.id
		WHERE BI.host=1637
		ORDER BY B.No
DEBUG: org.mybatis.spring.SqlSessionUtils - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@624d1076]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@624d1076]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@624d1076]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@624d1076]
DEBUG: first.common.logger.LoggerAspect - Controller  	:  first.builder.controller.BuilderController.getTask()
DEBUG: first.common.logger.LoggerAspect - ServiceImpl  	:  first.builder.service.BuilderService.getTaskCount()
DEBUG: first.common.logger.LoggerAspect - DAO  		:  first.builder.dao.BuilderDAO.getTaskCount()
DEBUG: first.builder.dao.AbstractDAO - 	 QueryId  	:  builder.getTaskCount
DEBUG: org.mybatis.spring.SqlSessionUtils - Creating a new SqlSession
DEBUG: org.mybatis.spring.SqlSessionUtils - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@66538768]
DEBUG: org.mybatis.spring.transaction.SpringManagedTransaction - JDBC Connection [net.sf.log4jdbc.ConnectionSpy@66331a3c] will be managed by Spring
2024-03-05 04:57:16,646  INFO SQL(simplebot)        :  SELECT COUNT(*) FROM Intent WHERE Account=1637
 and Language=1
DEBUG: org.mybatis.spring.SqlSessionUtils - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@66538768]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@66538768]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@66538768]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@66538768]
DEBUG: first.common.logger.LoggerAspect - ServiceImpl  	:  first.builder.service.BuilderService.getAnswerList()
DEBUG: first.common.logger.LoggerAspect - DAO  		:  first.builder.dao.BuilderDAO.getAnswerList()
DEBUG: first.builder.dao.AbstractDAO - 	 QueryId  	:  builder.getAnswerList
DEBUG: org.mybatis.spring.SqlSessionUtils - Creating a new SqlSession
DEBUG: org.mybatis.spring.SqlSessionUtils - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@6147e443]
DEBUG: org.mybatis.spring.transaction.SpringManagedTransaction - JDBC Connection [net.sf.log4jdbc.ConnectionSpy@ff04766] will be managed by Spring
2024-03-05 04:57:16,649  INFO SQL(simplebot)        :  SELECT I.No, I.Main, I.Name, A.answer, I.Account
		FROM Intent I LEFT OUTER JOIN Answer A
		ON I.Answer = A.No
		WHERE I.Account=1637
 and I.Language=1
		ORDER BY I.No
		OFFSET 0 ROWS
		FETCH NEXT 15 ROWS ONLY
DEBUG: org.mybatis.spring.SqlSessionUtils - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@6147e443]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@6147e443]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@6147e443]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@6147e443]
DEBUG: first.common.logger.LoggerAspect - ServiceImpl  	:  first.builder.service.BuilderService.getAllIntents()
DEBUG: first.common.logger.LoggerAspect - DAO  		:  first.builder.dao.BuilderDAO.getAllIntents()
DEBUG: first.builder.dao.AbstractDAO - 	 QueryId  	:  builder.getAllIntents
DEBUG: org.mybatis.spring.SqlSessionUtils - Creating a new SqlSession
DEBUG: org.mybatis.spring.SqlSessionUtils - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@bd150e9]
DEBUG: org.mybatis.spring.transaction.SpringManagedTransaction - JDBC Connection [net.sf.log4jdbc.ConnectionSpy@5832fd7a] will be managed by Spring
2024-03-05 04:57:16,652  INFO SQL(simplebot)        :  SELECT I.No, I.Main, I.Name,I.Next, I.URL, I.Language
		FROM Intent I
		WHERE I.Account=1637
		ORDER BY I.No
DEBUG: org.mybatis.spring.SqlSessionUtils - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@bd150e9]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@bd150e9]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@bd150e9]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@bd150e9]
DEBUG: first.common.logger.LoggerAspect - ServiceImpl  	:  first.builder.service.BuilderService.getAllBertIntents()
DEBUG: first.common.logger.LoggerAspect - DAO  		:  first.builder.dao.BuilderDAO.getAllBertIntents()
DEBUG: first.builder.dao.AbstractDAO - 	 QueryId  	:  builder.getAllBertIntents
DEBUG: org.mybatis.spring.SqlSessionUtils - Creating a new SqlSession
DEBUG: org.mybatis.spring.SqlSessionUtils - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@25a65d01]
DEBUG: org.mybatis.spring.transaction.SpringManagedTransaction - JDBC Connection [net.sf.log4jdbc.ConnectionSpy@2ea274ae] will be managed by Spring
2024-03-05 04:57:16,654  INFO SQL(simplebot)        :  SELECT B.No, B.Name, B.Language
		FROM BertIntent B LEFT OUTER JOIN BackendInfo BI
		ON B.BertItfId = BI.id
		WHERE BI.host=1637
		ORDER BY B.No
DEBUG: org.mybatis.spring.SqlSessionUtils - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@25a65d01]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@25a65d01]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@25a65d01]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@25a65d01]
DEBUG: first.common.logger.LoggerAspect - Controller  	:  first.builder.controller.BuilderController.getTask()
DEBUG: first.common.logger.LoggerAspect - ServiceImpl  	:  first.builder.service.BuilderService.getTaskCount()
DEBUG: first.common.logger.LoggerAspect - DAO  		:  first.builder.dao.BuilderDAO.getTaskCount()
DEBUG: first.builder.dao.AbstractDAO - 	 QueryId  	:  builder.getTaskCount
DEBUG: org.mybatis.spring.SqlSessionUtils - Creating a new SqlSession
DEBUG: org.mybatis.spring.SqlSessionUtils - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@12141e9b]
DEBUG: org.mybatis.spring.transaction.SpringManagedTransaction - JDBC Connection [net.sf.log4jdbc.ConnectionSpy@512302e7] will be managed by Spring
2024-03-05 04:57:16,985  INFO SQL(simplebot)        :  SELECT COUNT(*) FROM Intent WHERE Account=1638
 and Language=1
DEBUG: org.mybatis.spring.SqlSessionUtils - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@12141e9b]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@12141e9b]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@12141e9b]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@12141e9b]
DEBUG: first.common.logger.LoggerAspect - ServiceImpl  	:  first.builder.service.BuilderService.getAnswerList()
DEBUG: first.common.logger.LoggerAspect - DAO  		:  first.builder.dao.BuilderDAO.getAnswerList()
DEBUG: first.builder.dao.AbstractDAO - 	 QueryId  	:  builder.getAnswerList
DEBUG: org.mybatis.spring.SqlSessionUtils - Creating a new SqlSession
DEBUG: org.mybatis.spring.SqlSessionUtils - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@64540603]
DEBUG: org.mybatis.spring.transaction.SpringManagedTransaction - JDBC Connection [net.sf.log4jdbc.ConnectionSpy@69eccc9d] will be managed by Spring
2024-03-05 04:57:16,987  INFO SQL(simplebot)        :  SELECT I.No, I.Main, I.Name, A.answer, I.Account
		FROM Intent I LEFT OUTER JOIN Answer A
		ON I.Answer = A.No
		WHERE I.Account=1638
 and I.Language=1
		ORDER BY I.No
		OFFSET 0 ROWS
		FETCH NEXT 15 ROWS ONLY
DEBUG: org.mybatis.spring.SqlSessionUtils - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@64540603]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@64540603]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@64540603]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@64540603]
DEBUG: first.common.logger.LoggerAspect - ServiceImpl  	:  first.builder.service.BuilderService.getAllIntents()
DEBUG: first.common.logger.LoggerAspect - DAO  		:  first.builder.dao.BuilderDAO.getAllIntents()
DEBUG: first.builder.dao.AbstractDAO - 	 QueryId  	:  builder.getAllIntents
DEBUG: org.mybatis.spring.SqlSessionUtils - Creating a new SqlSession
DEBUG: org.mybatis.spring.SqlSessionUtils - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@4dd1749a]
DEBUG: org.mybatis.spring.transaction.SpringManagedTransaction - JDBC Connection [net.sf.log4jdbc.ConnectionSpy@782c1313] will be managed by Spring
2024-03-05 04:57:16,989  INFO SQL(simplebot)        :  SELECT I.No, I.Main, I.Name,I.Next, I.URL, I.Language
		FROM Intent I
		WHERE I.Account=1638
		ORDER BY I.No
DEBUG: org.mybatis.spring.SqlSessionUtils - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@4dd1749a]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@4dd1749a]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@4dd1749a]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@4dd1749a]
DEBUG: first.common.logger.LoggerAspect - ServiceImpl  	:  first.builder.service.BuilderService.getAllBertIntents()
DEBUG: first.common.logger.LoggerAspect - DAO  		:  first.builder.dao.BuilderDAO.getAllBertIntents()
DEBUG: first.builder.dao.AbstractDAO - 	 QueryId  	:  builder.getAllBertIntents
DEBUG: org.mybatis.spring.SqlSessionUtils - Creating a new SqlSession
DEBUG: org.mybatis.spring.SqlSessionUtils - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@7be27881]
DEBUG: org.mybatis.spring.transaction.SpringManagedTransaction - JDBC Connection [net.sf.log4jdbc.ConnectionSpy@77820f7] will be managed by Spring
2024-03-05 04:57:16,990  INFO SQL(simplebot)        :  SELECT B.No, B.Name, B.Language
		FROM BertIntent B LEFT OUTER JOIN BackendInfo BI
		ON B.BertItfId = BI.id
		WHERE BI.host=1638
		ORDER BY B.No
DEBUG: org.mybatis.spring.SqlSessionUtils - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@7be27881]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@7be27881]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@7be27881]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@7be27881]
DEBUG: first.common.logger.LoggerAspect - Controller  	:  first.builder.controller.BuilderController.getTask()
DEBUG: first.common.logger.LoggerAspect - ServiceImpl  	:  first.builder.service.BuilderService.getTaskCount()
DEBUG: first.common.logger.LoggerAspect - DAO  		:  first.builder.dao.BuilderDAO.getTaskCount()
DEBUG: first.builder.dao.AbstractDAO - 	 QueryId  	:  builder.getTaskCount
DEBUG: org.mybatis.spring.SqlSessionUtils - Creating a new SqlSession
DEBUG: org.mybatis.spring.SqlSessionUtils - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@3e5e95bc]
DEBUG: org.mybatis.spring.transaction.SpringManagedTransaction - JDBC Connection [net.sf.log4jdbc.ConnectionSpy@567271d6] will be managed by Spring
2024-03-05 04:57:17,673  INFO SQL(simplebot)        :  SELECT COUNT(*) FROM Intent WHERE Account=1637
 and Language=1
DEBUG: org.mybatis.spring.SqlSessionUtils - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@3e5e95bc]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@3e5e95bc]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@3e5e95bc]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@3e5e95bc]
DEBUG: first.common.logger.LoggerAspect - ServiceImpl  	:  first.builder.service.BuilderService.getAnswerList()
DEBUG: first.common.logger.LoggerAspect - DAO  		:  first.builder.dao.BuilderDAO.getAnswerList()
DEBUG: first.builder.dao.AbstractDAO - 	 QueryId  	:  builder.getAnswerList
DEBUG: org.mybatis.spring.SqlSessionUtils - Creating a new SqlSession
DEBUG: org.mybatis.spring.SqlSessionUtils - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@276367d4]
DEBUG: org.mybatis.spring.transaction.SpringManagedTransaction - JDBC Connection [net.sf.log4jdbc.ConnectionSpy@214be593] will be managed by Spring
2024-03-05 04:57:17,676  INFO SQL(simplebot)        :  SELECT I.No, I.Main, I.Name, A.answer, I.Account
		FROM Intent I LEFT OUTER JOIN Answer A
		ON I.Answer = A.No
		WHERE I.Account=1637
 and I.Language=1
		ORDER BY I.No
		OFFSET 0 ROWS
		FETCH NEXT 15 ROWS ONLY
DEBUG: org.mybatis.spring.SqlSessionUtils - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@276367d4]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@276367d4]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@276367d4]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@276367d4]
DEBUG: first.common.logger.LoggerAspect - ServiceImpl  	:  first.builder.service.BuilderService.getAllIntents()
DEBUG: first.common.logger.LoggerAspect - DAO  		:  first.builder.dao.BuilderDAO.getAllIntents()
DEBUG: first.builder.dao.AbstractDAO - 	 QueryId  	:  builder.getAllIntents
DEBUG: org.mybatis.spring.SqlSessionUtils - Creating a new SqlSession
DEBUG: org.mybatis.spring.SqlSessionUtils - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@40386fd9]
DEBUG: org.mybatis.spring.transaction.SpringManagedTransaction - JDBC Connection [net.sf.log4jdbc.ConnectionSpy@5aa16bf2] will be managed by Spring
2024-03-05 04:57:17,678  INFO SQL(simplebot)        :  SELECT I.No, I.Main, I.Name,I.Next, I.URL, I.Language
		FROM Intent I
		WHERE I.Account=1637
		ORDER BY I.No
DEBUG: org.mybatis.spring.SqlSessionUtils - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@40386fd9]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@40386fd9]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@40386fd9]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@40386fd9]
DEBUG: first.common.logger.LoggerAspect - ServiceImpl  	:  first.builder.service.BuilderService.getAllBertIntents()
DEBUG: first.common.logger.LoggerAspect - DAO  		:  first.builder.dao.BuilderDAO.getAllBertIntents()
DEBUG: first.builder.dao.AbstractDAO - 	 QueryId  	:  builder.getAllBertIntents
DEBUG: org.mybatis.spring.SqlSessionUtils - Creating a new SqlSession
DEBUG: org.mybatis.spring.SqlSessionUtils - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@5042b916]
DEBUG: org.mybatis.spring.transaction.SpringManagedTransaction - JDBC Connection [net.sf.log4jdbc.ConnectionSpy@a90bae3] will be managed by Spring
2024-03-05 04:57:17,682  INFO SQL(simplebot)        :  SELECT B.No, B.Name, B.Language
		FROM BertIntent B LEFT OUTER JOIN BackendInfo BI
		ON B.BertItfId = BI.id
		WHERE BI.host=1637
		ORDER BY B.No
DEBUG: org.mybatis.spring.SqlSessionUtils - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@5042b916]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@5042b916]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@5042b916]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@5042b916]
DEBUG: first.common.logger.LoggerAspect - Controller  	:  first.builder.controller.BuilderController.getTask()
DEBUG: first.common.logger.LoggerAspect - ServiceImpl  	:  first.builder.service.BuilderService.getTaskCount()
DEBUG: first.common.logger.LoggerAspect - DAO  		:  first.builder.dao.BuilderDAO.getTaskCount()
DEBUG: first.builder.dao.AbstractDAO - 	 QueryId  	:  builder.getTaskCount
DEBUG: org.mybatis.spring.SqlSessionUtils - Creating a new SqlSession
DEBUG: org.mybatis.spring.SqlSessionUtils - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@dfe28ff]
DEBUG: org.mybatis.spring.transaction.SpringManagedTransaction - JDBC Connection [net.sf.log4jdbc.ConnectionSpy@73e8b096] will be managed by Spring
2024-03-05 04:57:17,921  INFO SQL(simplebot)        :  SELECT COUNT(*) FROM Intent WHERE Account=1638
 and Language=1
DEBUG: org.mybatis.spring.SqlSessionUtils - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@dfe28ff]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@dfe28ff]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@dfe28ff]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@dfe28ff]
DEBUG: first.common.logger.LoggerAspect - ServiceImpl  	:  first.builder.service.BuilderService.getAnswerList()
DEBUG: first.common.logger.LoggerAspect - DAO  		:  first.builder.dao.BuilderDAO.getAnswerList()
DEBUG: first.builder.dao.AbstractDAO - 	 QueryId  	:  builder.getAnswerList
DEBUG: org.mybatis.spring.SqlSessionUtils - Creating a new SqlSession
DEBUG: org.mybatis.spring.SqlSessionUtils - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@9014729]
DEBUG: org.mybatis.spring.transaction.SpringManagedTransaction - JDBC Connection [net.sf.log4jdbc.ConnectionSpy@798af2be] will be managed by Spring
2024-03-05 04:57:17,924  INFO SQL(simplebot)        :  SELECT I.No, I.Main, I.Name, A.answer, I.Account
		FROM Intent I LEFT OUTER JOIN Answer A
		ON I.Answer = A.No
		WHERE I.Account=1638
 and I.Language=1
		ORDER BY I.No
		OFFSET 0 ROWS
		FETCH NEXT 15 ROWS ONLY
DEBUG: org.mybatis.spring.SqlSessionUtils - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@9014729]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@9014729]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@9014729]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@9014729]
DEBUG: first.common.logger.LoggerAspect - ServiceImpl  	:  first.builder.service.BuilderService.getAllIntents()
DEBUG: first.common.logger.LoggerAspect - DAO  		:  first.builder.dao.BuilderDAO.getAllIntents()
DEBUG: first.builder.dao.AbstractDAO - 	 QueryId  	:  builder.getAllIntents
DEBUG: org.mybatis.spring.SqlSessionUtils - Creating a new SqlSession
DEBUG: org.mybatis.spring.SqlSessionUtils - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@201939da]
DEBUG: org.mybatis.spring.transaction.SpringManagedTransaction - JDBC Connection [net.sf.log4jdbc.ConnectionSpy@13111e4] will be managed by Spring
2024-03-05 04:57:17,929  INFO SQL(simplebot)        :  SELECT I.No, I.Main, I.Name,I.Next, I.URL, I.Language
		FROM Intent I
		WHERE I.Account=1638
		ORDER BY I.No
DEBUG: org.mybatis.spring.SqlSessionUtils - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@201939da]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@201939da]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@201939da]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@201939da]
DEBUG: first.common.logger.LoggerAspect - ServiceImpl  	:  first.builder.service.BuilderService.getAllBertIntents()
DEBUG: first.common.logger.LoggerAspect - DAO  		:  first.builder.dao.BuilderDAO.getAllBertIntents()
DEBUG: first.builder.dao.AbstractDAO - 	 QueryId  	:  builder.getAllBertIntents
DEBUG: org.mybatis.spring.SqlSessionUtils - Creating a new SqlSession
DEBUG: org.mybatis.spring.SqlSessionUtils - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@71dac564]
DEBUG: org.mybatis.spring.transaction.SpringManagedTransaction - JDBC Connection [net.sf.log4jdbc.ConnectionSpy@674aeca7] will be managed by Spring
2024-03-05 04:57:17,932  INFO SQL(simplebot)        :  SELECT B.No, B.Name, B.Language
		FROM BertIntent B LEFT OUTER JOIN BackendInfo BI
		ON B.BertItfId = BI.id
		WHERE BI.host=1638
		ORDER BY B.No
DEBUG: org.mybatis.spring.SqlSessionUtils - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@71dac564]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@71dac564]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@71dac564]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@71dac564]
DEBUG: first.common.logger.LoggerAspect - Controller  	:  first.builder.controller.BuilderController.getTask()
DEBUG: first.common.logger.LoggerAspect - ServiceImpl  	:  first.builder.service.BuilderService.getTaskCount()
DEBUG: first.common.logger.LoggerAspect - DAO  		:  first.builder.dao.BuilderDAO.getTaskCount()
DEBUG: first.builder.dao.AbstractDAO - 	 QueryId  	:  builder.getTaskCount
DEBUG: org.mybatis.spring.SqlSessionUtils - Creating a new SqlSession
DEBUG: org.mybatis.spring.SqlSessionUtils - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@4380963a]
DEBUG: org.mybatis.spring.transaction.SpringManagedTransaction - JDBC Connection [net.sf.log4jdbc.ConnectionSpy@699bc66c] will be managed by Spring
2024-03-05 04:57:18,135  INFO SQL(simplebot)        :  SELECT COUNT(*) FROM Intent WHERE Account=1637
 and Language=1
DEBUG: org.mybatis.spring.SqlSessionUtils - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@4380963a]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@4380963a]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@4380963a]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@4380963a]
DEBUG: first.common.logger.LoggerAspect - ServiceImpl  	:  first.builder.service.BuilderService.getAnswerList()
DEBUG: first.common.logger.LoggerAspect - DAO  		:  first.builder.dao.BuilderDAO.getAnswerList()
DEBUG: first.builder.dao.AbstractDAO - 	 QueryId  	:  builder.getAnswerList
DEBUG: org.mybatis.spring.SqlSessionUtils - Creating a new SqlSession
DEBUG: org.mybatis.spring.SqlSessionUtils - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@3b4a4d16]
DEBUG: org.mybatis.spring.transaction.SpringManagedTransaction - JDBC Connection [net.sf.log4jdbc.ConnectionSpy@2fd13952] will be managed by Spring
2024-03-05 04:57:18,138  INFO SQL(simplebot)        :  SELECT I.No, I.Main, I.Name, A.answer, I.Account
		FROM Intent I LEFT OUTER JOIN Answer A
		ON I.Answer = A.No
		WHERE I.Account=1637
 and I.Language=1
		ORDER BY I.No
		OFFSET 0 ROWS
		FETCH NEXT 15 ROWS ONLY
DEBUG: org.mybatis.spring.SqlSessionUtils - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@3b4a4d16]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@3b4a4d16]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@3b4a4d16]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@3b4a4d16]
DEBUG: first.common.logger.LoggerAspect - ServiceImpl  	:  first.builder.service.BuilderService.getAllIntents()
DEBUG: first.common.logger.LoggerAspect - DAO  		:  first.builder.dao.BuilderDAO.getAllIntents()
DEBUG: first.builder.dao.AbstractDAO - 	 QueryId  	:  builder.getAllIntents
DEBUG: org.mybatis.spring.SqlSessionUtils - Creating a new SqlSession
DEBUG: org.mybatis.spring.SqlSessionUtils - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@d0003b2]
DEBUG: org.mybatis.spring.transaction.SpringManagedTransaction - JDBC Connection [net.sf.log4jdbc.ConnectionSpy@596e6d39] will be managed by Spring
2024-03-05 04:57:18,141  INFO SQL(simplebot)        :  SELECT I.No, I.Main, I.Name,I.Next, I.URL, I.Language
		FROM Intent I
		WHERE I.Account=1637
		ORDER BY I.No
DEBUG: org.mybatis.spring.SqlSessionUtils - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@d0003b2]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@d0003b2]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@d0003b2]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@d0003b2]
DEBUG: first.common.logger.LoggerAspect - ServiceImpl  	:  first.builder.service.BuilderService.getAllBertIntents()
DEBUG: first.common.logger.LoggerAspect - DAO  		:  first.builder.dao.BuilderDAO.getAllBertIntents()
DEBUG: first.builder.dao.AbstractDAO - 	 QueryId  	:  builder.getAllBertIntents
DEBUG: org.mybatis.spring.SqlSessionUtils - Creating a new SqlSession
DEBUG: org.mybatis.spring.SqlSessionUtils - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1ccdd4a3]
DEBUG: org.mybatis.spring.transaction.SpringManagedTransaction - JDBC Connection [net.sf.log4jdbc.ConnectionSpy@184f9aa] will be managed by Spring
2024-03-05 04:57:18,143  INFO SQL(simplebot)        :  SELECT B.No, B.Name, B.Language
		FROM BertIntent B LEFT OUTER JOIN BackendInfo BI
		ON B.BertItfId = BI.id
		WHERE BI.host=1637
		ORDER BY B.No
DEBUG: org.mybatis.spring.SqlSessionUtils - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1ccdd4a3]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1ccdd4a3]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1ccdd4a3]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1ccdd4a3]
DEBUG: first.common.logger.LoggerAspect - Controller  	:  first.builder.controller.BuilderController.getTask()
DEBUG: first.common.logger.LoggerAspect - ServiceImpl  	:  first.builder.service.BuilderService.getTaskCount()
DEBUG: first.common.logger.LoggerAspect - DAO  		:  first.builder.dao.BuilderDAO.getTaskCount()
DEBUG: first.builder.dao.AbstractDAO - 	 QueryId  	:  builder.getTaskCount
DEBUG: org.mybatis.spring.SqlSessionUtils - Creating a new SqlSession
DEBUG: org.mybatis.spring.SqlSessionUtils - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@b58a8c7]
DEBUG: org.mybatis.spring.transaction.SpringManagedTransaction - JDBC Connection [net.sf.log4jdbc.ConnectionSpy@5cbccb2f] will be managed by Spring
2024-03-05 04:57:18,358  INFO SQL(simplebot)        :  SELECT COUNT(*) FROM Intent WHERE Account=1638
 and Language=1
DEBUG: org.mybatis.spring.SqlSessionUtils - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@b58a8c7]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@b58a8c7]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@b58a8c7]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@b58a8c7]
DEBUG: first.common.logger.LoggerAspect - ServiceImpl  	:  first.builder.service.BuilderService.getAnswerList()
DEBUG: first.common.logger.LoggerAspect - DAO  		:  first.builder.dao.BuilderDAO.getAnswerList()
DEBUG: first.builder.dao.AbstractDAO - 	 QueryId  	:  builder.getAnswerList
DEBUG: org.mybatis.spring.SqlSessionUtils - Creating a new SqlSession
DEBUG: org.mybatis.spring.SqlSessionUtils - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@72048d7]
DEBUG: org.mybatis.spring.transaction.SpringManagedTransaction - JDBC Connection [net.sf.log4jdbc.ConnectionSpy@4d22cf6e] will be managed by Spring
2024-03-05 04:57:18,360  INFO SQL(simplebot)        :  SELECT I.No, I.Main, I.Name, A.answer, I.Account
		FROM Intent I LEFT OUTER JOIN Answer A
		ON I.Answer = A.No
		WHERE I.Account=1638
 and I.Language=1
		ORDER BY I.No
		OFFSET 0 ROWS
		FETCH NEXT 15 ROWS ONLY
DEBUG: org.mybatis.spring.SqlSessionUtils - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@72048d7]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@72048d7]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@72048d7]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@72048d7]
DEBUG: first.common.logger.LoggerAspect - ServiceImpl  	:  first.builder.service.BuilderService.getAllIntents()
DEBUG: first.common.logger.LoggerAspect - DAO  		:  first.builder.dao.BuilderDAO.getAllIntents()
DEBUG: first.builder.dao.AbstractDAO - 	 QueryId  	:  builder.getAllIntents
DEBUG: org.mybatis.spring.SqlSessionUtils - Creating a new SqlSession
DEBUG: org.mybatis.spring.SqlSessionUtils - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@665e147e]
DEBUG: org.mybatis.spring.transaction.SpringManagedTransaction - JDBC Connection [net.sf.log4jdbc.ConnectionSpy@224f7338] will be managed by Spring
2024-03-05 04:57:18,363  INFO SQL(simplebot)        :  SELECT I.No, I.Main, I.Name,I.Next, I.URL, I.Language
		FROM Intent I
		WHERE I.Account=1638
		ORDER BY I.No
DEBUG: org.mybatis.spring.SqlSessionUtils - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@665e147e]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@665e147e]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@665e147e]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@665e147e]
DEBUG: first.common.logger.LoggerAspect - ServiceImpl  	:  first.builder.service.BuilderService.getAllBertIntents()
DEBUG: first.common.logger.LoggerAspect - DAO  		:  first.builder.dao.BuilderDAO.getAllBertIntents()
DEBUG: first.builder.dao.AbstractDAO - 	 QueryId  	:  builder.getAllBertIntents
DEBUG: org.mybatis.spring.SqlSessionUtils - Creating a new SqlSession
DEBUG: org.mybatis.spring.SqlSessionUtils - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@cc645b6]
DEBUG: org.mybatis.spring.transaction.SpringManagedTransaction - JDBC Connection [net.sf.log4jdbc.ConnectionSpy@3b72639b] will be managed by Spring
2024-03-05 04:57:18,365  INFO SQL(simplebot)        :  SELECT B.No, B.Name, B.Language
		FROM BertIntent B LEFT OUTER JOIN BackendInfo BI
		ON B.BertItfId = BI.id
		WHERE BI.host=1638
		ORDER BY B.No
DEBUG: org.mybatis.spring.SqlSessionUtils - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@cc645b6]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@cc645b6]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@cc645b6]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@cc645b6]
DEBUG: first.common.logger.LoggerAspect - Controller  	:  first.builder.controller.BuilderController.getTask()
DEBUG: first.common.logger.LoggerAspect - ServiceImpl  	:  first.builder.service.BuilderService.getTaskCount()
DEBUG: first.common.logger.LoggerAspect - DAO  		:  first.builder.dao.BuilderDAO.getTaskCount()
DEBUG: first.builder.dao.AbstractDAO - 	 QueryId  	:  builder.getTaskCount
DEBUG: org.mybatis.spring.SqlSessionUtils - Creating a new SqlSession
DEBUG: org.mybatis.spring.SqlSessionUtils - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@34bfff13]
DEBUG: org.mybatis.spring.transaction.SpringManagedTransaction - JDBC Connection [net.sf.log4jdbc.ConnectionSpy@4f5a0c62] will be managed by Spring
2024-03-05 04:57:18,543  INFO SQL(simplebot)        :  SELECT COUNT(*) FROM Intent WHERE Account=1637
 and Language=1
DEBUG: org.mybatis.spring.SqlSessionUtils - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@34bfff13]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@34bfff13]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@34bfff13]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@34bfff13]
DEBUG: first.common.logger.LoggerAspect - ServiceImpl  	:  first.builder.service.BuilderService.getAnswerList()
DEBUG: first.common.logger.LoggerAspect - DAO  		:  first.builder.dao.BuilderDAO.getAnswerList()
DEBUG: first.builder.dao.AbstractDAO - 	 QueryId  	:  builder.getAnswerList
DEBUG: org.mybatis.spring.SqlSessionUtils - Creating a new SqlSession
DEBUG: org.mybatis.spring.SqlSessionUtils - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@6afc9d9]
DEBUG: org.mybatis.spring.transaction.SpringManagedTransaction - JDBC Connection [net.sf.log4jdbc.ConnectionSpy@590704d3] will be managed by Spring
2024-03-05 04:57:18,546  INFO SQL(simplebot)        :  SELECT I.No, I.Main, I.Name, A.answer, I.Account
		FROM Intent I LEFT OUTER JOIN Answer A
		ON I.Answer = A.No
		WHERE I.Account=1637
 and I.Language=1
		ORDER BY I.No
		OFFSET 0 ROWS
		FETCH NEXT 15 ROWS ONLY
DEBUG: org.mybatis.spring.SqlSessionUtils - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@6afc9d9]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@6afc9d9]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@6afc9d9]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@6afc9d9]
DEBUG: first.common.logger.LoggerAspect - ServiceImpl  	:  first.builder.service.BuilderService.getAllIntents()
DEBUG: first.common.logger.LoggerAspect - DAO  		:  first.builder.dao.BuilderDAO.getAllIntents()
DEBUG: first.builder.dao.AbstractDAO - 	 QueryId  	:  builder.getAllIntents
DEBUG: org.mybatis.spring.SqlSessionUtils - Creating a new SqlSession
DEBUG: org.mybatis.spring.SqlSessionUtils - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@59faa510]
DEBUG: org.mybatis.spring.transaction.SpringManagedTransaction - JDBC Connection [net.sf.log4jdbc.ConnectionSpy@710764b9] will be managed by Spring
2024-03-05 04:57:18,549  INFO SQL(simplebot)        :  SELECT I.No, I.Main, I.Name,I.Next, I.URL, I.Language
		FROM Intent I
		WHERE I.Account=1637
		ORDER BY I.No
DEBUG: org.mybatis.spring.SqlSessionUtils - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@59faa510]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@59faa510]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@59faa510]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@59faa510]
DEBUG: first.common.logger.LoggerAspect - ServiceImpl  	:  first.builder.service.BuilderService.getAllBertIntents()
DEBUG: first.common.logger.LoggerAspect - DAO  		:  first.builder.dao.BuilderDAO.getAllBertIntents()
DEBUG: first.builder.dao.AbstractDAO - 	 QueryId  	:  builder.getAllBertIntents
DEBUG: org.mybatis.spring.SqlSessionUtils - Creating a new SqlSession
DEBUG: org.mybatis.spring.SqlSessionUtils - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@3aefc3e5]
DEBUG: org.mybatis.spring.transaction.SpringManagedTransaction - JDBC Connection [net.sf.log4jdbc.ConnectionSpy@2425b9b0] will be managed by Spring
2024-03-05 04:57:18,552  INFO SQL(simplebot)        :  SELECT B.No, B.Name, B.Language
		FROM BertIntent B LEFT OUTER JOIN BackendInfo BI
		ON B.BertItfId = BI.id
		WHERE BI.host=1637
		ORDER BY B.No
DEBUG: org.mybatis.spring.SqlSessionUtils - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@3aefc3e5]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@3aefc3e5]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@3aefc3e5]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@3aefc3e5]
DEBUG: first.common.logger.LoggerAspect - Controller  	:  first.builder.controller.BuilderController.getTask()
DEBUG: first.common.logger.LoggerAspect - ServiceImpl  	:  first.builder.service.BuilderService.getTaskCount()
DEBUG: first.common.logger.LoggerAspect - DAO  		:  first.builder.dao.BuilderDAO.getTaskCount()
DEBUG: first.builder.dao.AbstractDAO - 	 QueryId  	:  builder.getTaskCount
DEBUG: org.mybatis.spring.SqlSessionUtils - Creating a new SqlSession
DEBUG: org.mybatis.spring.SqlSessionUtils - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@f09b186]
DEBUG: org.mybatis.spring.transaction.SpringManagedTransaction - JDBC Connection [net.sf.log4jdbc.ConnectionSpy@f454940] will be managed by Spring
2024-03-05 04:57:18,766  INFO SQL(simplebot)        :  SELECT COUNT(*) FROM Intent WHERE Account=1638
 and Language=1
DEBUG: org.mybatis.spring.SqlSessionUtils - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@f09b186]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@f09b186]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@f09b186]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@f09b186]
DEBUG: first.common.logger.LoggerAspect - ServiceImpl  	:  first.builder.service.BuilderService.getAnswerList()
DEBUG: first.common.logger.LoggerAspect - DAO  		:  first.builder.dao.BuilderDAO.getAnswerList()
DEBUG: first.builder.dao.AbstractDAO - 	 QueryId  	:  builder.getAnswerList
DEBUG: org.mybatis.spring.SqlSessionUtils - Creating a new SqlSession
DEBUG: org.mybatis.spring.SqlSessionUtils - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@7d9d7e13]
DEBUG: org.mybatis.spring.transaction.SpringManagedTransaction - JDBC Connection [net.sf.log4jdbc.ConnectionSpy@3e996b1e] will be managed by Spring
2024-03-05 04:57:18,769  INFO SQL(simplebot)        :  SELECT I.No, I.Main, I.Name, A.answer, I.Account
		FROM Intent I LEFT OUTER JOIN Answer A
		ON I.Answer = A.No
		WHERE I.Account=1638
 and I.Language=1
		ORDER BY I.No
		OFFSET 0 ROWS
		FETCH NEXT 15 ROWS ONLY
DEBUG: org.mybatis.spring.SqlSessionUtils - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@7d9d7e13]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@7d9d7e13]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@7d9d7e13]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@7d9d7e13]
DEBUG: first.common.logger.LoggerAspect - ServiceImpl  	:  first.builder.service.BuilderService.getAllIntents()
DEBUG: first.common.logger.LoggerAspect - DAO  		:  first.builder.dao.BuilderDAO.getAllIntents()
DEBUG: first.builder.dao.AbstractDAO - 	 QueryId  	:  builder.getAllIntents
DEBUG: org.mybatis.spring.SqlSessionUtils - Creating a new SqlSession
DEBUG: org.mybatis.spring.SqlSessionUtils - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@3b6494f4]
DEBUG: org.mybatis.spring.transaction.SpringManagedTransaction - JDBC Connection [net.sf.log4jdbc.ConnectionSpy@7672d86f] will be managed by Spring
2024-03-05 04:57:18,772  INFO SQL(simplebot)        :  SELECT I.No, I.Main, I.Name,I.Next, I.URL, I.Language
		FROM Intent I
		WHERE I.Account=1638
		ORDER BY I.No
DEBUG: org.mybatis.spring.SqlSessionUtils - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@3b6494f4]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@3b6494f4]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@3b6494f4]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@3b6494f4]
DEBUG: first.common.logger.LoggerAspect - ServiceImpl  	:  first.builder.service.BuilderService.getAllBertIntents()
DEBUG: first.common.logger.LoggerAspect - DAO  		:  first.builder.dao.BuilderDAO.getAllBertIntents()
DEBUG: first.builder.dao.AbstractDAO - 	 QueryId  	:  builder.getAllBertIntents
DEBUG: org.mybatis.spring.SqlSessionUtils - Creating a new SqlSession
DEBUG: org.mybatis.spring.SqlSessionUtils - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@6b9423ec]
DEBUG: org.mybatis.spring.transaction.SpringManagedTransaction - JDBC Connection [net.sf.log4jdbc.ConnectionSpy@2716904b] will be managed by Spring
2024-03-05 04:57:18,776  INFO SQL(simplebot)        :  SELECT B.No, B.Name, B.Language
		FROM BertIntent B LEFT OUTER JOIN BackendInfo BI
		ON B.BertItfId = BI.id
		WHERE BI.host=1638
		ORDER BY B.No
DEBUG: org.mybatis.spring.SqlSessionUtils - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@6b9423ec]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@6b9423ec]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@6b9423ec]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@6b9423ec]
DEBUG: first.common.logger.LoggerAspect - Controller  	:  first.builder.controller.BuilderController.getTask()
DEBUG: first.common.logger.LoggerAspect - ServiceImpl  	:  first.builder.service.BuilderService.getTaskCount()
DEBUG: first.common.logger.LoggerAspect - DAO  		:  first.builder.dao.BuilderDAO.getTaskCount()
DEBUG: first.builder.dao.AbstractDAO - 	 QueryId  	:  builder.getTaskCount
DEBUG: org.mybatis.spring.SqlSessionUtils - Creating a new SqlSession
DEBUG: org.mybatis.spring.SqlSessionUtils - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@2f3f0d58]
DEBUG: org.mybatis.spring.transaction.SpringManagedTransaction - JDBC Connection [net.sf.log4jdbc.ConnectionSpy@45072679] will be managed by Spring
2024-03-05 04:57:18,968  INFO SQL(simplebot)        :  SELECT COUNT(*) FROM Intent WHERE Account=1637
 and Language=1
DEBUG: org.mybatis.spring.SqlSessionUtils - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@2f3f0d58]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@2f3f0d58]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@2f3f0d58]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@2f3f0d58]
DEBUG: first.common.logger.LoggerAspect - ServiceImpl  	:  first.builder.service.BuilderService.getAnswerList()
DEBUG: first.common.logger.LoggerAspect - DAO  		:  first.builder.dao.BuilderDAO.getAnswerList()
DEBUG: first.builder.dao.AbstractDAO - 	 QueryId  	:  builder.getAnswerList
DEBUG: org.mybatis.spring.SqlSessionUtils - Creating a new SqlSession
DEBUG: org.mybatis.spring.SqlSessionUtils - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@77219f08]
DEBUG: org.mybatis.spring.transaction.SpringManagedTransaction - JDBC Connection [net.sf.log4jdbc.ConnectionSpy@53cee043] will be managed by Spring
2024-03-05 04:57:18,971  INFO SQL(simplebot)        :  SELECT I.No, I.Main, I.Name, A.answer, I.Account
		FROM Intent I LEFT OUTER JOIN Answer A
		ON I.Answer = A.No
		WHERE I.Account=1637
 and I.Language=1
		ORDER BY I.No
		OFFSET 0 ROWS
		FETCH NEXT 15 ROWS ONLY
DEBUG: org.mybatis.spring.SqlSessionUtils - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@77219f08]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@77219f08]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@77219f08]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@77219f08]
DEBUG: first.common.logger.LoggerAspect - ServiceImpl  	:  first.builder.service.BuilderService.getAllIntents()
DEBUG: first.common.logger.LoggerAspect - DAO  		:  first.builder.dao.BuilderDAO.getAllIntents()
DEBUG: first.builder.dao.AbstractDAO - 	 QueryId  	:  builder.getAllIntents
DEBUG: org.mybatis.spring.SqlSessionUtils - Creating a new SqlSession
DEBUG: org.mybatis.spring.SqlSessionUtils - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@4a6369b9]
DEBUG: org.mybatis.spring.transaction.SpringManagedTransaction - JDBC Connection [net.sf.log4jdbc.ConnectionSpy@2941ed5f] will be managed by Spring
2024-03-05 04:57:18,973  INFO SQL(simplebot)        :  SELECT I.No, I.Main, I.Name,I.Next, I.URL, I.Language
		FROM Intent I
		WHERE I.Account=1637
		ORDER BY I.No
DEBUG: org.mybatis.spring.SqlSessionUtils - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@4a6369b9]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@4a6369b9]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@4a6369b9]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@4a6369b9]
DEBUG: first.common.logger.LoggerAspect - ServiceImpl  	:  first.builder.service.BuilderService.getAllBertIntents()
DEBUG: first.common.logger.LoggerAspect - DAO  		:  first.builder.dao.BuilderDAO.getAllBertIntents()
DEBUG: first.builder.dao.AbstractDAO - 	 QueryId  	:  builder.getAllBertIntents
DEBUG: org.mybatis.spring.SqlSessionUtils - Creating a new SqlSession
DEBUG: org.mybatis.spring.SqlSessionUtils - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@87de121]
DEBUG: org.mybatis.spring.transaction.SpringManagedTransaction - JDBC Connection [net.sf.log4jdbc.ConnectionSpy@331ae9b4] will be managed by Spring
2024-03-05 04:57:18,976  INFO SQL(simplebot)        :  SELECT B.No, B.Name, B.Language
		FROM BertIntent B LEFT OUTER JOIN BackendInfo BI
		ON B.BertItfId = BI.id
		WHERE BI.host=1637
		ORDER BY B.No
DEBUG: org.mybatis.spring.SqlSessionUtils - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@87de121]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@87de121]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@87de121]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@87de121]
DEBUG: first.common.logger.LoggerAspect - Controller  	:  first.builder.controller.BuilderController.getTask()
DEBUG: first.common.logger.LoggerAspect - ServiceImpl  	:  first.builder.service.BuilderService.getTaskCount()
DEBUG: first.common.logger.LoggerAspect - DAO  		:  first.builder.dao.BuilderDAO.getTaskCount()
DEBUG: first.builder.dao.AbstractDAO - 	 QueryId  	:  builder.getTaskCount
DEBUG: org.mybatis.spring.SqlSessionUtils - Creating a new SqlSession
DEBUG: org.mybatis.spring.SqlSessionUtils - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@47f9e2d2]
DEBUG: org.mybatis.spring.transaction.SpringManagedTransaction - JDBC Connection [net.sf.log4jdbc.ConnectionSpy@6789986a] will be managed by Spring
2024-03-05 04:57:19,172  INFO SQL(simplebot)        :  SELECT COUNT(*) FROM Intent WHERE Account=1638
 and Language=1
DEBUG: org.mybatis.spring.SqlSessionUtils - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@47f9e2d2]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@47f9e2d2]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@47f9e2d2]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@47f9e2d2]
DEBUG: first.common.logger.LoggerAspect - ServiceImpl  	:  first.builder.service.BuilderService.getAnswerList()
DEBUG: first.common.logger.LoggerAspect - DAO  		:  first.builder.dao.BuilderDAO.getAnswerList()
DEBUG: first.builder.dao.AbstractDAO - 	 QueryId  	:  builder.getAnswerList
DEBUG: org.mybatis.spring.SqlSessionUtils - Creating a new SqlSession
DEBUG: org.mybatis.spring.SqlSessionUtils - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@4f6de01f]
DEBUG: org.mybatis.spring.transaction.SpringManagedTransaction - JDBC Connection [net.sf.log4jdbc.ConnectionSpy@72ee509] will be managed by Spring
2024-03-05 04:57:19,175  INFO SQL(simplebot)        :  SELECT I.No, I.Main, I.Name, A.answer, I.Account
		FROM Intent I LEFT OUTER JOIN Answer A
		ON I.Answer = A.No
		WHERE I.Account=1638
 and I.Language=1
		ORDER BY I.No
		OFFSET 0 ROWS
		FETCH NEXT 15 ROWS ONLY
DEBUG: org.mybatis.spring.SqlSessionUtils - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@4f6de01f]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@4f6de01f]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@4f6de01f]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@4f6de01f]
DEBUG: first.common.logger.LoggerAspect - ServiceImpl  	:  first.builder.service.BuilderService.getAllIntents()
DEBUG: first.common.logger.LoggerAspect - DAO  		:  first.builder.dao.BuilderDAO.getAllIntents()
DEBUG: first.builder.dao.AbstractDAO - 	 QueryId  	:  builder.getAllIntents
DEBUG: org.mybatis.spring.SqlSessionUtils - Creating a new SqlSession
DEBUG: org.mybatis.spring.SqlSessionUtils - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@76c06046]
DEBUG: org.mybatis.spring.transaction.SpringManagedTransaction - JDBC Connection [net.sf.log4jdbc.ConnectionSpy@24e2888d] will be managed by Spring
2024-03-05 04:57:19,178  INFO SQL(simplebot)        :  SELECT I.No, I.Main, I.Name,I.Next, I.URL, I.Language
		FROM Intent I
		WHERE I.Account=1638
		ORDER BY I.No
DEBUG: org.mybatis.spring.SqlSessionUtils - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@76c06046]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@76c06046]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@76c06046]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@76c06046]
DEBUG: first.common.logger.LoggerAspect - ServiceImpl  	:  first.builder.service.BuilderService.getAllBertIntents()
DEBUG: first.common.logger.LoggerAspect - DAO  		:  first.builder.dao.BuilderDAO.getAllBertIntents()
DEBUG: first.builder.dao.AbstractDAO - 	 QueryId  	:  builder.getAllBertIntents
DEBUG: org.mybatis.spring.SqlSessionUtils - Creating a new SqlSession
DEBUG: org.mybatis.spring.SqlSessionUtils - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@177ff93b]
DEBUG: org.mybatis.spring.transaction.SpringManagedTransaction - JDBC Connection [net.sf.log4jdbc.ConnectionSpy@7cce9f2] will be managed by Spring
2024-03-05 04:57:19,181  INFO SQL(simplebot)        :  SELECT B.No, B.Name, B.Language
		FROM BertIntent B LEFT OUTER JOIN BackendInfo BI
		ON B.BertItfId = BI.id
		WHERE BI.host=1638
		ORDER BY B.No
DEBUG: org.mybatis.spring.SqlSessionUtils - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@177ff93b]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@177ff93b]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@177ff93b]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@177ff93b]
DEBUG: first.common.logger.LoggerAspect - Controller  	:  first.builder.controller.BuilderController.getTask()
DEBUG: first.common.logger.LoggerAspect - ServiceImpl  	:  first.builder.service.BuilderService.getTaskCount()
DEBUG: first.common.logger.LoggerAspect - DAO  		:  first.builder.dao.BuilderDAO.getTaskCount()
DEBUG: first.builder.dao.AbstractDAO - 	 QueryId  	:  builder.getTaskCount
DEBUG: org.mybatis.spring.SqlSessionUtils - Creating a new SqlSession
DEBUG: org.mybatis.spring.SqlSessionUtils - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@435e28de]
DEBUG: org.mybatis.spring.transaction.SpringManagedTransaction - JDBC Connection [net.sf.log4jdbc.ConnectionSpy@78cbaa6f] will be managed by Spring
2024-03-05 04:57:19,376  INFO SQL(simplebot)        :  SELECT COUNT(*) FROM Intent WHERE Account=1637
 and Language=1
DEBUG: org.mybatis.spring.SqlSessionUtils - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@435e28de]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@435e28de]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@435e28de]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@435e28de]
DEBUG: first.common.logger.LoggerAspect - ServiceImpl  	:  first.builder.service.BuilderService.getAnswerList()
DEBUG: first.common.logger.LoggerAspect - DAO  		:  first.builder.dao.BuilderDAO.getAnswerList()
DEBUG: first.builder.dao.AbstractDAO - 	 QueryId  	:  builder.getAnswerList
DEBUG: org.mybatis.spring.SqlSessionUtils - Creating a new SqlSession
DEBUG: org.mybatis.spring.SqlSessionUtils - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@294697e7]
DEBUG: org.mybatis.spring.transaction.SpringManagedTransaction - JDBC Connection [net.sf.log4jdbc.ConnectionSpy@11931da2] will be managed by Spring
2024-03-05 04:57:19,379  INFO SQL(simplebot)        :  SELECT I.No, I.Main, I.Name, A.answer, I.Account
		FROM Intent I LEFT OUTER JOIN Answer A
		ON I.Answer = A.No
		WHERE I.Account=1637
 and I.Language=1
		ORDER BY I.No
		OFFSET 0 ROWS
		FETCH NEXT 15 ROWS ONLY
DEBUG: org.mybatis.spring.SqlSessionUtils - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@294697e7]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@294697e7]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@294697e7]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@294697e7]
DEBUG: first.common.logger.LoggerAspect - ServiceImpl  	:  first.builder.service.BuilderService.getAllIntents()
DEBUG: first.common.logger.LoggerAspect - DAO  		:  first.builder.dao.BuilderDAO.getAllIntents()
DEBUG: first.builder.dao.AbstractDAO - 	 QueryId  	:  builder.getAllIntents
DEBUG: org.mybatis.spring.SqlSessionUtils - Creating a new SqlSession
DEBUG: org.mybatis.spring.SqlSessionUtils - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@6217f2a7]
DEBUG: org.mybatis.spring.transaction.SpringManagedTransaction - JDBC Connection [net.sf.log4jdbc.ConnectionSpy@6b874592] will be managed by Spring
2024-03-05 04:57:19,381  INFO SQL(simplebot)        :  SELECT I.No, I.Main, I.Name,I.Next, I.URL, I.Language
		FROM Intent I
		WHERE I.Account=1637
		ORDER BY I.No
DEBUG: org.mybatis.spring.SqlSessionUtils - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@6217f2a7]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@6217f2a7]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@6217f2a7]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@6217f2a7]
DEBUG: first.common.logger.LoggerAspect - ServiceImpl  	:  first.builder.service.BuilderService.getAllBertIntents()
DEBUG: first.common.logger.LoggerAspect - DAO  		:  first.builder.dao.BuilderDAO.getAllBertIntents()
DEBUG: first.builder.dao.AbstractDAO - 	 QueryId  	:  builder.getAllBertIntents
DEBUG: org.mybatis.spring.SqlSessionUtils - Creating a new SqlSession
DEBUG: org.mybatis.spring.SqlSessionUtils - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@2c6ae213]
DEBUG: org.mybatis.spring.transaction.SpringManagedTransaction - JDBC Connection [net.sf.log4jdbc.ConnectionSpy@74a61807] will be managed by Spring
2024-03-05 04:57:19,384  INFO SQL(simplebot)        :  SELECT B.No, B.Name, B.Language
		FROM BertIntent B LEFT OUTER JOIN BackendInfo BI
		ON B.BertItfId = BI.id
		WHERE BI.host=1637
		ORDER BY B.No
DEBUG: org.mybatis.spring.SqlSessionUtils - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@2c6ae213]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@2c6ae213]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@2c6ae213]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@2c6ae213]
DEBUG: first.common.logger.LoggerAspect - Controller  	:  first.builder.controller.BuilderController.getTask()
DEBUG: first.common.logger.LoggerAspect - ServiceImpl  	:  first.builder.service.BuilderService.getTaskCount()
DEBUG: first.common.logger.LoggerAspect - DAO  		:  first.builder.dao.BuilderDAO.getTaskCount()
DEBUG: first.builder.dao.AbstractDAO - 	 QueryId  	:  builder.getTaskCount
DEBUG: org.mybatis.spring.SqlSessionUtils - Creating a new SqlSession
DEBUG: org.mybatis.spring.SqlSessionUtils - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@48da64df]
DEBUG: org.mybatis.spring.transaction.SpringManagedTransaction - JDBC Connection [net.sf.log4jdbc.ConnectionSpy@65e091ee] will be managed by Spring
2024-03-05 04:57:19,604  INFO SQL(simplebot)        :  SELECT COUNT(*) FROM Intent WHERE Account=1638
 and Language=1
DEBUG: org.mybatis.spring.SqlSessionUtils - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@48da64df]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@48da64df]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@48da64df]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@48da64df]
DEBUG: first.common.logger.LoggerAspect - ServiceImpl  	:  first.builder.service.BuilderService.getAnswerList()
DEBUG: first.common.logger.LoggerAspect - DAO  		:  first.builder.dao.BuilderDAO.getAnswerList()
DEBUG: first.builder.dao.AbstractDAO - 	 QueryId  	:  builder.getAnswerList
DEBUG: org.mybatis.spring.SqlSessionUtils - Creating a new SqlSession
DEBUG: org.mybatis.spring.SqlSessionUtils - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@55d8a461]
DEBUG: org.mybatis.spring.transaction.SpringManagedTransaction - JDBC Connection [net.sf.log4jdbc.ConnectionSpy@26c2983f] will be managed by Spring
2024-03-05 04:57:19,607  INFO SQL(simplebot)        :  SELECT I.No, I.Main, I.Name, A.answer, I.Account
		FROM Intent I LEFT OUTER JOIN Answer A
		ON I.Answer = A.No
		WHERE I.Account=1638
 and I.Language=1
		ORDER BY I.No
		OFFSET 0 ROWS
		FETCH NEXT 15 ROWS ONLY
DEBUG: org.mybatis.spring.SqlSessionUtils - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@55d8a461]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@55d8a461]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@55d8a461]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@55d8a461]
DEBUG: first.common.logger.LoggerAspect - ServiceImpl  	:  first.builder.service.BuilderService.getAllIntents()
DEBUG: first.common.logger.LoggerAspect - DAO  		:  first.builder.dao.BuilderDAO.getAllIntents()
DEBUG: first.builder.dao.AbstractDAO - 	 QueryId  	:  builder.getAllIntents
DEBUG: org.mybatis.spring.SqlSessionUtils - Creating a new SqlSession
DEBUG: org.mybatis.spring.SqlSessionUtils - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@26a77b67]
DEBUG: org.mybatis.spring.transaction.SpringManagedTransaction - JDBC Connection [net.sf.log4jdbc.ConnectionSpy@33d48f2a] will be managed by Spring
2024-03-05 04:57:19,610  INFO SQL(simplebot)        :  SELECT I.No, I.Main, I.Name,I.Next, I.URL, I.Language
		FROM Intent I
		WHERE I.Account=1638
		ORDER BY I.No
DEBUG: org.mybatis.spring.SqlSessionUtils - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@26a77b67]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@26a77b67]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@26a77b67]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@26a77b67]
DEBUG: first.common.logger.LoggerAspect - ServiceImpl  	:  first.builder.service.BuilderService.getAllBertIntents()
DEBUG: first.common.logger.LoggerAspect - DAO  		:  first.builder.dao.BuilderDAO.getAllBertIntents()
DEBUG: first.builder.dao.AbstractDAO - 	 QueryId  	:  builder.getAllBertIntents
DEBUG: org.mybatis.spring.SqlSessionUtils - Creating a new SqlSession
DEBUG: org.mybatis.spring.SqlSessionUtils - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@42759bae]
DEBUG: org.mybatis.spring.transaction.SpringManagedTransaction - JDBC Connection [net.sf.log4jdbc.ConnectionSpy@60440e5d] will be managed by Spring
2024-03-05 04:57:19,613  INFO SQL(simplebot)        :  SELECT B.No, B.Name, B.Language
		FROM BertIntent B LEFT OUTER JOIN BackendInfo BI
		ON B.BertItfId = BI.id
		WHERE BI.host=1638
		ORDER BY B.No
DEBUG: org.mybatis.spring.SqlSessionUtils - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@42759bae]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@42759bae]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@42759bae]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@42759bae]
DEBUG: first.common.logger.LoggerAspect - Controller  	:  first.builder.controller.BuilderController.getTask()
DEBUG: first.common.logger.LoggerAspect - ServiceImpl  	:  first.builder.service.BuilderService.getTaskCount()
DEBUG: first.common.logger.LoggerAspect - DAO  		:  first.builder.dao.BuilderDAO.getTaskCount()
DEBUG: first.builder.dao.AbstractDAO - 	 QueryId  	:  builder.getTaskCount
DEBUG: org.mybatis.spring.SqlSessionUtils - Creating a new SqlSession
DEBUG: org.mybatis.spring.SqlSessionUtils - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@26d699dd]
DEBUG: org.mybatis.spring.transaction.SpringManagedTransaction - JDBC Connection [net.sf.log4jdbc.ConnectionSpy@1a2bb268] will be managed by Spring
2024-03-05 04:57:19,822  INFO SQL(simplebot)        :  SELECT COUNT(*) FROM Intent WHERE Account=1637
 and Language=1
DEBUG: org.mybatis.spring.SqlSessionUtils - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@26d699dd]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@26d699dd]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@26d699dd]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@26d699dd]
DEBUG: first.common.logger.LoggerAspect - ServiceImpl  	:  first.builder.service.BuilderService.getAnswerList()
DEBUG: first.common.logger.LoggerAspect - DAO  		:  first.builder.dao.BuilderDAO.getAnswerList()
DEBUG: first.builder.dao.AbstractDAO - 	 QueryId  	:  builder.getAnswerList
DEBUG: org.mybatis.spring.SqlSessionUtils - Creating a new SqlSession
DEBUG: org.mybatis.spring.SqlSessionUtils - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@4669d1eb]
DEBUG: org.mybatis.spring.transaction.SpringManagedTransaction - JDBC Connection [net.sf.log4jdbc.ConnectionSpy@571784a3] will be managed by Spring
2024-03-05 04:57:19,824  INFO SQL(simplebot)        :  SELECT I.No, I.Main, I.Name, A.answer, I.Account
		FROM Intent I LEFT OUTER JOIN Answer A
		ON I.Answer = A.No
		WHERE I.Account=1637
 and I.Language=1
		ORDER BY I.No
		OFFSET 0 ROWS
		FETCH NEXT 15 ROWS ONLY
DEBUG: org.mybatis.spring.SqlSessionUtils - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@4669d1eb]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@4669d1eb]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@4669d1eb]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@4669d1eb]
DEBUG: first.common.logger.LoggerAspect - ServiceImpl  	:  first.builder.service.BuilderService.getAllIntents()
DEBUG: first.common.logger.LoggerAspect - DAO  		:  first.builder.dao.BuilderDAO.getAllIntents()
DEBUG: first.builder.dao.AbstractDAO - 	 QueryId  	:  builder.getAllIntents
DEBUG: org.mybatis.spring.SqlSessionUtils - Creating a new SqlSession
DEBUG: org.mybatis.spring.SqlSessionUtils - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@3066132]
DEBUG: org.mybatis.spring.transaction.SpringManagedTransaction - JDBC Connection [net.sf.log4jdbc.ConnectionSpy@82d5239] will be managed by Spring
2024-03-05 04:57:19,826  INFO SQL(simplebot)        :  SELECT I.No, I.Main, I.Name,I.Next, I.URL, I.Language
		FROM Intent I
		WHERE I.Account=1637
		ORDER BY I.No
DEBUG: org.mybatis.spring.SqlSessionUtils - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@3066132]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@3066132]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@3066132]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@3066132]
DEBUG: first.common.logger.LoggerAspect - ServiceImpl  	:  first.builder.service.BuilderService.getAllBertIntents()
DEBUG: first.common.logger.LoggerAspect - DAO  		:  first.builder.dao.BuilderDAO.getAllBertIntents()
DEBUG: first.builder.dao.AbstractDAO - 	 QueryId  	:  builder.getAllBertIntents
DEBUG: org.mybatis.spring.SqlSessionUtils - Creating a new SqlSession
DEBUG: org.mybatis.spring.SqlSessionUtils - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@323d90c5]
DEBUG: org.mybatis.spring.transaction.SpringManagedTransaction - JDBC Connection [net.sf.log4jdbc.ConnectionSpy@437dbf0e] will be managed by Spring
2024-03-05 04:57:19,829  INFO SQL(simplebot)        :  SELECT B.No, B.Name, B.Language
		FROM BertIntent B LEFT OUTER JOIN BackendInfo BI
		ON B.BertItfId = BI.id
		WHERE BI.host=1637
		ORDER BY B.No
DEBUG: org.mybatis.spring.SqlSessionUtils - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@323d90c5]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@323d90c5]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@323d90c5]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@323d90c5]
DEBUG: first.common.logger.LoggerAspect - Controller  	:  first.builder.controller.BuilderController.getTask()
DEBUG: first.common.logger.LoggerAspect - ServiceImpl  	:  first.builder.service.BuilderService.getTaskCount()
DEBUG: first.common.logger.LoggerAspect - DAO  		:  first.builder.dao.BuilderDAO.getTaskCount()
DEBUG: first.builder.dao.AbstractDAO - 	 QueryId  	:  builder.getTaskCount
DEBUG: org.mybatis.spring.SqlSessionUtils - Creating a new SqlSession
DEBUG: org.mybatis.spring.SqlSessionUtils - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@47a8e7d3]
DEBUG: org.mybatis.spring.transaction.SpringManagedTransaction - JDBC Connection [net.sf.log4jdbc.ConnectionSpy@26bfe0a7] will be managed by Spring
2024-03-05 04:57:20,040  INFO SQL(simplebot)        :  SELECT COUNT(*) FROM Intent WHERE Account=1638
 and Language=1
DEBUG: org.mybatis.spring.SqlSessionUtils - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@47a8e7d3]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@47a8e7d3]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@47a8e7d3]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@47a8e7d3]
DEBUG: first.common.logger.LoggerAspect - ServiceImpl  	:  first.builder.service.BuilderService.getAnswerList()
DEBUG: first.common.logger.LoggerAspect - DAO  		:  first.builder.dao.BuilderDAO.getAnswerList()
DEBUG: first.builder.dao.AbstractDAO - 	 QueryId  	:  builder.getAnswerList
DEBUG: org.mybatis.spring.SqlSessionUtils - Creating a new SqlSession
DEBUG: org.mybatis.spring.SqlSessionUtils - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@5e386130]
DEBUG: org.mybatis.spring.transaction.SpringManagedTransaction - JDBC Connection [net.sf.log4jdbc.ConnectionSpy@59d8b3ae] will be managed by Spring
2024-03-05 04:57:20,043  INFO SQL(simplebot)        :  SELECT I.No, I.Main, I.Name, A.answer, I.Account
		FROM Intent I LEFT OUTER JOIN Answer A
		ON I.Answer = A.No
		WHERE I.Account=1638
 and I.Language=1
		ORDER BY I.No
		OFFSET 0 ROWS
		FETCH NEXT 15 ROWS ONLY
DEBUG: org.mybatis.spring.SqlSessionUtils - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@5e386130]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@5e386130]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@5e386130]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@5e386130]
DEBUG: first.common.logger.LoggerAspect - ServiceImpl  	:  first.builder.service.BuilderService.getAllIntents()
DEBUG: first.common.logger.LoggerAspect - DAO  		:  first.builder.dao.BuilderDAO.getAllIntents()
DEBUG: first.builder.dao.AbstractDAO - 	 QueryId  	:  builder.getAllIntents
DEBUG: org.mybatis.spring.SqlSessionUtils - Creating a new SqlSession
DEBUG: org.mybatis.spring.SqlSessionUtils - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@27d99d97]
DEBUG: org.mybatis.spring.transaction.SpringManagedTransaction - JDBC Connection [net.sf.log4jdbc.ConnectionSpy@3828bbfb] will be managed by Spring
2024-03-05 04:57:20,046  INFO SQL(simplebot)        :  SELECT I.No, I.Main, I.Name,I.Next, I.URL, I.Language
		FROM Intent I
		WHERE I.Account=1638
		ORDER BY I.No
DEBUG: org.mybatis.spring.SqlSessionUtils - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@27d99d97]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@27d99d97]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@27d99d97]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@27d99d97]
DEBUG: first.common.logger.LoggerAspect - ServiceImpl  	:  first.builder.service.BuilderService.getAllBertIntents()
DEBUG: first.common.logger.LoggerAspect - DAO  		:  first.builder.dao.BuilderDAO.getAllBertIntents()
DEBUG: first.builder.dao.AbstractDAO - 	 QueryId  	:  builder.getAllBertIntents
DEBUG: org.mybatis.spring.SqlSessionUtils - Creating a new SqlSession
DEBUG: org.mybatis.spring.SqlSessionUtils - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@7283a8b3]
DEBUG: org.mybatis.spring.transaction.SpringManagedTransaction - JDBC Connection [net.sf.log4jdbc.ConnectionSpy@b0c18f8] will be managed by Spring
2024-03-05 04:57:20,048  INFO SQL(simplebot)        :  SELECT B.No, B.Name, B.Language
		FROM BertIntent B LEFT OUTER JOIN BackendInfo BI
		ON B.BertItfId = BI.id
		WHERE BI.host=1638
		ORDER BY B.No
DEBUG: org.mybatis.spring.SqlSessionUtils - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@7283a8b3]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@7283a8b3]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@7283a8b3]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@7283a8b3]
DEBUG: first.common.logger.LoggerAspect - Controller  	:  first.builder.controller.BuilderController.getTask()
DEBUG: first.common.logger.LoggerAspect - ServiceImpl  	:  first.builder.service.BuilderService.getTaskCount()
DEBUG: first.common.logger.LoggerAspect - DAO  		:  first.builder.dao.BuilderDAO.getTaskCount()
DEBUG: first.builder.dao.AbstractDAO - 	 QueryId  	:  builder.getTaskCount
DEBUG: org.mybatis.spring.SqlSessionUtils - Creating a new SqlSession
DEBUG: org.mybatis.spring.SqlSessionUtils - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@34dcfbf3]
DEBUG: org.mybatis.spring.transaction.SpringManagedTransaction - JDBC Connection [net.sf.log4jdbc.ConnectionSpy@6bb5088e] will be managed by Spring
2024-03-05 04:57:20,251  INFO SQL(simplebot)        :  SELECT COUNT(*) FROM Intent WHERE Account=1637
 and Language=1
DEBUG: org.mybatis.spring.SqlSessionUtils - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@34dcfbf3]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@34dcfbf3]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@34dcfbf3]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@34dcfbf3]
DEBUG: first.common.logger.LoggerAspect - ServiceImpl  	:  first.builder.service.BuilderService.getAnswerList()
DEBUG: first.common.logger.LoggerAspect - DAO  		:  first.builder.dao.BuilderDAO.getAnswerList()
DEBUG: first.builder.dao.AbstractDAO - 	 QueryId  	:  builder.getAnswerList
DEBUG: org.mybatis.spring.SqlSessionUtils - Creating a new SqlSession
DEBUG: org.mybatis.spring.SqlSessionUtils - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@32037094]
DEBUG: org.mybatis.spring.transaction.SpringManagedTransaction - JDBC Connection [net.sf.log4jdbc.ConnectionSpy@1a282a15] will be managed by Spring
2024-03-05 04:57:20,253  INFO SQL(simplebot)        :  SELECT I.No, I.Main, I.Name, A.answer, I.Account
		FROM Intent I LEFT OUTER JOIN Answer A
		ON I.Answer = A.No
		WHERE I.Account=1637
 and I.Language=1
		ORDER BY I.No
		OFFSET 0 ROWS
		FETCH NEXT 15 ROWS ONLY
DEBUG: org.mybatis.spring.SqlSessionUtils - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@32037094]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@32037094]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@32037094]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@32037094]
DEBUG: first.common.logger.LoggerAspect - ServiceImpl  	:  first.builder.service.BuilderService.getAllIntents()
DEBUG: first.common.logger.LoggerAspect - DAO  		:  first.builder.dao.BuilderDAO.getAllIntents()
DEBUG: first.builder.dao.AbstractDAO - 	 QueryId  	:  builder.getAllIntents
DEBUG: org.mybatis.spring.SqlSessionUtils - Creating a new SqlSession
DEBUG: org.mybatis.spring.SqlSessionUtils - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@226869d2]
DEBUG: org.mybatis.spring.transaction.SpringManagedTransaction - JDBC Connection [net.sf.log4jdbc.ConnectionSpy@74580277] will be managed by Spring
2024-03-05 04:57:20,255  INFO SQL(simplebot)        :  SELECT I.No, I.Main, I.Name,I.Next, I.URL, I.Language
		FROM Intent I
		WHERE I.Account=1637
		ORDER BY I.No
DEBUG: org.mybatis.spring.SqlSessionUtils - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@226869d2]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@226869d2]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@226869d2]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@226869d2]
DEBUG: first.common.logger.LoggerAspect - ServiceImpl  	:  first.builder.service.BuilderService.getAllBertIntents()
DEBUG: first.common.logger.LoggerAspect - DAO  		:  first.builder.dao.BuilderDAO.getAllBertIntents()
DEBUG: first.builder.dao.AbstractDAO - 	 QueryId  	:  builder.getAllBertIntents
DEBUG: org.mybatis.spring.SqlSessionUtils - Creating a new SqlSession
DEBUG: org.mybatis.spring.SqlSessionUtils - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@ea7a25d]
DEBUG: org.mybatis.spring.transaction.SpringManagedTransaction - JDBC Connection [net.sf.log4jdbc.ConnectionSpy@f9d49e] will be managed by Spring
2024-03-05 04:57:20,258  INFO SQL(simplebot)        :  SELECT B.No, B.Name, B.Language
		FROM BertIntent B LEFT OUTER JOIN BackendInfo BI
		ON B.BertItfId = BI.id
		WHERE BI.host=1637
		ORDER BY B.No
DEBUG: org.mybatis.spring.SqlSessionUtils - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@ea7a25d]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@ea7a25d]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@ea7a25d]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@ea7a25d]
DEBUG: first.common.logger.LoggerAspect - Controller  	:  first.builder.controller.BuilderController.getTask()
DEBUG: first.common.logger.LoggerAspect - ServiceImpl  	:  first.builder.service.BuilderService.getTaskCount()
DEBUG: first.common.logger.LoggerAspect - DAO  		:  first.builder.dao.BuilderDAO.getTaskCount()
DEBUG: first.builder.dao.AbstractDAO - 	 QueryId  	:  builder.getTaskCount
DEBUG: org.mybatis.spring.SqlSessionUtils - Creating a new SqlSession
DEBUG: org.mybatis.spring.SqlSessionUtils - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@6aa241b2]
DEBUG: org.mybatis.spring.transaction.SpringManagedTransaction - JDBC Connection [net.sf.log4jdbc.ConnectionSpy@54acb355] will be managed by Spring
2024-03-05 04:57:20,460  INFO SQL(simplebot)        :  SELECT COUNT(*) FROM Intent WHERE Account=1638
 and Language=1
DEBUG: org.mybatis.spring.SqlSessionUtils - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@6aa241b2]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@6aa241b2]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@6aa241b2]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@6aa241b2]
DEBUG: first.common.logger.LoggerAspect - ServiceImpl  	:  first.builder.service.BuilderService.getAnswerList()
DEBUG: first.common.logger.LoggerAspect - DAO  		:  first.builder.dao.BuilderDAO.getAnswerList()
DEBUG: first.builder.dao.AbstractDAO - 	 QueryId  	:  builder.getAnswerList
DEBUG: org.mybatis.spring.SqlSessionUtils - Creating a new SqlSession
DEBUG: org.mybatis.spring.SqlSessionUtils - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@393a1c96]
DEBUG: org.mybatis.spring.transaction.SpringManagedTransaction - JDBC Connection [net.sf.log4jdbc.ConnectionSpy@68fc6a25] will be managed by Spring
2024-03-05 04:57:20,462  INFO SQL(simplebot)        :  SELECT I.No, I.Main, I.Name, A.answer, I.Account
		FROM Intent I LEFT OUTER JOIN Answer A
		ON I.Answer = A.No
		WHERE I.Account=1638
 and I.Language=1
		ORDER BY I.No
		OFFSET 0 ROWS
		FETCH NEXT 15 ROWS ONLY
DEBUG: org.mybatis.spring.SqlSessionUtils - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@393a1c96]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@393a1c96]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@393a1c96]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@393a1c96]
DEBUG: first.common.logger.LoggerAspect - ServiceImpl  	:  first.builder.service.BuilderService.getAllIntents()
DEBUG: first.common.logger.LoggerAspect - DAO  		:  first.builder.dao.BuilderDAO.getAllIntents()
DEBUG: first.builder.dao.AbstractDAO - 	 QueryId  	:  builder.getAllIntents
DEBUG: org.mybatis.spring.SqlSessionUtils - Creating a new SqlSession
DEBUG: org.mybatis.spring.SqlSessionUtils - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1154e026]
DEBUG: org.mybatis.spring.transaction.SpringManagedTransaction - JDBC Connection [net.sf.log4jdbc.ConnectionSpy@74b2d3e0] will be managed by Spring
2024-03-05 04:57:20,465  INFO SQL(simplebot)        :  SELECT I.No, I.Main, I.Name,I.Next, I.URL, I.Language
		FROM Intent I
		WHERE I.Account=1638
		ORDER BY I.No
DEBUG: org.mybatis.spring.SqlSessionUtils - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1154e026]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1154e026]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1154e026]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1154e026]
DEBUG: first.common.logger.LoggerAspect - ServiceImpl  	:  first.builder.service.BuilderService.getAllBertIntents()
DEBUG: first.common.logger.LoggerAspect - DAO  		:  first.builder.dao.BuilderDAO.getAllBertIntents()
DEBUG: first.builder.dao.AbstractDAO - 	 QueryId  	:  builder.getAllBertIntents
DEBUG: org.mybatis.spring.SqlSessionUtils - Creating a new SqlSession
DEBUG: org.mybatis.spring.SqlSessionUtils - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@69322284]
DEBUG: org.mybatis.spring.transaction.SpringManagedTransaction - JDBC Connection [net.sf.log4jdbc.ConnectionSpy@2fdad629] will be managed by Spring
2024-03-05 04:57:20,467  INFO SQL(simplebot)        :  SELECT B.No, B.Name, B.Language
		FROM BertIntent B LEFT OUTER JOIN BackendInfo BI
		ON B.BertItfId = BI.id
		WHERE BI.host=1638
		ORDER BY B.No
DEBUG: org.mybatis.spring.SqlSessionUtils - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@69322284]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@69322284]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@69322284]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@69322284]
DEBUG: first.common.logger.LoggerAspect - Controller  	:  first.builder.controller.BuilderController.getTask()
DEBUG: first.common.logger.LoggerAspect - ServiceImpl  	:  first.builder.service.BuilderService.getTaskCount()
DEBUG: first.common.logger.LoggerAspect - DAO  		:  first.builder.dao.BuilderDAO.getTaskCount()
DEBUG: first.builder.dao.AbstractDAO - 	 QueryId  	:  builder.getTaskCount
DEBUG: org.mybatis.spring.SqlSessionUtils - Creating a new SqlSession
DEBUG: org.mybatis.spring.SqlSessionUtils - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@4e72c8f6]
DEBUG: org.mybatis.spring.transaction.SpringManagedTransaction - JDBC Connection [net.sf.log4jdbc.ConnectionSpy@7c8f93b9] will be managed by Spring
2024-03-05 04:57:20,667  INFO SQL(simplebot)        :  SELECT COUNT(*) FROM Intent WHERE Account=1637
 and Language=1
DEBUG: org.mybatis.spring.SqlSessionUtils - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@4e72c8f6]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@4e72c8f6]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@4e72c8f6]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@4e72c8f6]
DEBUG: first.common.logger.LoggerAspect - ServiceImpl  	:  first.builder.service.BuilderService.getAnswerList()
DEBUG: first.common.logger.LoggerAspect - DAO  		:  first.builder.dao.BuilderDAO.getAnswerList()
DEBUG: first.builder.dao.AbstractDAO - 	 QueryId  	:  builder.getAnswerList
DEBUG: org.mybatis.spring.SqlSessionUtils - Creating a new SqlSession
DEBUG: org.mybatis.spring.SqlSessionUtils - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@3c8e3b25]
DEBUG: org.mybatis.spring.transaction.SpringManagedTransaction - JDBC Connection [net.sf.log4jdbc.ConnectionSpy@573a14e1] will be managed by Spring
2024-03-05 04:57:20,670  INFO SQL(simplebot)        :  SELECT I.No, I.Main, I.Name, A.answer, I.Account
		FROM Intent I LEFT OUTER JOIN Answer A
		ON I.Answer = A.No
		WHERE I.Account=1637
 and I.Language=1
		ORDER BY I.No
		OFFSET 0 ROWS
		FETCH NEXT 15 ROWS ONLY
DEBUG: org.mybatis.spring.SqlSessionUtils - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@3c8e3b25]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@3c8e3b25]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@3c8e3b25]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@3c8e3b25]
DEBUG: first.common.logger.LoggerAspect - ServiceImpl  	:  first.builder.service.BuilderService.getAllIntents()
DEBUG: first.common.logger.LoggerAspect - DAO  		:  first.builder.dao.BuilderDAO.getAllIntents()
DEBUG: first.builder.dao.AbstractDAO - 	 QueryId  	:  builder.getAllIntents
DEBUG: org.mybatis.spring.SqlSessionUtils - Creating a new SqlSession
DEBUG: org.mybatis.spring.SqlSessionUtils - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@3e118108]
DEBUG: org.mybatis.spring.transaction.SpringManagedTransaction - JDBC Connection [net.sf.log4jdbc.ConnectionSpy@2b354720] will be managed by Spring
2024-03-05 04:57:20,673  INFO SQL(simplebot)        :  SELECT I.No, I.Main, I.Name,I.Next, I.URL, I.Language
		FROM Intent I
		WHERE I.Account=1637
		ORDER BY I.No
DEBUG: org.mybatis.spring.SqlSessionUtils - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@3e118108]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@3e118108]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@3e118108]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@3e118108]
DEBUG: first.common.logger.LoggerAspect - ServiceImpl  	:  first.builder.service.BuilderService.getAllBertIntents()
DEBUG: first.common.logger.LoggerAspect - DAO  		:  first.builder.dao.BuilderDAO.getAllBertIntents()
DEBUG: first.builder.dao.AbstractDAO - 	 QueryId  	:  builder.getAllBertIntents
DEBUG: org.mybatis.spring.SqlSessionUtils - Creating a new SqlSession
DEBUG: org.mybatis.spring.SqlSessionUtils - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@61fe95b9]
DEBUG: org.mybatis.spring.transaction.SpringManagedTransaction - JDBC Connection [net.sf.log4jdbc.ConnectionSpy@57835f17] will be managed by Spring
2024-03-05 04:57:20,675  INFO SQL(simplebot)        :  SELECT B.No, B.Name, B.Language
		FROM BertIntent B LEFT OUTER JOIN BackendInfo BI
		ON B.BertItfId = BI.id
		WHERE BI.host=1637
		ORDER BY B.No
DEBUG: org.mybatis.spring.SqlSessionUtils - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@61fe95b9]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@61fe95b9]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@61fe95b9]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@61fe95b9]
DEBUG: first.common.logger.LoggerAspect - Controller  	:  first.builder.controller.BuilderController.getTask()
DEBUG: first.common.logger.LoggerAspect - ServiceImpl  	:  first.builder.service.BuilderService.getTaskCount()
DEBUG: first.common.logger.LoggerAspect - DAO  		:  first.builder.dao.BuilderDAO.getTaskCount()
DEBUG: first.builder.dao.AbstractDAO - 	 QueryId  	:  builder.getTaskCount
DEBUG: org.mybatis.spring.SqlSessionUtils - Creating a new SqlSession
DEBUG: org.mybatis.spring.SqlSessionUtils - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@45f4a554]
DEBUG: org.mybatis.spring.transaction.SpringManagedTransaction - JDBC Connection [net.sf.log4jdbc.ConnectionSpy@60ac2fe9] will be managed by Spring
2024-03-05 04:57:20,889  INFO SQL(simplebot)        :  SELECT COUNT(*) FROM Intent WHERE Account=1638
 and Language=1
DEBUG: org.mybatis.spring.SqlSessionUtils - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@45f4a554]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@45f4a554]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@45f4a554]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@45f4a554]
DEBUG: first.common.logger.LoggerAspect - ServiceImpl  	:  first.builder.service.BuilderService.getAnswerList()
DEBUG: first.common.logger.LoggerAspect - DAO  		:  first.builder.dao.BuilderDAO.getAnswerList()
DEBUG: first.builder.dao.AbstractDAO - 	 QueryId  	:  builder.getAnswerList
DEBUG: org.mybatis.spring.SqlSessionUtils - Creating a new SqlSession
DEBUG: org.mybatis.spring.SqlSessionUtils - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@2589ffa8]
DEBUG: org.mybatis.spring.transaction.SpringManagedTransaction - JDBC Connection [net.sf.log4jdbc.ConnectionSpy@74cc2c7d] will be managed by Spring
2024-03-05 04:57:20,891  INFO SQL(simplebot)        :  SELECT I.No, I.Main, I.Name, A.answer, I.Account
		FROM Intent I LEFT OUTER JOIN Answer A
		ON I.Answer = A.No
		WHERE I.Account=1638
 and I.Language=1
		ORDER BY I.No
		OFFSET 0 ROWS
		FETCH NEXT 15 ROWS ONLY
DEBUG: org.mybatis.spring.SqlSessionUtils - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@2589ffa8]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@2589ffa8]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@2589ffa8]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@2589ffa8]
DEBUG: first.common.logger.LoggerAspect - ServiceImpl  	:  first.builder.service.BuilderService.getAllIntents()
DEBUG: first.common.logger.LoggerAspect - DAO  		:  first.builder.dao.BuilderDAO.getAllIntents()
DEBUG: first.builder.dao.AbstractDAO - 	 QueryId  	:  builder.getAllIntents
DEBUG: org.mybatis.spring.SqlSessionUtils - Creating a new SqlSession
DEBUG: org.mybatis.spring.SqlSessionUtils - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@13e9a4a]
DEBUG: org.mybatis.spring.transaction.SpringManagedTransaction - JDBC Connection [net.sf.log4jdbc.ConnectionSpy@1b1c6430] will be managed by Spring
2024-03-05 04:57:20,894  INFO SQL(simplebot)        :  SELECT I.No, I.Main, I.Name,I.Next, I.URL, I.Language
		FROM Intent I
		WHERE I.Account=1638
		ORDER BY I.No
DEBUG: org.mybatis.spring.SqlSessionUtils - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@13e9a4a]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@13e9a4a]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@13e9a4a]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@13e9a4a]
DEBUG: first.common.logger.LoggerAspect - ServiceImpl  	:  first.builder.service.BuilderService.getAllBertIntents()
DEBUG: first.common.logger.LoggerAspect - DAO  		:  first.builder.dao.BuilderDAO.getAllBertIntents()
DEBUG: first.builder.dao.AbstractDAO - 	 QueryId  	:  builder.getAllBertIntents
DEBUG: org.mybatis.spring.SqlSessionUtils - Creating a new SqlSession
DEBUG: org.mybatis.spring.SqlSessionUtils - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@47609ec2]
DEBUG: org.mybatis.spring.transaction.SpringManagedTransaction - JDBC Connection [net.sf.log4jdbc.ConnectionSpy@27e0c561] will be managed by Spring
2024-03-05 04:57:20,896  INFO SQL(simplebot)        :  SELECT B.No, B.Name, B.Language
		FROM BertIntent B LEFT OUTER JOIN BackendInfo BI
		ON B.BertItfId = BI.id
		WHERE BI.host=1638
		ORDER BY B.No
DEBUG: org.mybatis.spring.SqlSessionUtils - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@47609ec2]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@47609ec2]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@47609ec2]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@47609ec2]
DEBUG: first.common.logger.LoggerAspect - Controller  	:  first.builder.controller.BuilderController.getTask()
DEBUG: first.common.logger.LoggerAspect - ServiceImpl  	:  first.builder.service.BuilderService.getTaskCount()
DEBUG: first.common.logger.LoggerAspect - DAO  		:  first.builder.dao.BuilderDAO.getTaskCount()
DEBUG: first.builder.dao.AbstractDAO - 	 QueryId  	:  builder.getTaskCount
DEBUG: org.mybatis.spring.SqlSessionUtils - Creating a new SqlSession
DEBUG: org.mybatis.spring.SqlSessionUtils - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@27264bb2]
DEBUG: org.mybatis.spring.transaction.SpringManagedTransaction - JDBC Connection [net.sf.log4jdbc.ConnectionSpy@4e297c0e] will be managed by Spring
2024-03-05 04:57:21,092  INFO SQL(simplebot)        :  SELECT COUNT(*) FROM Intent WHERE Account=1637
 and Language=1
DEBUG: org.mybatis.spring.SqlSessionUtils - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@27264bb2]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@27264bb2]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@27264bb2]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@27264bb2]
DEBUG: first.common.logger.LoggerAspect - ServiceImpl  	:  first.builder.service.BuilderService.getAnswerList()
DEBUG: first.common.logger.LoggerAspect - DAO  		:  first.builder.dao.BuilderDAO.getAnswerList()
DEBUG: first.builder.dao.AbstractDAO - 	 QueryId  	:  builder.getAnswerList
DEBUG: org.mybatis.spring.SqlSessionUtils - Creating a new SqlSession
DEBUG: org.mybatis.spring.SqlSessionUtils - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@4ea0d100]
DEBUG: org.mybatis.spring.transaction.SpringManagedTransaction - JDBC Connection [net.sf.log4jdbc.ConnectionSpy@323d4033] will be managed by Spring
2024-03-05 04:57:21,094  INFO SQL(simplebot)        :  SELECT I.No, I.Main, I.Name, A.answer, I.Account
		FROM Intent I LEFT OUTER JOIN Answer A
		ON I.Answer = A.No
		WHERE I.Account=1637
 and I.Language=1
		ORDER BY I.No
		OFFSET 0 ROWS
		FETCH NEXT 15 ROWS ONLY
DEBUG: org.mybatis.spring.SqlSessionUtils - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@4ea0d100]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@4ea0d100]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@4ea0d100]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@4ea0d100]
DEBUG: first.common.logger.LoggerAspect - ServiceImpl  	:  first.builder.service.BuilderService.getAllIntents()
DEBUG: first.common.logger.LoggerAspect - DAO  		:  first.builder.dao.BuilderDAO.getAllIntents()
DEBUG: first.builder.dao.AbstractDAO - 	 QueryId  	:  builder.getAllIntents
DEBUG: org.mybatis.spring.SqlSessionUtils - Creating a new SqlSession
DEBUG: org.mybatis.spring.SqlSessionUtils - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@293e0059]
DEBUG: org.mybatis.spring.transaction.SpringManagedTransaction - JDBC Connection [net.sf.log4jdbc.ConnectionSpy@4fbeb59c] will be managed by Spring
2024-03-05 04:57:21,097  INFO SQL(simplebot)        :  SELECT I.No, I.Main, I.Name,I.Next, I.URL, I.Language
		FROM Intent I
		WHERE I.Account=1637
		ORDER BY I.No
DEBUG: org.mybatis.spring.SqlSessionUtils - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@293e0059]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@293e0059]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@293e0059]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@293e0059]
DEBUG: first.common.logger.LoggerAspect - ServiceImpl  	:  first.builder.service.BuilderService.getAllBertIntents()
DEBUG: first.common.logger.LoggerAspect - DAO  		:  first.builder.dao.BuilderDAO.getAllBertIntents()
DEBUG: first.builder.dao.AbstractDAO - 	 QueryId  	:  builder.getAllBertIntents
DEBUG: org.mybatis.spring.SqlSessionUtils - Creating a new SqlSession
DEBUG: org.mybatis.spring.SqlSessionUtils - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@34d32d8e]
DEBUG: org.mybatis.spring.transaction.SpringManagedTransaction - JDBC Connection [net.sf.log4jdbc.ConnectionSpy@1de75dab] will be managed by Spring
2024-03-05 04:57:21,100  INFO SQL(simplebot)        :  SELECT B.No, B.Name, B.Language
		FROM BertIntent B LEFT OUTER JOIN BackendInfo BI
		ON B.BertItfId = BI.id
		WHERE BI.host=1637
		ORDER BY B.No
DEBUG: org.mybatis.spring.SqlSessionUtils - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@34d32d8e]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@34d32d8e]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@34d32d8e]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@34d32d8e]
DEBUG: first.common.logger.LoggerAspect - Controller  	:  first.builder.controller.BuilderController.getTask()
DEBUG: first.common.logger.LoggerAspect - ServiceImpl  	:  first.builder.service.BuilderService.getTaskCount()
DEBUG: first.common.logger.LoggerAspect - DAO  		:  first.builder.dao.BuilderDAO.getTaskCount()
DEBUG: first.builder.dao.AbstractDAO - 	 QueryId  	:  builder.getTaskCount
DEBUG: org.mybatis.spring.SqlSessionUtils - Creating a new SqlSession
DEBUG: org.mybatis.spring.SqlSessionUtils - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@2ceb5c04]
DEBUG: org.mybatis.spring.transaction.SpringManagedTransaction - JDBC Connection [net.sf.log4jdbc.ConnectionSpy@7acf4789] will be managed by Spring
2024-03-05 04:57:21,313  INFO SQL(simplebot)        :  SELECT COUNT(*) FROM Intent WHERE Account=1638
 and Language=1
DEBUG: org.mybatis.spring.SqlSessionUtils - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@2ceb5c04]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@2ceb5c04]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@2ceb5c04]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@2ceb5c04]
DEBUG: first.common.logger.LoggerAspect - ServiceImpl  	:  first.builder.service.BuilderService.getAnswerList()
DEBUG: first.common.logger.LoggerAspect - DAO  		:  first.builder.dao.BuilderDAO.getAnswerList()
DEBUG: first.builder.dao.AbstractDAO - 	 QueryId  	:  builder.getAnswerList
DEBUG: org.mybatis.spring.SqlSessionUtils - Creating a new SqlSession
DEBUG: org.mybatis.spring.SqlSessionUtils - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@27ba7459]
DEBUG: org.mybatis.spring.transaction.SpringManagedTransaction - JDBC Connection [net.sf.log4jdbc.ConnectionSpy@113de13d] will be managed by Spring
2024-03-05 04:57:21,315  INFO SQL(simplebot)        :  SELECT I.No, I.Main, I.Name, A.answer, I.Account
		FROM Intent I LEFT OUTER JOIN Answer A
		ON I.Answer = A.No
		WHERE I.Account=1638
 and I.Language=1
		ORDER BY I.No
		OFFSET 0 ROWS
		FETCH NEXT 15 ROWS ONLY
DEBUG: org.mybatis.spring.SqlSessionUtils - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@27ba7459]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@27ba7459]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@27ba7459]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@27ba7459]
DEBUG: first.common.logger.LoggerAspect - ServiceImpl  	:  first.builder.service.BuilderService.getAllIntents()
DEBUG: first.common.logger.LoggerAspect - DAO  		:  first.builder.dao.BuilderDAO.getAllIntents()
DEBUG: first.builder.dao.AbstractDAO - 	 QueryId  	:  builder.getAllIntents
DEBUG: org.mybatis.spring.SqlSessionUtils - Creating a new SqlSession
DEBUG: org.mybatis.spring.SqlSessionUtils - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@73e56110]
DEBUG: org.mybatis.spring.transaction.SpringManagedTransaction - JDBC Connection [net.sf.log4jdbc.ConnectionSpy@dcf351d] will be managed by Spring
2024-03-05 04:57:21,318  INFO SQL(simplebot)        :  SELECT I.No, I.Main, I.Name,I.Next, I.URL, I.Language
		FROM Intent I
		WHERE I.Account=1638
		ORDER BY I.No
DEBUG: org.mybatis.spring.SqlSessionUtils - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@73e56110]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@73e56110]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@73e56110]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@73e56110]
DEBUG: first.common.logger.LoggerAspect - ServiceImpl  	:  first.builder.service.BuilderService.getAllBertIntents()
DEBUG: first.common.logger.LoggerAspect - DAO  		:  first.builder.dao.BuilderDAO.getAllBertIntents()
DEBUG: first.builder.dao.AbstractDAO - 	 QueryId  	:  builder.getAllBertIntents
DEBUG: org.mybatis.spring.SqlSessionUtils - Creating a new SqlSession
DEBUG: org.mybatis.spring.SqlSessionUtils - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@2b2e1369]
DEBUG: org.mybatis.spring.transaction.SpringManagedTransaction - JDBC Connection [net.sf.log4jdbc.ConnectionSpy@30447235] will be managed by Spring
2024-03-05 04:57:21,320  INFO SQL(simplebot)        :  SELECT B.No, B.Name, B.Language
		FROM BertIntent B LEFT OUTER JOIN BackendInfo BI
		ON B.BertItfId = BI.id
		WHERE BI.host=1638
		ORDER BY B.No
DEBUG: org.mybatis.spring.SqlSessionUtils - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@2b2e1369]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@2b2e1369]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@2b2e1369]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@2b2e1369]
DEBUG: first.common.logger.LoggerAspect - Controller  	:  first.builder.controller.BuilderController.getTask()
DEBUG: first.common.logger.LoggerAspect - ServiceImpl  	:  first.builder.service.BuilderService.getTaskCount()
DEBUG: first.common.logger.LoggerAspect - DAO  		:  first.builder.dao.BuilderDAO.getTaskCount()
DEBUG: first.builder.dao.AbstractDAO - 	 QueryId  	:  builder.getTaskCount
DEBUG: org.mybatis.spring.SqlSessionUtils - Creating a new SqlSession
DEBUG: org.mybatis.spring.SqlSessionUtils - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@54ad2657]
DEBUG: org.mybatis.spring.transaction.SpringManagedTransaction - JDBC Connection [net.sf.log4jdbc.ConnectionSpy@2099bc23] will be managed by Spring
2024-03-05 04:57:21,548  INFO SQL(simplebot)        :  SELECT COUNT(*) FROM Intent WHERE Account=1637
 and Language=1
DEBUG: org.mybatis.spring.SqlSessionUtils - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@54ad2657]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@54ad2657]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@54ad2657]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@54ad2657]
DEBUG: first.common.logger.LoggerAspect - ServiceImpl  	:  first.builder.service.BuilderService.getAnswerList()
DEBUG: first.common.logger.LoggerAspect - DAO  		:  first.builder.dao.BuilderDAO.getAnswerList()
DEBUG: first.builder.dao.AbstractDAO - 	 QueryId  	:  builder.getAnswerList
DEBUG: org.mybatis.spring.SqlSessionUtils - Creating a new SqlSession
DEBUG: org.mybatis.spring.SqlSessionUtils - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@22c494be]
DEBUG: org.mybatis.spring.transaction.SpringManagedTransaction - JDBC Connection [net.sf.log4jdbc.ConnectionSpy@219f3e19] will be managed by Spring
2024-03-05 04:57:21,550  INFO SQL(simplebot)        :  SELECT I.No, I.Main, I.Name, A.answer, I.Account
		FROM Intent I LEFT OUTER JOIN Answer A
		ON I.Answer = A.No
		WHERE I.Account=1637
 and I.Language=1
		ORDER BY I.No
		OFFSET 0 ROWS
		FETCH NEXT 15 ROWS ONLY
DEBUG: org.mybatis.spring.SqlSessionUtils - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@22c494be]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@22c494be]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@22c494be]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@22c494be]
DEBUG: first.common.logger.LoggerAspect - ServiceImpl  	:  first.builder.service.BuilderService.getAllIntents()
DEBUG: first.common.logger.LoggerAspect - DAO  		:  first.builder.dao.BuilderDAO.getAllIntents()
DEBUG: first.builder.dao.AbstractDAO - 	 QueryId  	:  builder.getAllIntents
DEBUG: org.mybatis.spring.SqlSessionUtils - Creating a new SqlSession
DEBUG: org.mybatis.spring.SqlSessionUtils - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@2e7535a5]
DEBUG: org.mybatis.spring.transaction.SpringManagedTransaction - JDBC Connection [net.sf.log4jdbc.ConnectionSpy@597be58d] will be managed by Spring
2024-03-05 04:57:21,553  INFO SQL(simplebot)        :  SELECT I.No, I.Main, I.Name,I.Next, I.URL, I.Language
		FROM Intent I
		WHERE I.Account=1637
		ORDER BY I.No
DEBUG: org.mybatis.spring.SqlSessionUtils - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@2e7535a5]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@2e7535a5]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@2e7535a5]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@2e7535a5]
DEBUG: first.common.logger.LoggerAspect - ServiceImpl  	:  first.builder.service.BuilderService.getAllBertIntents()
DEBUG: first.common.logger.LoggerAspect - DAO  		:  first.builder.dao.BuilderDAO.getAllBertIntents()
DEBUG: first.builder.dao.AbstractDAO - 	 QueryId  	:  builder.getAllBertIntents
DEBUG: org.mybatis.spring.SqlSessionUtils - Creating a new SqlSession
DEBUG: org.mybatis.spring.SqlSessionUtils - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@11636f2c]
DEBUG: org.mybatis.spring.transaction.SpringManagedTransaction - JDBC Connection [net.sf.log4jdbc.ConnectionSpy@36111400] will be managed by Spring
2024-03-05 04:57:21,555  INFO SQL(simplebot)        :  SELECT B.No, B.Name, B.Language
		FROM BertIntent B LEFT OUTER JOIN BackendInfo BI
		ON B.BertItfId = BI.id
		WHERE BI.host=1637
		ORDER BY B.No
DEBUG: org.mybatis.spring.SqlSessionUtils - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@11636f2c]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@11636f2c]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@11636f2c]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@11636f2c]
DEBUG: first.common.logger.LoggerAspect - Controller  	:  first.builder.controller.BuilderController.getTask()
DEBUG: first.common.logger.LoggerAspect - ServiceImpl  	:  first.builder.service.BuilderService.getTaskCount()
DEBUG: first.common.logger.LoggerAspect - DAO  		:  first.builder.dao.BuilderDAO.getTaskCount()
DEBUG: first.builder.dao.AbstractDAO - 	 QueryId  	:  builder.getTaskCount
DEBUG: org.mybatis.spring.SqlSessionUtils - Creating a new SqlSession
DEBUG: org.mybatis.spring.SqlSessionUtils - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@78794a38]
DEBUG: org.mybatis.spring.transaction.SpringManagedTransaction - JDBC Connection [net.sf.log4jdbc.ConnectionSpy@3c720587] will be managed by Spring
2024-03-05 04:57:21,778  INFO SQL(simplebot)        :  SELECT COUNT(*) FROM Intent WHERE Account=1638
 and Language=1
DEBUG: org.mybatis.spring.SqlSessionUtils - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@78794a38]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@78794a38]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@78794a38]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@78794a38]
DEBUG: first.common.logger.LoggerAspect - ServiceImpl  	:  first.builder.service.BuilderService.getAnswerList()
DEBUG: first.common.logger.LoggerAspect - DAO  		:  first.builder.dao.BuilderDAO.getAnswerList()
DEBUG: first.builder.dao.AbstractDAO - 	 QueryId  	:  builder.getAnswerList
DEBUG: org.mybatis.spring.SqlSessionUtils - Creating a new SqlSession
DEBUG: org.mybatis.spring.SqlSessionUtils - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@308b155e]
DEBUG: org.mybatis.spring.transaction.SpringManagedTransaction - JDBC Connection [net.sf.log4jdbc.ConnectionSpy@24d284b7] will be managed by Spring
2024-03-05 04:57:21,781  INFO SQL(simplebot)        :  SELECT I.No, I.Main, I.Name, A.answer, I.Account
		FROM Intent I LEFT OUTER JOIN Answer A
		ON I.Answer = A.No
		WHERE I.Account=1638
 and I.Language=1
		ORDER BY I.No
		OFFSET 0 ROWS
		FETCH NEXT 15 ROWS ONLY
DEBUG: org.mybatis.spring.SqlSessionUtils - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@308b155e]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@308b155e]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@308b155e]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@308b155e]
DEBUG: first.common.logger.LoggerAspect - ServiceImpl  	:  first.builder.service.BuilderService.getAllIntents()
DEBUG: first.common.logger.LoggerAspect - DAO  		:  first.builder.dao.BuilderDAO.getAllIntents()
DEBUG: first.builder.dao.AbstractDAO - 	 QueryId  	:  builder.getAllIntents
DEBUG: org.mybatis.spring.SqlSessionUtils - Creating a new SqlSession
DEBUG: org.mybatis.spring.SqlSessionUtils - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@398852c8]
DEBUG: org.mybatis.spring.transaction.SpringManagedTransaction - JDBC Connection [net.sf.log4jdbc.ConnectionSpy@419682a8] will be managed by Spring
2024-03-05 04:57:21,783  INFO SQL(simplebot)        :  SELECT I.No, I.Main, I.Name,I.Next, I.URL, I.Language
		FROM Intent I
		WHERE I.Account=1638
		ORDER BY I.No
DEBUG: org.mybatis.spring.SqlSessionUtils - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@398852c8]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@398852c8]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@398852c8]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@398852c8]
DEBUG: first.common.logger.LoggerAspect - ServiceImpl  	:  first.builder.service.BuilderService.getAllBertIntents()
DEBUG: first.common.logger.LoggerAspect - DAO  		:  first.builder.dao.BuilderDAO.getAllBertIntents()
DEBUG: first.builder.dao.AbstractDAO - 	 QueryId  	:  builder.getAllBertIntents
DEBUG: org.mybatis.spring.SqlSessionUtils - Creating a new SqlSession
DEBUG: org.mybatis.spring.SqlSessionUtils - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@4664925e]
DEBUG: org.mybatis.spring.transaction.SpringManagedTransaction - JDBC Connection [net.sf.log4jdbc.ConnectionSpy@6d7cadbf] will be managed by Spring
2024-03-05 04:57:21,785  INFO SQL(simplebot)        :  SELECT B.No, B.Name, B.Language
		FROM BertIntent B LEFT OUTER JOIN BackendInfo BI
		ON B.BertItfId = BI.id
		WHERE BI.host=1638
		ORDER BY B.No
DEBUG: org.mybatis.spring.SqlSessionUtils - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@4664925e]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@4664925e]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@4664925e]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@4664925e]
DEBUG: first.common.logger.LoggerAspect - Controller  	:  first.builder.controller.BuilderController.getTask()
DEBUG: first.common.logger.LoggerAspect - ServiceImpl  	:  first.builder.service.BuilderService.getTaskCount()
DEBUG: first.common.logger.LoggerAspect - DAO  		:  first.builder.dao.BuilderDAO.getTaskCount()
DEBUG: first.builder.dao.AbstractDAO - 	 QueryId  	:  builder.getTaskCount
DEBUG: org.mybatis.spring.SqlSessionUtils - Creating a new SqlSession
DEBUG: org.mybatis.spring.SqlSessionUtils - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@3992e552]
DEBUG: org.mybatis.spring.transaction.SpringManagedTransaction - JDBC Connection [net.sf.log4jdbc.ConnectionSpy@66325757] will be managed by Spring
2024-03-05 04:57:22,754  INFO SQL(simplebot)        :  SELECT COUNT(*) FROM Intent WHERE Account=1637
 and Language=1
DEBUG: org.mybatis.spring.SqlSessionUtils - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@3992e552]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@3992e552]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@3992e552]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@3992e552]
DEBUG: first.common.logger.LoggerAspect - ServiceImpl  	:  first.builder.service.BuilderService.getAnswerList()
DEBUG: first.common.logger.LoggerAspect - DAO  		:  first.builder.dao.BuilderDAO.getAnswerList()
DEBUG: first.builder.dao.AbstractDAO - 	 QueryId  	:  builder.getAnswerList
DEBUG: org.mybatis.spring.SqlSessionUtils - Creating a new SqlSession
DEBUG: org.mybatis.spring.SqlSessionUtils - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@291544d4]
DEBUG: org.mybatis.spring.transaction.SpringManagedTransaction - JDBC Connection [net.sf.log4jdbc.ConnectionSpy@67f75c08] will be managed by Spring
2024-03-05 04:57:22,757  INFO SQL(simplebot)        :  SELECT I.No, I.Main, I.Name, A.answer, I.Account
		FROM Intent I LEFT OUTER JOIN Answer A
		ON I.Answer = A.No
		WHERE I.Account=1637
 and I.Language=1
		ORDER BY I.No
		OFFSET 0 ROWS
		FETCH NEXT 15 ROWS ONLY
DEBUG: org.mybatis.spring.SqlSessionUtils - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@291544d4]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@291544d4]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@291544d4]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@291544d4]
DEBUG: first.common.logger.LoggerAspect - ServiceImpl  	:  first.builder.service.BuilderService.getAllIntents()
DEBUG: first.common.logger.LoggerAspect - DAO  		:  first.builder.dao.BuilderDAO.getAllIntents()
DEBUG: first.builder.dao.AbstractDAO - 	 QueryId  	:  builder.getAllIntents
DEBUG: org.mybatis.spring.SqlSessionUtils - Creating a new SqlSession
DEBUG: org.mybatis.spring.SqlSessionUtils - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@5599172d]
DEBUG: org.mybatis.spring.transaction.SpringManagedTransaction - JDBC Connection [net.sf.log4jdbc.ConnectionSpy@974b0] will be managed by Spring
2024-03-05 04:57:22,759  INFO SQL(simplebot)        :  SELECT I.No, I.Main, I.Name,I.Next, I.URL, I.Language
		FROM Intent I
		WHERE I.Account=1637
		ORDER BY I.No
DEBUG: org.mybatis.spring.SqlSessionUtils - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@5599172d]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@5599172d]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@5599172d]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@5599172d]
DEBUG: first.common.logger.LoggerAspect - ServiceImpl  	:  first.builder.service.BuilderService.getAllBertIntents()
DEBUG: first.common.logger.LoggerAspect - DAO  		:  first.builder.dao.BuilderDAO.getAllBertIntents()
DEBUG: first.builder.dao.AbstractDAO - 	 QueryId  	:  builder.getAllBertIntents
DEBUG: org.mybatis.spring.SqlSessionUtils - Creating a new SqlSession
DEBUG: org.mybatis.spring.SqlSessionUtils - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@32990e9]
DEBUG: org.mybatis.spring.transaction.SpringManagedTransaction - JDBC Connection [net.sf.log4jdbc.ConnectionSpy@1b94837b] will be managed by Spring
2024-03-05 04:57:22,762  INFO SQL(simplebot)        :  SELECT B.No, B.Name, B.Language
		FROM BertIntent B LEFT OUTER JOIN BackendInfo BI
		ON B.BertItfId = BI.id
		WHERE BI.host=1637
		ORDER BY B.No
DEBUG: org.mybatis.spring.SqlSessionUtils - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@32990e9]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@32990e9]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@32990e9]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@32990e9]
DEBUG: first.common.logger.LoggerAspect - Controller  	:  first.builder.controller.BuilderController.chatbotBuilderCommon()
DEBUG: first.common.logger.LoggerAspect - Controller  	:  first.builder.controller.BuilderController.getChatList()
DEBUG: first.common.logger.LoggerAspect - ServiceImpl  	:  first.builder.service.BuilderService.getChatbotList()
DEBUG: first.common.logger.LoggerAspect - DAO  		:  first.builder.dao.BuilderDAO.getChatbotList()
DEBUG: first.builder.dao.AbstractDAO - 	 QueryId  	:  builder.getChatbotList
DEBUG: org.mybatis.spring.SqlSessionUtils - Creating a new SqlSession
DEBUG: org.mybatis.spring.SqlSessionUtils - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@66a6da32]
DEBUG: org.mybatis.spring.transaction.SpringManagedTransaction - JDBC Connection [net.sf.log4jdbc.ConnectionSpy@7bddc823] will be managed by Spring
2024-03-05 04:57:25,934  INFO SQL(simplebot)        :  SELECT  /* No, Name, Host, Language */
			*
		from Account WHERE 1=1
		AND No IN
		 
				 (  
					'1637'
				 , 
					'1638'
				 ) 
			 

		 
		ORDER BY No
DEBUG: org.mybatis.spring.SqlSessionUtils - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@66a6da32]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@66a6da32]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@66a6da32]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@66a6da32]
DEBUG: first.common.logger.LoggerAspect - Controller  	:  first.builder.controller.BuilderController.builderContentsAnswer()
DEBUG: first.common.logger.LoggerAspect - Controller  	:  first.builder.controller.BuilderController.builderBottomAnswer()
DEBUG: first.common.logger.LoggerAspect - Controller  	:  first.builder.controller.BuilderController.getTask()
DEBUG: first.common.logger.LoggerAspect - ServiceImpl  	:  first.builder.service.BuilderService.getTaskCount()
DEBUG: first.common.logger.LoggerAspect - DAO  		:  first.builder.dao.BuilderDAO.getTaskCount()
DEBUG: first.builder.dao.AbstractDAO - 	 QueryId  	:  builder.getTaskCount
DEBUG: org.mybatis.spring.SqlSessionUtils - Creating a new SqlSession
DEBUG: org.mybatis.spring.SqlSessionUtils - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@6ce00ac7]
DEBUG: org.mybatis.spring.transaction.SpringManagedTransaction - JDBC Connection [net.sf.log4jdbc.ConnectionSpy@7e0dc84b] will be managed by Spring
2024-03-05 04:57:25,977  INFO SQL(simplebot)        :  SELECT COUNT(*) FROM Intent WHERE Account=1637
 and Language=1
DEBUG: org.mybatis.spring.SqlSessionUtils - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@6ce00ac7]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@6ce00ac7]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@6ce00ac7]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@6ce00ac7]
DEBUG: first.common.logger.LoggerAspect - ServiceImpl  	:  first.builder.service.BuilderService.getAnswerList()
DEBUG: first.common.logger.LoggerAspect - DAO  		:  first.builder.dao.BuilderDAO.getAnswerList()
DEBUG: first.builder.dao.AbstractDAO - 	 QueryId  	:  builder.getAnswerList
DEBUG: org.mybatis.spring.SqlSessionUtils - Creating a new SqlSession
DEBUG: org.mybatis.spring.SqlSessionUtils - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@7aadebb7]
DEBUG: org.mybatis.spring.transaction.SpringManagedTransaction - JDBC Connection [net.sf.log4jdbc.ConnectionSpy@4d2e870e] will be managed by Spring
2024-03-05 04:57:25,979  INFO SQL(simplebot)        :  SELECT I.No, I.Main, I.Name, A.answer, I.Account
		FROM Intent I LEFT OUTER JOIN Answer A
		ON I.Answer = A.No
		WHERE I.Account=1637
 and I.Language=1
		ORDER BY I.No
		OFFSET 0 ROWS
		FETCH NEXT 15 ROWS ONLY
DEBUG: org.mybatis.spring.SqlSessionUtils - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@7aadebb7]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@7aadebb7]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@7aadebb7]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@7aadebb7]
DEBUG: first.common.logger.LoggerAspect - ServiceImpl  	:  first.builder.service.BuilderService.getAllIntents()
DEBUG: first.common.logger.LoggerAspect - DAO  		:  first.builder.dao.BuilderDAO.getAllIntents()
DEBUG: first.builder.dao.AbstractDAO - 	 QueryId  	:  builder.getAllIntents
DEBUG: org.mybatis.spring.SqlSessionUtils - Creating a new SqlSession
DEBUG: org.mybatis.spring.SqlSessionUtils - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@5c6db59a]
DEBUG: org.mybatis.spring.transaction.SpringManagedTransaction - JDBC Connection [net.sf.log4jdbc.ConnectionSpy@7b89a3da] will be managed by Spring
2024-03-05 04:57:25,982  INFO SQL(simplebot)        :  SELECT I.No, I.Main, I.Name,I.Next, I.URL, I.Language
		FROM Intent I
		WHERE I.Account=1637
		ORDER BY I.No
DEBUG: org.mybatis.spring.SqlSessionUtils - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@5c6db59a]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@5c6db59a]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@5c6db59a]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@5c6db59a]
DEBUG: first.common.logger.LoggerAspect - ServiceImpl  	:  first.builder.service.BuilderService.getAllBertIntents()
DEBUG: first.common.logger.LoggerAspect - DAO  		:  first.builder.dao.BuilderDAO.getAllBertIntents()
DEBUG: first.builder.dao.AbstractDAO - 	 QueryId  	:  builder.getAllBertIntents
DEBUG: org.mybatis.spring.SqlSessionUtils - Creating a new SqlSession
DEBUG: org.mybatis.spring.SqlSessionUtils - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@cfcc5b7]
DEBUG: org.mybatis.spring.transaction.SpringManagedTransaction - JDBC Connection [net.sf.log4jdbc.ConnectionSpy@6ee5e6ff] will be managed by Spring
2024-03-05 04:57:25,985  INFO SQL(simplebot)        :  SELECT B.No, B.Name, B.Language
		FROM BertIntent B LEFT OUTER JOIN BackendInfo BI
		ON B.BertItfId = BI.id
		WHERE BI.host=1637
		ORDER BY B.No
DEBUG: org.mybatis.spring.SqlSessionUtils - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@cfcc5b7]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@cfcc5b7]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@cfcc5b7]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@cfcc5b7]
DEBUG: first.common.logger.LoggerAspect - Controller  	:  first.builder.controller.BuilderController.getTask()
DEBUG: first.common.logger.LoggerAspect - ServiceImpl  	:  first.builder.service.BuilderService.getTaskCount()
DEBUG: first.common.logger.LoggerAspect - DAO  		:  first.builder.dao.BuilderDAO.getTaskCount()
DEBUG: first.builder.dao.AbstractDAO - 	 QueryId  	:  builder.getTaskCount
DEBUG: org.mybatis.spring.SqlSessionUtils - Creating a new SqlSession
DEBUG: org.mybatis.spring.SqlSessionUtils - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@213173c1]
DEBUG: org.mybatis.spring.transaction.SpringManagedTransaction - JDBC Connection [net.sf.log4jdbc.ConnectionSpy@7b2dc573] will be managed by Spring
2024-03-05 04:57:26,071  INFO SQL(simplebot)        :  SELECT COUNT(*) FROM Intent WHERE Account=1637
 and Language=1
DEBUG: org.mybatis.spring.SqlSessionUtils - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@213173c1]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@213173c1]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@213173c1]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@213173c1]
DEBUG: first.common.logger.LoggerAspect - ServiceImpl  	:  first.builder.service.BuilderService.getAnswerList()
DEBUG: first.common.logger.LoggerAspect - DAO  		:  first.builder.dao.BuilderDAO.getAnswerList()
DEBUG: first.builder.dao.AbstractDAO - 	 QueryId  	:  builder.getAnswerList
DEBUG: org.mybatis.spring.SqlSessionUtils - Creating a new SqlSession
DEBUG: org.mybatis.spring.SqlSessionUtils - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@7ec8fc26]
DEBUG: org.mybatis.spring.transaction.SpringManagedTransaction - JDBC Connection [net.sf.log4jdbc.ConnectionSpy@42ab8ef1] will be managed by Spring
2024-03-05 04:57:26,074  INFO SQL(simplebot)        :  SELECT I.No, I.Main, I.Name, A.answer, I.Account
		FROM Intent I LEFT OUTER JOIN Answer A
		ON I.Answer = A.No
		WHERE I.Account=1637
 and I.Language=1
		ORDER BY I.No
		OFFSET 0 ROWS
		FETCH NEXT 15 ROWS ONLY
DEBUG: org.mybatis.spring.SqlSessionUtils - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@7ec8fc26]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@7ec8fc26]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@7ec8fc26]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@7ec8fc26]
DEBUG: first.common.logger.LoggerAspect - ServiceImpl  	:  first.builder.service.BuilderService.getAllIntents()
DEBUG: first.common.logger.LoggerAspect - DAO  		:  first.builder.dao.BuilderDAO.getAllIntents()
DEBUG: first.builder.dao.AbstractDAO - 	 QueryId  	:  builder.getAllIntents
DEBUG: org.mybatis.spring.SqlSessionUtils - Creating a new SqlSession
DEBUG: org.mybatis.spring.SqlSessionUtils - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1ec08367]
DEBUG: org.mybatis.spring.transaction.SpringManagedTransaction - JDBC Connection [net.sf.log4jdbc.ConnectionSpy@43ae1f6e] will be managed by Spring
2024-03-05 04:57:26,077  INFO SQL(simplebot)        :  SELECT I.No, I.Main, I.Name,I.Next, I.URL, I.Language
		FROM Intent I
		WHERE I.Account=1637
		ORDER BY I.No
DEBUG: org.mybatis.spring.SqlSessionUtils - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1ec08367]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1ec08367]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1ec08367]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1ec08367]
DEBUG: first.common.logger.LoggerAspect - ServiceImpl  	:  first.builder.service.BuilderService.getAllBertIntents()
DEBUG: first.common.logger.LoggerAspect - DAO  		:  first.builder.dao.BuilderDAO.getAllBertIntents()
DEBUG: first.builder.dao.AbstractDAO - 	 QueryId  	:  builder.getAllBertIntents
DEBUG: org.mybatis.spring.SqlSessionUtils - Creating a new SqlSession
DEBUG: org.mybatis.spring.SqlSessionUtils - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@7c7a9e6f]
DEBUG: org.mybatis.spring.transaction.SpringManagedTransaction - JDBC Connection [net.sf.log4jdbc.ConnectionSpy@78435ad4] will be managed by Spring
2024-03-05 04:57:26,080  INFO SQL(simplebot)        :  SELECT B.No, B.Name, B.Language
		FROM BertIntent B LEFT OUTER JOIN BackendInfo BI
		ON B.BertItfId = BI.id
		WHERE BI.host=1637
		ORDER BY B.No
DEBUG: org.mybatis.spring.SqlSessionUtils - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@7c7a9e6f]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@7c7a9e6f]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@7c7a9e6f]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@7c7a9e6f]
DEBUG: first.common.logger.LoggerAspect - Controller  	:  first.builder.controller.BuilderController.chatbotBuilderCommon()
DEBUG: first.common.logger.LoggerAspect - Controller  	:  first.builder.controller.BuilderController.getChatList()
DEBUG: first.common.logger.LoggerAspect - ServiceImpl  	:  first.builder.service.BuilderService.getChatbotList()
DEBUG: first.common.logger.LoggerAspect - DAO  		:  first.builder.dao.BuilderDAO.getChatbotList()
DEBUG: first.builder.dao.AbstractDAO - 	 QueryId  	:  builder.getChatbotList
DEBUG: org.mybatis.spring.SqlSessionUtils - Creating a new SqlSession
DEBUG: org.mybatis.spring.SqlSessionUtils - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@6572619b]
DEBUG: org.mybatis.spring.transaction.SpringManagedTransaction - JDBC Connection [net.sf.log4jdbc.ConnectionSpy@1ece3faf] will be managed by Spring
2024-03-05 04:57:29,410  INFO SQL(simplebot)        :  SELECT  /* No, Name, Host, Language */
			*
		from Account WHERE 1=1
		AND No IN
		 
				 (  
					'1637'
				 , 
					'1638'
				 ) 
			 

		 
		ORDER BY No
DEBUG: org.mybatis.spring.SqlSessionUtils - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@6572619b]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@6572619b]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@6572619b]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@6572619b]
DEBUG: first.common.logger.LoggerAspect - Controller  	:  first.builder.controller.BuilderController.builderContentsAnswer()
DEBUG: first.common.logger.LoggerAspect - Controller  	:  first.builder.controller.BuilderController.builderBottomAnswer()
DEBUG: first.common.logger.LoggerAspect - Controller  	:  first.builder.controller.BuilderController.getTask()
DEBUG: first.common.logger.LoggerAspect - ServiceImpl  	:  first.builder.service.BuilderService.getTaskCount()
DEBUG: first.common.logger.LoggerAspect - DAO  		:  first.builder.dao.BuilderDAO.getTaskCount()
DEBUG: first.builder.dao.AbstractDAO - 	 QueryId  	:  builder.getTaskCount
DEBUG: org.mybatis.spring.SqlSessionUtils - Creating a new SqlSession
DEBUG: org.mybatis.spring.SqlSessionUtils - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@2e9da83]
DEBUG: org.mybatis.spring.transaction.SpringManagedTransaction - JDBC Connection [net.sf.log4jdbc.ConnectionSpy@29f9e164] will be managed by Spring
2024-03-05 04:57:29,461  INFO SQL(simplebot)        :  SELECT COUNT(*) FROM Intent WHERE Account=1637
 and Language=1
DEBUG: org.mybatis.spring.SqlSessionUtils - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@2e9da83]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@2e9da83]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@2e9da83]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@2e9da83]
DEBUG: first.common.logger.LoggerAspect - ServiceImpl  	:  first.builder.service.BuilderService.getAnswerList()
DEBUG: first.common.logger.LoggerAspect - DAO  		:  first.builder.dao.BuilderDAO.getAnswerList()
DEBUG: first.builder.dao.AbstractDAO - 	 QueryId  	:  builder.getAnswerList
DEBUG: org.mybatis.spring.SqlSessionUtils - Creating a new SqlSession
DEBUG: org.mybatis.spring.SqlSessionUtils - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@7a39fdd]
DEBUG: org.mybatis.spring.transaction.SpringManagedTransaction - JDBC Connection [net.sf.log4jdbc.ConnectionSpy@593f82ee] will be managed by Spring
2024-03-05 04:57:29,464  INFO SQL(simplebot)        :  SELECT I.No, I.Main, I.Name, A.answer, I.Account
		FROM Intent I LEFT OUTER JOIN Answer A
		ON I.Answer = A.No
		WHERE I.Account=1637
 and I.Language=1
		ORDER BY I.No
		OFFSET 0 ROWS
		FETCH NEXT 15 ROWS ONLY
DEBUG: org.mybatis.spring.SqlSessionUtils - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@7a39fdd]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@7a39fdd]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@7a39fdd]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@7a39fdd]
DEBUG: first.common.logger.LoggerAspect - ServiceImpl  	:  first.builder.service.BuilderService.getAllIntents()
DEBUG: first.common.logger.LoggerAspect - DAO  		:  first.builder.dao.BuilderDAO.getAllIntents()
DEBUG: first.builder.dao.AbstractDAO - 	 QueryId  	:  builder.getAllIntents
DEBUG: org.mybatis.spring.SqlSessionUtils - Creating a new SqlSession
DEBUG: org.mybatis.spring.SqlSessionUtils - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@7fa3dc1d]
DEBUG: org.mybatis.spring.transaction.SpringManagedTransaction - JDBC Connection [net.sf.log4jdbc.ConnectionSpy@91809c5] will be managed by Spring
2024-03-05 04:57:29,466  INFO SQL(simplebot)        :  SELECT I.No, I.Main, I.Name,I.Next, I.URL, I.Language
		FROM Intent I
		WHERE I.Account=1637
		ORDER BY I.No
DEBUG: org.mybatis.spring.SqlSessionUtils - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@7fa3dc1d]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@7fa3dc1d]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@7fa3dc1d]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@7fa3dc1d]
DEBUG: first.common.logger.LoggerAspect - ServiceImpl  	:  first.builder.service.BuilderService.getAllBertIntents()
DEBUG: first.common.logger.LoggerAspect - DAO  		:  first.builder.dao.BuilderDAO.getAllBertIntents()
DEBUG: first.builder.dao.AbstractDAO - 	 QueryId  	:  builder.getAllBertIntents
DEBUG: org.mybatis.spring.SqlSessionUtils - Creating a new SqlSession
DEBUG: org.mybatis.spring.SqlSessionUtils - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@2866a15b]
DEBUG: org.mybatis.spring.transaction.SpringManagedTransaction - JDBC Connection [net.sf.log4jdbc.ConnectionSpy@25d7d316] will be managed by Spring
2024-03-05 04:57:29,468  INFO SQL(simplebot)        :  SELECT B.No, B.Name, B.Language
		FROM BertIntent B LEFT OUTER JOIN BackendInfo BI
		ON B.BertItfId = BI.id
		WHERE BI.host=1637
		ORDER BY B.No
DEBUG: org.mybatis.spring.SqlSessionUtils - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@2866a15b]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@2866a15b]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@2866a15b]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@2866a15b]
DEBUG: first.common.logger.LoggerAspect - Controller  	:  first.builder.controller.BuilderController.getTask()
DEBUG: first.common.logger.LoggerAspect - ServiceImpl  	:  first.builder.service.BuilderService.getTaskCount()
DEBUG: first.common.logger.LoggerAspect - DAO  		:  first.builder.dao.BuilderDAO.getTaskCount()
DEBUG: first.builder.dao.AbstractDAO - 	 QueryId  	:  builder.getTaskCount
DEBUG: org.mybatis.spring.SqlSessionUtils - Creating a new SqlSession
DEBUG: org.mybatis.spring.SqlSessionUtils - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@15a36399]
DEBUG: org.mybatis.spring.transaction.SpringManagedTransaction - JDBC Connection [net.sf.log4jdbc.ConnectionSpy@5220d61] will be managed by Spring
2024-03-05 04:57:29,519  INFO SQL(simplebot)        :  SELECT COUNT(*) FROM Intent WHERE Account=1637
 and Language=1
DEBUG: org.mybatis.spring.SqlSessionUtils - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@15a36399]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@15a36399]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@15a36399]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@15a36399]
DEBUG: first.common.logger.LoggerAspect - ServiceImpl  	:  first.builder.service.BuilderService.getAnswerList()
DEBUG: first.common.logger.LoggerAspect - DAO  		:  first.builder.dao.BuilderDAO.getAnswerList()
DEBUG: first.builder.dao.AbstractDAO - 	 QueryId  	:  builder.getAnswerList
DEBUG: org.mybatis.spring.SqlSessionUtils - Creating a new SqlSession
DEBUG: org.mybatis.spring.SqlSessionUtils - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@4d209e0c]
DEBUG: org.mybatis.spring.transaction.SpringManagedTransaction - JDBC Connection [net.sf.log4jdbc.ConnectionSpy@1ef6bd03] will be managed by Spring
2024-03-05 04:57:29,521  INFO SQL(simplebot)        :  SELECT I.No, I.Main, I.Name, A.answer, I.Account
		FROM Intent I LEFT OUTER JOIN Answer A
		ON I.Answer = A.No
		WHERE I.Account=1637
 and I.Language=1
		ORDER BY I.No
		OFFSET 0 ROWS
		FETCH NEXT 15 ROWS ONLY
DEBUG: org.mybatis.spring.SqlSessionUtils - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@4d209e0c]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@4d209e0c]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@4d209e0c]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@4d209e0c]
DEBUG: first.common.logger.LoggerAspect - ServiceImpl  	:  first.builder.service.BuilderService.getAllIntents()
DEBUG: first.common.logger.LoggerAspect - DAO  		:  first.builder.dao.BuilderDAO.getAllIntents()
DEBUG: first.builder.dao.AbstractDAO - 	 QueryId  	:  builder.getAllIntents
DEBUG: org.mybatis.spring.SqlSessionUtils - Creating a new SqlSession
DEBUG: org.mybatis.spring.SqlSessionUtils - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@764572db]
DEBUG: org.mybatis.spring.transaction.SpringManagedTransaction - JDBC Connection [net.sf.log4jdbc.ConnectionSpy@3a6e0154] will be managed by Spring
2024-03-05 04:57:29,523  INFO SQL(simplebot)        :  SELECT I.No, I.Main, I.Name,I.Next, I.URL, I.Language
		FROM Intent I
		WHERE I.Account=1637
		ORDER BY I.No
DEBUG: org.mybatis.spring.SqlSessionUtils - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@764572db]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@764572db]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@764572db]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@764572db]
DEBUG: first.common.logger.LoggerAspect - ServiceImpl  	:  first.builder.service.BuilderService.getAllBertIntents()
DEBUG: first.common.logger.LoggerAspect - DAO  		:  first.builder.dao.BuilderDAO.getAllBertIntents()
DEBUG: first.builder.dao.AbstractDAO - 	 QueryId  	:  builder.getAllBertIntents
DEBUG: org.mybatis.spring.SqlSessionUtils - Creating a new SqlSession
DEBUG: org.mybatis.spring.SqlSessionUtils - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@6710bdda]
DEBUG: org.mybatis.spring.transaction.SpringManagedTransaction - JDBC Connection [net.sf.log4jdbc.ConnectionSpy@7c23e0c0] will be managed by Spring
2024-03-05 04:57:29,526  INFO SQL(simplebot)        :  SELECT B.No, B.Name, B.Language
		FROM BertIntent B LEFT OUTER JOIN BackendInfo BI
		ON B.BertItfId = BI.id
		WHERE BI.host=1637
		ORDER BY B.No
DEBUG: org.mybatis.spring.SqlSessionUtils - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@6710bdda]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@6710bdda]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@6710bdda]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@6710bdda]
DEBUG: first.common.logger.LoggerAspect - Controller  	:  first.builder.controller.BuilderController.chatbotBuilderCommon()
DEBUG: first.common.logger.LoggerAspect - Controller  	:  first.builder.controller.BuilderController.getChatList()
DEBUG: first.common.logger.LoggerAspect - ServiceImpl  	:  first.builder.service.BuilderService.getChatbotList()
DEBUG: first.common.logger.LoggerAspect - DAO  		:  first.builder.dao.BuilderDAO.getChatbotList()
DEBUG: first.builder.dao.AbstractDAO - 	 QueryId  	:  builder.getChatbotList
DEBUG: org.mybatis.spring.SqlSessionUtils - Creating a new SqlSession
DEBUG: org.mybatis.spring.SqlSessionUtils - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@17572373]
DEBUG: org.mybatis.spring.transaction.SpringManagedTransaction - JDBC Connection [net.sf.log4jdbc.ConnectionSpy@74b92f41] will be managed by Spring
2024-03-05 04:57:31,452  INFO SQL(simplebot)        :  SELECT  /* No, Name, Host, Language */
			*
		from Account WHERE 1=1
		AND No IN
		 
				 (  
					'1637'
				 , 
					'1638'
				 ) 
			 

		 
		ORDER BY No
DEBUG: org.mybatis.spring.SqlSessionUtils - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@17572373]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@17572373]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@17572373]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@17572373]
DEBUG: first.common.logger.LoggerAspect - Controller  	:  first.builder.controller.BuilderController.builderContentsAnswer()
DEBUG: first.common.logger.LoggerAspect - Controller  	:  first.builder.controller.BuilderController.builderBottomAnswer()
DEBUG: first.common.logger.LoggerAspect - Controller  	:  first.builder.controller.BuilderController.getTask()
DEBUG: first.common.logger.LoggerAspect - ServiceImpl  	:  first.builder.service.BuilderService.getTaskCount()
DEBUG: first.common.logger.LoggerAspect - DAO  		:  first.builder.dao.BuilderDAO.getTaskCount()
DEBUG: first.builder.dao.AbstractDAO - 	 QueryId  	:  builder.getTaskCount
DEBUG: org.mybatis.spring.SqlSessionUtils - Creating a new SqlSession
DEBUG: org.mybatis.spring.SqlSessionUtils - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@76fcacbf]
DEBUG: org.mybatis.spring.transaction.SpringManagedTransaction - JDBC Connection [net.sf.log4jdbc.ConnectionSpy@1aa683a0] will be managed by Spring
2024-03-05 04:57:31,532  INFO SQL(simplebot)        :  SELECT COUNT(*) FROM Intent WHERE Account=1637
 and Language=1
DEBUG: org.mybatis.spring.SqlSessionUtils - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@76fcacbf]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@76fcacbf]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@76fcacbf]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@76fcacbf]
DEBUG: first.common.logger.LoggerAspect - ServiceImpl  	:  first.builder.service.BuilderService.getAnswerList()
DEBUG: first.common.logger.LoggerAspect - DAO  		:  first.builder.dao.BuilderDAO.getAnswerList()
DEBUG: first.builder.dao.AbstractDAO - 	 QueryId  	:  builder.getAnswerList
DEBUG: org.mybatis.spring.SqlSessionUtils - Creating a new SqlSession
DEBUG: org.mybatis.spring.SqlSessionUtils - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@711d0afc]
DEBUG: org.mybatis.spring.transaction.SpringManagedTransaction - JDBC Connection [net.sf.log4jdbc.ConnectionSpy@e01aadd] will be managed by Spring
2024-03-05 04:57:31,535  INFO SQL(simplebot)        :  SELECT I.No, I.Main, I.Name, A.answer, I.Account
		FROM Intent I LEFT OUTER JOIN Answer A
		ON I.Answer = A.No
		WHERE I.Account=1637
 and I.Language=1
		ORDER BY I.No
		OFFSET 0 ROWS
		FETCH NEXT 15 ROWS ONLY
DEBUG: org.mybatis.spring.SqlSessionUtils - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@711d0afc]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@711d0afc]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@711d0afc]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@711d0afc]
DEBUG: first.common.logger.LoggerAspect - ServiceImpl  	:  first.builder.service.BuilderService.getAllIntents()
DEBUG: first.common.logger.LoggerAspect - DAO  		:  first.builder.dao.BuilderDAO.getAllIntents()
DEBUG: first.builder.dao.AbstractDAO - 	 QueryId  	:  builder.getAllIntents
DEBUG: org.mybatis.spring.SqlSessionUtils - Creating a new SqlSession
DEBUG: org.mybatis.spring.SqlSessionUtils - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@6f6aedc3]
DEBUG: org.mybatis.spring.transaction.SpringManagedTransaction - JDBC Connection [net.sf.log4jdbc.ConnectionSpy@dcb10ed] will be managed by Spring
2024-03-05 04:57:31,537  INFO SQL(simplebot)        :  SELECT I.No, I.Main, I.Name,I.Next, I.URL, I.Language
		FROM Intent I
		WHERE I.Account=1637
		ORDER BY I.No
DEBUG: org.mybatis.spring.SqlSessionUtils - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@6f6aedc3]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@6f6aedc3]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@6f6aedc3]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@6f6aedc3]
DEBUG: first.common.logger.LoggerAspect - ServiceImpl  	:  first.builder.service.BuilderService.getAllBertIntents()
DEBUG: first.common.logger.LoggerAspect - DAO  		:  first.builder.dao.BuilderDAO.getAllBertIntents()
DEBUG: first.builder.dao.AbstractDAO - 	 QueryId  	:  builder.getAllBertIntents
DEBUG: org.mybatis.spring.SqlSessionUtils - Creating a new SqlSession
DEBUG: org.mybatis.spring.SqlSessionUtils - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@10985672]
DEBUG: org.mybatis.spring.transaction.SpringManagedTransaction - JDBC Connection [net.sf.log4jdbc.ConnectionSpy@28d4e363] will be managed by Spring
2024-03-05 04:57:31,539  INFO SQL(simplebot)        :  SELECT B.No, B.Name, B.Language
		FROM BertIntent B LEFT OUTER JOIN BackendInfo BI
		ON B.BertItfId = BI.id
		WHERE BI.host=1637
		ORDER BY B.No
DEBUG: org.mybatis.spring.SqlSessionUtils - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@10985672]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@10985672]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@10985672]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@10985672]
DEBUG: first.common.logger.LoggerAspect - Controller  	:  first.builder.controller.BuilderController.getTask()
DEBUG: first.common.logger.LoggerAspect - ServiceImpl  	:  first.builder.service.BuilderService.getTaskCount()
DEBUG: first.common.logger.LoggerAspect - DAO  		:  first.builder.dao.BuilderDAO.getTaskCount()
DEBUG: first.builder.dao.AbstractDAO - 	 QueryId  	:  builder.getTaskCount
DEBUG: org.mybatis.spring.SqlSessionUtils - Creating a new SqlSession
DEBUG: org.mybatis.spring.SqlSessionUtils - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@582a4734]
DEBUG: org.mybatis.spring.transaction.SpringManagedTransaction - JDBC Connection [net.sf.log4jdbc.ConnectionSpy@3df6f756] will be managed by Spring
2024-03-05 04:57:31,622  INFO SQL(simplebot)        :  SELECT COUNT(*) FROM Intent WHERE Account=1637
 and Language=1
DEBUG: org.mybatis.spring.SqlSessionUtils - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@582a4734]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@582a4734]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@582a4734]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@582a4734]
DEBUG: first.common.logger.LoggerAspect - ServiceImpl  	:  first.builder.service.BuilderService.getAnswerList()
DEBUG: first.common.logger.LoggerAspect - DAO  		:  first.builder.dao.BuilderDAO.getAnswerList()
DEBUG: first.builder.dao.AbstractDAO - 	 QueryId  	:  builder.getAnswerList
DEBUG: org.mybatis.spring.SqlSessionUtils - Creating a new SqlSession
DEBUG: org.mybatis.spring.SqlSessionUtils - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@59cc8975]
DEBUG: org.mybatis.spring.transaction.SpringManagedTransaction - JDBC Connection [net.sf.log4jdbc.ConnectionSpy@3576e3a5] will be managed by Spring
2024-03-05 04:57:31,624  INFO SQL(simplebot)        :  SELECT I.No, I.Main, I.Name, A.answer, I.Account
		FROM Intent I LEFT OUTER JOIN Answer A
		ON I.Answer = A.No
		WHERE I.Account=1637
 and I.Language=1
		ORDER BY I.No
		OFFSET 0 ROWS
		FETCH NEXT 15 ROWS ONLY
DEBUG: org.mybatis.spring.SqlSessionUtils - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@59cc8975]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@59cc8975]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@59cc8975]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@59cc8975]
DEBUG: first.common.logger.LoggerAspect - ServiceImpl  	:  first.builder.service.BuilderService.getAllIntents()
DEBUG: first.common.logger.LoggerAspect - DAO  		:  first.builder.dao.BuilderDAO.getAllIntents()
DEBUG: first.builder.dao.AbstractDAO - 	 QueryId  	:  builder.getAllIntents
DEBUG: org.mybatis.spring.SqlSessionUtils - Creating a new SqlSession
DEBUG: org.mybatis.spring.SqlSessionUtils - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@360c7cbc]
DEBUG: org.mybatis.spring.transaction.SpringManagedTransaction - JDBC Connection [net.sf.log4jdbc.ConnectionSpy@38ea7946] will be managed by Spring
2024-03-05 04:57:31,626  INFO SQL(simplebot)        :  SELECT I.No, I.Main, I.Name,I.Next, I.URL, I.Language
		FROM Intent I
		WHERE I.Account=1637
		ORDER BY I.No
DEBUG: org.mybatis.spring.SqlSessionUtils - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@360c7cbc]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@360c7cbc]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@360c7cbc]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@360c7cbc]
DEBUG: first.common.logger.LoggerAspect - ServiceImpl  	:  first.builder.service.BuilderService.getAllBertIntents()
DEBUG: first.common.logger.LoggerAspect - DAO  		:  first.builder.dao.BuilderDAO.getAllBertIntents()
DEBUG: first.builder.dao.AbstractDAO - 	 QueryId  	:  builder.getAllBertIntents
DEBUG: org.mybatis.spring.SqlSessionUtils - Creating a new SqlSession
DEBUG: org.mybatis.spring.SqlSessionUtils - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@b8aa792]
DEBUG: org.mybatis.spring.transaction.SpringManagedTransaction - JDBC Connection [net.sf.log4jdbc.ConnectionSpy@8e32060] will be managed by Spring
2024-03-05 04:57:31,629  INFO SQL(simplebot)        :  SELECT B.No, B.Name, B.Language
		FROM BertIntent B LEFT OUTER JOIN BackendInfo BI
		ON B.BertItfId = BI.id
		WHERE BI.host=1637
		ORDER BY B.No
DEBUG: org.mybatis.spring.SqlSessionUtils - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@b8aa792]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@b8aa792]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@b8aa792]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@b8aa792]
DEBUG: first.common.logger.LoggerAspect - Controller  	:  first.builder.controller.BuilderController.chatbotBuilderCommon()
DEBUG: first.common.logger.LoggerAspect - Controller  	:  first.builder.controller.BuilderController.getChatList()
DEBUG: first.common.logger.LoggerAspect - ServiceImpl  	:  first.builder.service.BuilderService.getChatbotList()
DEBUG: first.common.logger.LoggerAspect - DAO  		:  first.builder.dao.BuilderDAO.getChatbotList()
DEBUG: first.builder.dao.AbstractDAO - 	 QueryId  	:  builder.getChatbotList
DEBUG: org.mybatis.spring.SqlSessionUtils - Creating a new SqlSession
DEBUG: org.mybatis.spring.SqlSessionUtils - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@2028a514]
DEBUG: org.mybatis.spring.transaction.SpringManagedTransaction - JDBC Connection [net.sf.log4jdbc.ConnectionSpy@4a25d947] will be managed by Spring
2024-03-05 04:57:34,908  INFO SQL(simplebot)        :  SELECT  /* No, Name, Host, Language */
			*
		from Account WHERE 1=1
		AND No IN
		 
				 (  
					'1637'
				 , 
					'1638'
				 ) 
			 

		 
		ORDER BY No
DEBUG: org.mybatis.spring.SqlSessionUtils - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@2028a514]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@2028a514]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@2028a514]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@2028a514]
DEBUG: first.common.logger.LoggerAspect - Controller  	:  first.builder.controller.BuilderController.builderContentsAnswer()
DEBUG: first.common.logger.LoggerAspect - Controller  	:  first.builder.controller.BuilderController.builderBottomAnswer()
DEBUG: first.common.logger.LoggerAspect - Controller  	:  first.builder.controller.BuilderController.getTask()
DEBUG: first.common.logger.LoggerAspect - ServiceImpl  	:  first.builder.service.BuilderService.getTaskCount()
DEBUG: first.common.logger.LoggerAspect - DAO  		:  first.builder.dao.BuilderDAO.getTaskCount()
DEBUG: first.builder.dao.AbstractDAO - 	 QueryId  	:  builder.getTaskCount
DEBUG: org.mybatis.spring.SqlSessionUtils - Creating a new SqlSession
DEBUG: org.mybatis.spring.SqlSessionUtils - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@2d7509c1]
DEBUG: org.mybatis.spring.transaction.SpringManagedTransaction - JDBC Connection [net.sf.log4jdbc.ConnectionSpy@51c7cdd2] will be managed by Spring
2024-03-05 04:57:34,957  INFO SQL(simplebot)        :  SELECT COUNT(*) FROM Intent WHERE Account=1637
 and Language=1
DEBUG: org.mybatis.spring.SqlSessionUtils - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@2d7509c1]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@2d7509c1]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@2d7509c1]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@2d7509c1]
DEBUG: first.common.logger.LoggerAspect - ServiceImpl  	:  first.builder.service.BuilderService.getAnswerList()
DEBUG: first.common.logger.LoggerAspect - DAO  		:  first.builder.dao.BuilderDAO.getAnswerList()
DEBUG: first.builder.dao.AbstractDAO - 	 QueryId  	:  builder.getAnswerList
DEBUG: org.mybatis.spring.SqlSessionUtils - Creating a new SqlSession
DEBUG: org.mybatis.spring.SqlSessionUtils - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@19db31fb]
DEBUG: org.mybatis.spring.transaction.SpringManagedTransaction - JDBC Connection [net.sf.log4jdbc.ConnectionSpy@2111ef55] will be managed by Spring
2024-03-05 04:57:34,960  INFO SQL(simplebot)        :  SELECT I.No, I.Main, I.Name, A.answer, I.Account
		FROM Intent I LEFT OUTER JOIN Answer A
		ON I.Answer = A.No
		WHERE I.Account=1637
 and I.Language=1
		ORDER BY I.No
		OFFSET 0 ROWS
		FETCH NEXT 15 ROWS ONLY
DEBUG: org.mybatis.spring.SqlSessionUtils - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@19db31fb]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@19db31fb]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@19db31fb]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@19db31fb]
DEBUG: first.common.logger.LoggerAspect - ServiceImpl  	:  first.builder.service.BuilderService.getAllIntents()
DEBUG: first.common.logger.LoggerAspect - DAO  		:  first.builder.dao.BuilderDAO.getAllIntents()
DEBUG: first.builder.dao.AbstractDAO - 	 QueryId  	:  builder.getAllIntents
DEBUG: org.mybatis.spring.SqlSessionUtils - Creating a new SqlSession
DEBUG: org.mybatis.spring.SqlSessionUtils - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@707c705d]
DEBUG: org.mybatis.spring.transaction.SpringManagedTransaction - JDBC Connection [net.sf.log4jdbc.ConnectionSpy@22b000ae] will be managed by Spring
2024-03-05 04:57:34,962  INFO SQL(simplebot)        :  SELECT I.No, I.Main, I.Name,I.Next, I.URL, I.Language
		FROM Intent I
		WHERE I.Account=1637
		ORDER BY I.No
DEBUG: org.mybatis.spring.SqlSessionUtils - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@707c705d]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@707c705d]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@707c705d]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@707c705d]
DEBUG: first.common.logger.LoggerAspect - ServiceImpl  	:  first.builder.service.BuilderService.getAllBertIntents()
DEBUG: first.common.logger.LoggerAspect - DAO  		:  first.builder.dao.BuilderDAO.getAllBertIntents()
DEBUG: first.builder.dao.AbstractDAO - 	 QueryId  	:  builder.getAllBertIntents
DEBUG: org.mybatis.spring.SqlSessionUtils - Creating a new SqlSession
DEBUG: org.mybatis.spring.SqlSessionUtils - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@6ff5f697]
DEBUG: org.mybatis.spring.transaction.SpringManagedTransaction - JDBC Connection [net.sf.log4jdbc.ConnectionSpy@4089d036] will be managed by Spring
2024-03-05 04:57:34,964  INFO SQL(simplebot)        :  SELECT B.No, B.Name, B.Language
		FROM BertIntent B LEFT OUTER JOIN BackendInfo BI
		ON B.BertItfId = BI.id
		WHERE BI.host=1637
		ORDER BY B.No
DEBUG: org.mybatis.spring.SqlSessionUtils - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@6ff5f697]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@6ff5f697]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@6ff5f697]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@6ff5f697]
DEBUG: first.common.logger.LoggerAspect - Controller  	:  first.builder.controller.BuilderController.getTask()
DEBUG: first.common.logger.LoggerAspect - ServiceImpl  	:  first.builder.service.BuilderService.getTaskCount()
DEBUG: first.common.logger.LoggerAspect - DAO  		:  first.builder.dao.BuilderDAO.getTaskCount()
DEBUG: first.builder.dao.AbstractDAO - 	 QueryId  	:  builder.getTaskCount
DEBUG: org.mybatis.spring.SqlSessionUtils - Creating a new SqlSession
DEBUG: org.mybatis.spring.SqlSessionUtils - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@3a5bed2d]
DEBUG: org.mybatis.spring.transaction.SpringManagedTransaction - JDBC Connection [net.sf.log4jdbc.ConnectionSpy@54359db3] will be managed by Spring
2024-03-05 04:57:35,016  INFO SQL(simplebot)        :  SELECT COUNT(*) FROM Intent WHERE Account=1637
 and Language=1
DEBUG: org.mybatis.spring.SqlSessionUtils - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@3a5bed2d]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@3a5bed2d]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@3a5bed2d]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@3a5bed2d]
DEBUG: first.common.logger.LoggerAspect - ServiceImpl  	:  first.builder.service.BuilderService.getAnswerList()
DEBUG: first.common.logger.LoggerAspect - DAO  		:  first.builder.dao.BuilderDAO.getAnswerList()
DEBUG: first.builder.dao.AbstractDAO - 	 QueryId  	:  builder.getAnswerList
DEBUG: org.mybatis.spring.SqlSessionUtils - Creating a new SqlSession
DEBUG: org.mybatis.spring.SqlSessionUtils - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1480d7a9]
DEBUG: org.mybatis.spring.transaction.SpringManagedTransaction - JDBC Connection [net.sf.log4jdbc.ConnectionSpy@65e2a55d] will be managed by Spring
2024-03-05 04:57:35,019  INFO SQL(simplebot)        :  SELECT I.No, I.Main, I.Name, A.answer, I.Account
		FROM Intent I LEFT OUTER JOIN Answer A
		ON I.Answer = A.No
		WHERE I.Account=1637
 and I.Language=1
		ORDER BY I.No
		OFFSET 0 ROWS
		FETCH NEXT 15 ROWS ONLY
DEBUG: org.mybatis.spring.SqlSessionUtils - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1480d7a9]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1480d7a9]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1480d7a9]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1480d7a9]
DEBUG: first.common.logger.LoggerAspect - ServiceImpl  	:  first.builder.service.BuilderService.getAllIntents()
DEBUG: first.common.logger.LoggerAspect - DAO  		:  first.builder.dao.BuilderDAO.getAllIntents()
DEBUG: first.builder.dao.AbstractDAO - 	 QueryId  	:  builder.getAllIntents
DEBUG: org.mybatis.spring.SqlSessionUtils - Creating a new SqlSession
DEBUG: org.mybatis.spring.SqlSessionUtils - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@123697c1]
DEBUG: org.mybatis.spring.transaction.SpringManagedTransaction - JDBC Connection [net.sf.log4jdbc.ConnectionSpy@19d299c2] will be managed by Spring
2024-03-05 04:57:35,021  INFO SQL(simplebot)        :  SELECT I.No, I.Main, I.Name,I.Next, I.URL, I.Language
		FROM Intent I
		WHERE I.Account=1637
		ORDER BY I.No
DEBUG: org.mybatis.spring.SqlSessionUtils - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@123697c1]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@123697c1]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@123697c1]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@123697c1]
DEBUG: first.common.logger.LoggerAspect - ServiceImpl  	:  first.builder.service.BuilderService.getAllBertIntents()
DEBUG: first.common.logger.LoggerAspect - DAO  		:  first.builder.dao.BuilderDAO.getAllBertIntents()
DEBUG: first.builder.dao.AbstractDAO - 	 QueryId  	:  builder.getAllBertIntents
DEBUG: org.mybatis.spring.SqlSessionUtils - Creating a new SqlSession
DEBUG: org.mybatis.spring.SqlSessionUtils - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@aaf37d8]
DEBUG: org.mybatis.spring.transaction.SpringManagedTransaction - JDBC Connection [net.sf.log4jdbc.ConnectionSpy@125b4515] will be managed by Spring
2024-03-05 04:57:35,024  INFO SQL(simplebot)        :  SELECT B.No, B.Name, B.Language
		FROM BertIntent B LEFT OUTER JOIN BackendInfo BI
		ON B.BertItfId = BI.id
		WHERE BI.host=1637
		ORDER BY B.No
DEBUG: org.mybatis.spring.SqlSessionUtils - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@aaf37d8]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@aaf37d8]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@aaf37d8]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@aaf37d8]
DEBUG: first.common.logger.LoggerAspect - Controller  	:  first.builder.controller.BuilderController.chatbotBuilderCommon()
DEBUG: first.common.logger.LoggerAspect - Controller  	:  first.builder.controller.BuilderController.getChatList()
DEBUG: first.common.logger.LoggerAspect - ServiceImpl  	:  first.builder.service.BuilderService.getChatbotList()
DEBUG: first.common.logger.LoggerAspect - DAO  		:  first.builder.dao.BuilderDAO.getChatbotList()
DEBUG: first.builder.dao.AbstractDAO - 	 QueryId  	:  builder.getChatbotList
DEBUG: org.mybatis.spring.SqlSessionUtils - Creating a new SqlSession
DEBUG: org.mybatis.spring.SqlSessionUtils - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@57b15ff5]
DEBUG: org.mybatis.spring.transaction.SpringManagedTransaction - JDBC Connection [net.sf.log4jdbc.ConnectionSpy@57caf4b4] will be managed by Spring
2024-03-05 04:57:36,987  INFO SQL(simplebot)        :  SELECT  /* No, Name, Host, Language */
			*
		from Account WHERE 1=1
		AND No IN
		 
				 (  
					'1637'
				 , 
					'1638'
				 ) 
			 

		 
		ORDER BY No
DEBUG: org.mybatis.spring.SqlSessionUtils - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@57b15ff5]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@57b15ff5]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@57b15ff5]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@57b15ff5]
DEBUG: first.common.logger.LoggerAspect - Controller  	:  first.builder.controller.BuilderController.builderContentsAnswer()
DEBUG: first.common.logger.LoggerAspect - Controller  	:  first.builder.controller.BuilderController.builderBottomAnswer()
DEBUG: first.common.logger.LoggerAspect - Controller  	:  first.builder.controller.BuilderController.getTask()
DEBUG: first.common.logger.LoggerAspect - ServiceImpl  	:  first.builder.service.BuilderService.getTaskCount()
DEBUG: first.common.logger.LoggerAspect - DAO  		:  first.builder.dao.BuilderDAO.getTaskCount()
DEBUG: first.builder.dao.AbstractDAO - 	 QueryId  	:  builder.getTaskCount
DEBUG: org.mybatis.spring.SqlSessionUtils - Creating a new SqlSession
DEBUG: org.mybatis.spring.SqlSessionUtils - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@6321b65]
DEBUG: org.mybatis.spring.transaction.SpringManagedTransaction - JDBC Connection [net.sf.log4jdbc.ConnectionSpy@2e6797d8] will be managed by Spring
2024-03-05 04:57:37,230  INFO SQL(simplebot)        :  SELECT COUNT(*) FROM Intent WHERE Account=1637
 and Language=1
DEBUG: org.mybatis.spring.SqlSessionUtils - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@6321b65]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@6321b65]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@6321b65]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@6321b65]
DEBUG: first.common.logger.LoggerAspect - ServiceImpl  	:  first.builder.service.BuilderService.getAnswerList()
DEBUG: first.common.logger.LoggerAspect - DAO  		:  first.builder.dao.BuilderDAO.getAnswerList()
DEBUG: first.builder.dao.AbstractDAO - 	 QueryId  	:  builder.getAnswerList
DEBUG: org.mybatis.spring.SqlSessionUtils - Creating a new SqlSession
DEBUG: org.mybatis.spring.SqlSessionUtils - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@77326af0]
DEBUG: org.mybatis.spring.transaction.SpringManagedTransaction - JDBC Connection [net.sf.log4jdbc.ConnectionSpy@13fc7e92] will be managed by Spring
2024-03-05 04:57:37,233  INFO SQL(simplebot)        :  SELECT I.No, I.Main, I.Name, A.answer, I.Account
		FROM Intent I LEFT OUTER JOIN Answer A
		ON I.Answer = A.No
		WHERE I.Account=1637
 and I.Language=1
		ORDER BY I.No
		OFFSET 0 ROWS
		FETCH NEXT 15 ROWS ONLY
DEBUG: org.mybatis.spring.SqlSessionUtils - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@77326af0]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@77326af0]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@77326af0]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@77326af0]
DEBUG: first.common.logger.LoggerAspect - ServiceImpl  	:  first.builder.service.BuilderService.getAllIntents()
DEBUG: first.common.logger.LoggerAspect - DAO  		:  first.builder.dao.BuilderDAO.getAllIntents()
DEBUG: first.builder.dao.AbstractDAO - 	 QueryId  	:  builder.getAllIntents
DEBUG: org.mybatis.spring.SqlSessionUtils - Creating a new SqlSession
DEBUG: org.mybatis.spring.SqlSessionUtils - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@4531edc5]
DEBUG: org.mybatis.spring.transaction.SpringManagedTransaction - JDBC Connection [net.sf.log4jdbc.ConnectionSpy@30d8acea] will be managed by Spring
2024-03-05 04:57:37,235  INFO SQL(simplebot)        :  SELECT I.No, I.Main, I.Name,I.Next, I.URL, I.Language
		FROM Intent I
		WHERE I.Account=1637
		ORDER BY I.No
DEBUG: org.mybatis.spring.SqlSessionUtils - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@4531edc5]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@4531edc5]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@4531edc5]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@4531edc5]
DEBUG: first.common.logger.LoggerAspect - ServiceImpl  	:  first.builder.service.BuilderService.getAllBertIntents()
DEBUG: first.common.logger.LoggerAspect - DAO  		:  first.builder.dao.BuilderDAO.getAllBertIntents()
DEBUG: first.builder.dao.AbstractDAO - 	 QueryId  	:  builder.getAllBertIntents
DEBUG: org.mybatis.spring.SqlSessionUtils - Creating a new SqlSession
DEBUG: org.mybatis.spring.SqlSessionUtils - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@5648eb2e]
DEBUG: org.mybatis.spring.transaction.SpringManagedTransaction - JDBC Connection [net.sf.log4jdbc.ConnectionSpy@7091507d] will be managed by Spring
2024-03-05 04:57:37,237  INFO SQL(simplebot)        :  SELECT B.No, B.Name, B.Language
		FROM BertIntent B LEFT OUTER JOIN BackendInfo BI
		ON B.BertItfId = BI.id
		WHERE BI.host=1637
		ORDER BY B.No
DEBUG: org.mybatis.spring.SqlSessionUtils - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@5648eb2e]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@5648eb2e]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@5648eb2e]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@5648eb2e]
DEBUG: first.common.logger.LoggerAspect - Controller  	:  first.builder.controller.BuilderController.getTask()
DEBUG: first.common.logger.LoggerAspect - ServiceImpl  	:  first.builder.service.BuilderService.getTaskCount()
DEBUG: first.common.logger.LoggerAspect - DAO  		:  first.builder.dao.BuilderDAO.getTaskCount()
DEBUG: first.builder.dao.AbstractDAO - 	 QueryId  	:  builder.getTaskCount
DEBUG: org.mybatis.spring.SqlSessionUtils - Creating a new SqlSession
DEBUG: org.mybatis.spring.SqlSessionUtils - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@19c329b6]
DEBUG: org.mybatis.spring.transaction.SpringManagedTransaction - JDBC Connection [net.sf.log4jdbc.ConnectionSpy@25ddef57] will be managed by Spring
2024-03-05 04:57:37,366  INFO SQL(simplebot)        :  SELECT COUNT(*) FROM Intent WHERE Account=1637
 and Language=1
DEBUG: org.mybatis.spring.SqlSessionUtils - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@19c329b6]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@19c329b6]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@19c329b6]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@19c329b6]
DEBUG: first.common.logger.LoggerAspect - ServiceImpl  	:  first.builder.service.BuilderService.getAnswerList()
DEBUG: first.common.logger.LoggerAspect - DAO  		:  first.builder.dao.BuilderDAO.getAnswerList()
DEBUG: first.builder.dao.AbstractDAO - 	 QueryId  	:  builder.getAnswerList
DEBUG: org.mybatis.spring.SqlSessionUtils - Creating a new SqlSession
DEBUG: org.mybatis.spring.SqlSessionUtils - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@52e8f845]
DEBUG: org.mybatis.spring.transaction.SpringManagedTransaction - JDBC Connection [net.sf.log4jdbc.ConnectionSpy@1b9bb914] will be managed by Spring
2024-03-05 04:57:37,368  INFO SQL(simplebot)        :  SELECT I.No, I.Main, I.Name, A.answer, I.Account
		FROM Intent I LEFT OUTER JOIN Answer A
		ON I.Answer = A.No
		WHERE I.Account=1637
 and I.Language=1
		ORDER BY I.No
		OFFSET 0 ROWS
		FETCH NEXT 15 ROWS ONLY
DEBUG: org.mybatis.spring.SqlSessionUtils - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@52e8f845]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@52e8f845]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@52e8f845]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@52e8f845]
DEBUG: first.common.logger.LoggerAspect - ServiceImpl  	:  first.builder.service.BuilderService.getAllIntents()
DEBUG: first.common.logger.LoggerAspect - DAO  		:  first.builder.dao.BuilderDAO.getAllIntents()
DEBUG: first.builder.dao.AbstractDAO - 	 QueryId  	:  builder.getAllIntents
DEBUG: org.mybatis.spring.SqlSessionUtils - Creating a new SqlSession
DEBUG: org.mybatis.spring.SqlSessionUtils - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@539eda8d]
DEBUG: org.mybatis.spring.transaction.SpringManagedTransaction - JDBC Connection [net.sf.log4jdbc.ConnectionSpy@a72a56] will be managed by Spring
2024-03-05 04:57:37,371  INFO SQL(simplebot)        :  SELECT I.No, I.Main, I.Name,I.Next, I.URL, I.Language
		FROM Intent I
		WHERE I.Account=1637
		ORDER BY I.No
DEBUG: org.mybatis.spring.SqlSessionUtils - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@539eda8d]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@539eda8d]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@539eda8d]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@539eda8d]
DEBUG: first.common.logger.LoggerAspect - ServiceImpl  	:  first.builder.service.BuilderService.getAllBertIntents()
DEBUG: first.common.logger.LoggerAspect - DAO  		:  first.builder.dao.BuilderDAO.getAllBertIntents()
DEBUG: first.builder.dao.AbstractDAO - 	 QueryId  	:  builder.getAllBertIntents
DEBUG: org.mybatis.spring.SqlSessionUtils - Creating a new SqlSession
DEBUG: org.mybatis.spring.SqlSessionUtils - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@20bdf71b]
DEBUG: org.mybatis.spring.transaction.SpringManagedTransaction - JDBC Connection [net.sf.log4jdbc.ConnectionSpy@803db3c] will be managed by Spring
2024-03-05 04:57:37,373  INFO SQL(simplebot)        :  SELECT B.No, B.Name, B.Language
		FROM BertIntent B LEFT OUTER JOIN BackendInfo BI
		ON B.BertItfId = BI.id
		WHERE BI.host=1637
		ORDER BY B.No
DEBUG: org.mybatis.spring.SqlSessionUtils - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@20bdf71b]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@20bdf71b]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@20bdf71b]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@20bdf71b]
DEBUG: first.common.logger.LoggerAspect - Controller  	:  first.builder.controller.BuilderController.chatbotBuilderCommon()
DEBUG: first.common.logger.LoggerAspect - Controller  	:  first.builder.controller.BuilderController.getChatList()
DEBUG: first.common.logger.LoggerAspect - ServiceImpl  	:  first.builder.service.BuilderService.getChatbotList()
DEBUG: first.common.logger.LoggerAspect - DAO  		:  first.builder.dao.BuilderDAO.getChatbotList()
DEBUG: first.builder.dao.AbstractDAO - 	 QueryId  	:  builder.getChatbotList
DEBUG: org.mybatis.spring.SqlSessionUtils - Creating a new SqlSession
DEBUG: org.mybatis.spring.SqlSessionUtils - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@375f3b06]
DEBUG: org.mybatis.spring.transaction.SpringManagedTransaction - JDBC Connection [net.sf.log4jdbc.ConnectionSpy@14b64c26] will be managed by Spring
2024-03-05 04:57:40,082  INFO SQL(simplebot)        :  SELECT  /* No, Name, Host, Language */
			*
		from Account WHERE 1=1
		AND No IN
		 
				 (  
					'1637'
				 , 
					'1638'
				 ) 
			 

		 
		ORDER BY No
DEBUG: org.mybatis.spring.SqlSessionUtils - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@375f3b06]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@375f3b06]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@375f3b06]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@375f3b06]
DEBUG: first.common.logger.LoggerAspect - Controller  	:  first.builder.controller.BuilderController.builderContentsAnswer()
DEBUG: first.common.logger.LoggerAspect - Controller  	:  first.builder.controller.BuilderController.builderBottomAnswer()
DEBUG: first.common.logger.LoggerAspect - Controller  	:  first.builder.controller.BuilderController.getTask()
DEBUG: first.common.logger.LoggerAspect - ServiceImpl  	:  first.builder.service.BuilderService.getTaskCount()
DEBUG: first.common.logger.LoggerAspect - DAO  		:  first.builder.dao.BuilderDAO.getTaskCount()
DEBUG: first.builder.dao.AbstractDAO - 	 QueryId  	:  builder.getTaskCount
DEBUG: org.mybatis.spring.SqlSessionUtils - Creating a new SqlSession
DEBUG: org.mybatis.spring.SqlSessionUtils - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@75da825b]
DEBUG: org.mybatis.spring.transaction.SpringManagedTransaction - JDBC Connection [net.sf.log4jdbc.ConnectionSpy@5d9e62f3] will be managed by Spring
2024-03-05 04:57:40,127  INFO SQL(simplebot)        :  SELECT COUNT(*) FROM Intent WHERE Account=1637
 and Language=1
DEBUG: org.mybatis.spring.SqlSessionUtils - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@75da825b]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@75da825b]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@75da825b]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@75da825b]
DEBUG: first.common.logger.LoggerAspect - ServiceImpl  	:  first.builder.service.BuilderService.getAnswerList()
DEBUG: first.common.logger.LoggerAspect - DAO  		:  first.builder.dao.BuilderDAO.getAnswerList()
DEBUG: first.builder.dao.AbstractDAO - 	 QueryId  	:  builder.getAnswerList
DEBUG: org.mybatis.spring.SqlSessionUtils - Creating a new SqlSession
DEBUG: org.mybatis.spring.SqlSessionUtils - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@78e717e5]
DEBUG: org.mybatis.spring.transaction.SpringManagedTransaction - JDBC Connection [net.sf.log4jdbc.ConnectionSpy@48f97aaa] will be managed by Spring
2024-03-05 04:57:40,130  INFO SQL(simplebot)        :  SELECT I.No, I.Main, I.Name, A.answer, I.Account
		FROM Intent I LEFT OUTER JOIN Answer A
		ON I.Answer = A.No
		WHERE I.Account=1637
 and I.Language=1
		ORDER BY I.No
		OFFSET 0 ROWS
		FETCH NEXT 15 ROWS ONLY
DEBUG: org.mybatis.spring.SqlSessionUtils - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@78e717e5]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@78e717e5]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@78e717e5]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@78e717e5]
DEBUG: first.common.logger.LoggerAspect - ServiceImpl  	:  first.builder.service.BuilderService.getAllIntents()
DEBUG: first.common.logger.LoggerAspect - DAO  		:  first.builder.dao.BuilderDAO.getAllIntents()
DEBUG: first.builder.dao.AbstractDAO - 	 QueryId  	:  builder.getAllIntents
DEBUG: org.mybatis.spring.SqlSessionUtils - Creating a new SqlSession
DEBUG: org.mybatis.spring.SqlSessionUtils - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@7c0ab203]
DEBUG: org.mybatis.spring.transaction.SpringManagedTransaction - JDBC Connection [net.sf.log4jdbc.ConnectionSpy@4b6a4878] will be managed by Spring
2024-03-05 04:57:40,132  INFO SQL(simplebot)        :  SELECT I.No, I.Main, I.Name,I.Next, I.URL, I.Language
		FROM Intent I
		WHERE I.Account=1637
		ORDER BY I.No
DEBUG: org.mybatis.spring.SqlSessionUtils - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@7c0ab203]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@7c0ab203]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@7c0ab203]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@7c0ab203]
DEBUG: first.common.logger.LoggerAspect - ServiceImpl  	:  first.builder.service.BuilderService.getAllBertIntents()
DEBUG: first.common.logger.LoggerAspect - DAO  		:  first.builder.dao.BuilderDAO.getAllBertIntents()
DEBUG: first.builder.dao.AbstractDAO - 	 QueryId  	:  builder.getAllBertIntents
DEBUG: org.mybatis.spring.SqlSessionUtils - Creating a new SqlSession
DEBUG: org.mybatis.spring.SqlSessionUtils - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@3f0c5655]
DEBUG: org.mybatis.spring.transaction.SpringManagedTransaction - JDBC Connection [net.sf.log4jdbc.ConnectionSpy@39a81e8f] will be managed by Spring
2024-03-05 04:57:40,134  INFO SQL(simplebot)        :  SELECT B.No, B.Name, B.Language
		FROM BertIntent B LEFT OUTER JOIN BackendInfo BI
		ON B.BertItfId = BI.id
		WHERE BI.host=1637
		ORDER BY B.No
DEBUG: org.mybatis.spring.SqlSessionUtils - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@3f0c5655]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@3f0c5655]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@3f0c5655]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@3f0c5655]
DEBUG: first.common.logger.LoggerAspect - Controller  	:  first.builder.controller.BuilderController.getTask()
DEBUG: first.common.logger.LoggerAspect - ServiceImpl  	:  first.builder.service.BuilderService.getTaskCount()
DEBUG: first.common.logger.LoggerAspect - DAO  		:  first.builder.dao.BuilderDAO.getTaskCount()
DEBUG: first.builder.dao.AbstractDAO - 	 QueryId  	:  builder.getTaskCount
DEBUG: org.mybatis.spring.SqlSessionUtils - Creating a new SqlSession
DEBUG: org.mybatis.spring.SqlSessionUtils - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@689a954a]
DEBUG: org.mybatis.spring.transaction.SpringManagedTransaction - JDBC Connection [net.sf.log4jdbc.ConnectionSpy@64cc5050] will be managed by Spring
2024-03-05 04:57:40,192  INFO SQL(simplebot)        :  SELECT COUNT(*) FROM Intent WHERE Account=1637
 and Language=1
DEBUG: org.mybatis.spring.SqlSessionUtils - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@689a954a]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@689a954a]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@689a954a]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@689a954a]
DEBUG: first.common.logger.LoggerAspect - ServiceImpl  	:  first.builder.service.BuilderService.getAnswerList()
DEBUG: first.common.logger.LoggerAspect - DAO  		:  first.builder.dao.BuilderDAO.getAnswerList()
DEBUG: first.builder.dao.AbstractDAO - 	 QueryId  	:  builder.getAnswerList
DEBUG: org.mybatis.spring.SqlSessionUtils - Creating a new SqlSession
DEBUG: org.mybatis.spring.SqlSessionUtils - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@5c103755]
DEBUG: org.mybatis.spring.transaction.SpringManagedTransaction - JDBC Connection [net.sf.log4jdbc.ConnectionSpy@3647e4f2] will be managed by Spring
2024-03-05 04:57:40,194  INFO SQL(simplebot)        :  SELECT I.No, I.Main, I.Name, A.answer, I.Account
		FROM Intent I LEFT OUTER JOIN Answer A
		ON I.Answer = A.No
		WHERE I.Account=1637
 and I.Language=1
		ORDER BY I.No
		OFFSET 0 ROWS
		FETCH NEXT 15 ROWS ONLY
DEBUG: org.mybatis.spring.SqlSessionUtils - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@5c103755]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@5c103755]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@5c103755]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@5c103755]
DEBUG: first.common.logger.LoggerAspect - ServiceImpl  	:  first.builder.service.BuilderService.getAllIntents()
DEBUG: first.common.logger.LoggerAspect - DAO  		:  first.builder.dao.BuilderDAO.getAllIntents()
DEBUG: first.builder.dao.AbstractDAO - 	 QueryId  	:  builder.getAllIntents
DEBUG: org.mybatis.spring.SqlSessionUtils - Creating a new SqlSession
DEBUG: org.mybatis.spring.SqlSessionUtils - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@6a8b6d1f]
DEBUG: org.mybatis.spring.transaction.SpringManagedTransaction - JDBC Connection [net.sf.log4jdbc.ConnectionSpy@21b9707e] will be managed by Spring
2024-03-05 04:57:40,196  INFO SQL(simplebot)        :  SELECT I.No, I.Main, I.Name,I.Next, I.URL, I.Language
		FROM Intent I
		WHERE I.Account=1637
		ORDER BY I.No
DEBUG: org.mybatis.spring.SqlSessionUtils - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@6a8b6d1f]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@6a8b6d1f]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@6a8b6d1f]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@6a8b6d1f]
DEBUG: first.common.logger.LoggerAspect - ServiceImpl  	:  first.builder.service.BuilderService.getAllBertIntents()
DEBUG: first.common.logger.LoggerAspect - DAO  		:  first.builder.dao.BuilderDAO.getAllBertIntents()
DEBUG: first.builder.dao.AbstractDAO - 	 QueryId  	:  builder.getAllBertIntents
DEBUG: org.mybatis.spring.SqlSessionUtils - Creating a new SqlSession
DEBUG: org.mybatis.spring.SqlSessionUtils - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@79bfa9fa]
DEBUG: org.mybatis.spring.transaction.SpringManagedTransaction - JDBC Connection [net.sf.log4jdbc.ConnectionSpy@4f47b1fb] will be managed by Spring
2024-03-05 04:57:40,199  INFO SQL(simplebot)        :  SELECT B.No, B.Name, B.Language
		FROM BertIntent B LEFT OUTER JOIN BackendInfo BI
		ON B.BertItfId = BI.id
		WHERE BI.host=1637
		ORDER BY B.No
DEBUG: org.mybatis.spring.SqlSessionUtils - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@79bfa9fa]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@79bfa9fa]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@79bfa9fa]
DEBUG: org.mybatis.spring.SqlSessionUtils - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@79bfa9fa]
