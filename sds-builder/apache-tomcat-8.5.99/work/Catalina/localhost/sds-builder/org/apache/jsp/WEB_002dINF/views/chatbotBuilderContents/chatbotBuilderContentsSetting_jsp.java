/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/8.5.99
 * Generated at: 2024-03-07 05:27:26 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.WEB_002dINF.views.chatbotBuilderContents;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;

public final class chatbotBuilderContentsSetting_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  static {
    _jspx_dependants = new java.util.HashMap<java.lang.String,java.lang.Long>(3);
    _jspx_dependants.put("jar:file:/home/minds/maum/sds-builder/apache-tomcat-8.5.99/webapps/sds-builder/WEB-INF/lib/jstl-1.2.jar!/META-INF/c.tld", Long.valueOf(1153385082000L));
    _jspx_dependants.put("/WEB-INF/lib/jstl-1.2.jar", Long.valueOf(1617291808000L));
    _jspx_dependants.put("jar:file:/home/minds/maum/sds-builder/apache-tomcat-8.5.99/webapps/sds-builder/WEB-INF/lib/jstl-1.2.jar!/META-INF/fn.tld", Long.valueOf(1153385082000L));
  }

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.LinkedHashSet<>(3);
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = null;
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    final java.lang.String _jspx_method = request.getMethod();
    if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method) && !javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSPs only permit GET, POST or HEAD. Jasper also permits OPTIONS");
      return;
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=utf-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("<!DOCTYPE html PUBLIC \"-//W3C//DTD HTML 4.01 Transitional//EN\" \"http://www.w3.org/TR/html4/loose.dtd\">\n");
      out.write("<html>\n");
      out.write("<head>\n");
      out.write("    <meta charset=\"UTF-8\">\n");
      out.write("    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n");
      out.write("    <META HTTP-EQUIV=\"Pragma\" CONTENT=\"no-cache\">\n");
      out.write("\n");
      out.write("    <!-- cache 지우는 meta 태그 -->\n");
      out.write("    <meta http-equiv=\"Cache-Control\" content=\"no-cache\" /> <!-- 캐시가 되지 않도록 정의 -->\n");
      out.write("    <meta http-equiv=\"Pragma\" content=\"no-cache\" /> <!-- 캐시가 되지 않도록 정의 -->\n");
      out.write("    <meta http-equiv=\"Expires\" content=\"-1\"> <!-- 즉시 캐시만료 -->\n");
      out.write("    <title>chatbot builder Setting</title>\n");
      out.write("    <link rel=\"stylesheet\" href=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${pageContext.request.contextPath}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("/css/colpick.css\">\n");
      out.write("    <script src=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${pageContext.request.contextPath}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("/js/colpick.js\"></script>\n");
      out.write("    <script src=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${pageContext.request.contextPath}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("/js/qrcode.js\"></script>\n");
      out.write("    <script src=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${pageContext.request.contextPath}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("/js/builderContents/chatbotBuilderSetting.js?v=");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${queryString}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("\"></script>\n");
      out.write("</head>\n");
      out.write("<body>\n");
      out.write("<div class=\"setting\">\n");
      out.write("    <div class=\"ipt_container\">\n");
      out.write("        <dl>\n");
      out.write("            <dt>언어선택<div class=\"help\">?<div class=\"help_desc\"><i>챗봇 생성 시 선택한 언어 설정은 바꿀 수 없습니다.</i></div></div></dt>\n");
      out.write("            <dd class=\"iptBox\" id=\"settingLangCheckbox\">\n");
      out.write("                <input type=\"checkbox\" name=\"text-color\" id=\"lang_ko\" class=\"checkbox\" checked onclick=\"return !(this.value);\">\n");
      out.write("                <label for=\"lang_ko\" style=\"cursor: default\">한국어</label>\n");
      out.write("                <input type=\"checkbox\" name=\"text-color\" id=\"lang_en\" class=\"checkbox\" onclick=\"return !(this.value);\">\n");
      out.write("                <label for=\"lang_en\" style=\"cursor: default\">영어</label>\n");
      out.write("                <input type=\"checkbox\" name=\"text-color\" id=\"lang_ja\" class=\"checkbox\" onclick=\"return !(this.value);\">\n");
      out.write("                <label for=\"lang_ja\" style=\"cursor: default\">일본어</label>\n");
      out.write("                <input type=\"checkbox\" name=\"text-color\" id=\"lang_cn\" class=\"checkbox\" onclick=\"return !(this.value);\">\n");
      out.write("                <label for=\"lang_cn\" style=\"cursor: default\">중국어</label>\n");
      out.write("            </dd>\n");
      out.write("        </dl>\n");
      out.write("        <dl style=\"display: none\">\n");
      out.write("            <dt>카테고리</dt>\n");
      out.write("            <dd>\n");
      out.write("                <select name=\"\" id=\"\" class=\"select\">\n");
      out.write("                    <option value=\"\">호텔</option>\n");
      out.write("                    <option value=\"\">회사소개</option>\n");
      out.write("                    <option value=\"\">옵션1</option>\n");
      out.write("                    <option value=\"\">옵션2</option>\n");
      out.write("                    <option value=\"\">옵션3</option>\n");
      out.write("                </select>\n");
      out.write("            </dd>\n");
      out.write("        </dl>\n");
      out.write("        <dl class=\"el_add_step02\">\n");
      out.write("            <dt>챗봇명</dt>\n");
      out.write("            <dd><input type=\"text\" class=\"ipt_txt\" autocomplete=\"off\"></dd>\n");
      out.write("        </dl>\n");
      out.write("        <dl class=\"el_add_step02\">\n");
      out.write("            <dt>챗봇 ID<div class=\"help\">?<div class=\"help_desc\"><i>챗봇 고유 ID입니다.<br>ex)minds_chatbot</i></div></div></dt>\n");
      out.write("            <dd><input type=\"text\" class=\"ipt_txt\" autocomplete=\"off\"></dd>\n");
      out.write("        </dl>\n");
      out.write("        <dl>\n");
      out.write("            <dt>Email<div class=\"help\">?<div class=\"help_desc\"><i>문의, 예약 등 챗봇이 전달하는 내용을 받을 이메일 주소입니다.<br>ex)hello@mindslab.ai</i></div></div></dt>\n");
      out.write("            <dd><input type=\"text\" class=\"ipt_txt\" autocomplete=\"off\"></dd>\n");
      out.write("        </dl>\n");
      out.write("        <dl>\n");
      out.write("            <dt>상세설명<div class=\"help\">?<div class=\"help_desc\"><i>챗봇에 대한 설명을 적는 란입니다.<br>ex)마인즈랩 소개 챗봇입니다</i></div></div></dt>\n");
      out.write("            <dd><textarea name=\"\" id=\"\" class=\"ipt_txt\" cols=\"30\" rows=\"2\"></textarea></dd>\n");
      out.write("        </dl>\n");
      out.write("        <dl>\n");
      out.write("            <dt>메인 색상<div class=\"help help_guide main-color\">?<div class=\"help_desc\"><i>챗봇에 적용할 색상을 고릅니다.</i></div></div></dt>\n");
      out.write("            <dd id=\"chatbot_color\">\n");
      out.write("                <input type=\"text\" id=\"picker\" class=\"ipt_txt\">\n");
      out.write("                <div class=\"pick_preview pick_color_bg\"></div>\n");
      out.write("            </dd>\n");
      out.write("        </dl>\n");
      out.write("        <dl>\n");
      out.write("            <dt>포인트 글자색상<div class=\"help help_guide main-text\">?<div class=\"help_desc\"><i>챗봇에 적용할 글자 색상을 선택합니다.</i></div></div></dt>\n");
      out.write("            <dd class=\"iptBox\">\n");
      out.write("                <input type=\"radio\" name=\"text-color\" id=\"text_white\" class=\"radio\" checked>\n");
      out.write("                <label for=\"text_white\" onclick=\"changeTextColor()\">흰색</label>\n");
      out.write("                <input type=\"radio\" name=\"text-color\" id=\"text_black\" class=\"radio\">\n");
      out.write("                <label for=\"text_black\" onclick=\"changeTextColor()\">검은색</label>\n");
      out.write("            </dd>\n");
      out.write("        </dl>\n");
      out.write("        <dl>\n");
      out.write("            <dt>로고 이미지<div class=\"help help_guide main-logo\">?<div class=\"help_desc\"><i>챗봇 상단에 적용될 이미지입니다.<br>크기와 위치 값은 위,아래 방향키로 조절이 가능합니다.</i></div></div></dt>\n");
      out.write("            <dd class=\"cb_img_delete\">\n");
      out.write("                <a href=\"#\" class=\"btn_icon delete\" onclick=\"resetSrc(true, this)\">이미지 삭제</a>\n");
      out.write("                <div class=\"iptBox\">\n");
      out.write("                    <input type=\"text\" onmouseover=\"handleChatBuilderImageDelete(event)\" class=\"ipt_txt\" readonly>\n");
      out.write("                    <input type=\"file\" id=\"chat_build_logo\" class=\"hide\" onchange=\"changeLogoIcon()\"  accept=\"image/*\">\n");
      out.write("                    <label for=\"chat_build_logo\">찾아보기</label>\n");
      out.write("                </div>\n");
      out.write("                <div class=\"setting_logo\">\n");
      out.write("                    <div>\n");
      out.write("                        <span class=\"title\">크기 (높이 기준)</span>\n");
      out.write("                        <input type=\"number\" class=\"ipt_txt logo_size\" onchange=\"changeLogoSize()\" value=\"34\"><span>px</span>\n");
      out.write("                    </div>\n");
      out.write("                    <div class=\"logo_position\">\n");
      out.write("                        <input type=\"hidden\" name=\"horizontal\" onchange=\"changeLogoPosition()\">\n");
      out.write("                        <span class=\"title\">가로 위치</span>\n");
      out.write("                        <input type=\"radio\" name=\"horizontal_position\" id=\"hor_center\" class=\"radio\" checked>\n");
      out.write("                        <label for=\"hor_center\">가운데 정렬</label>\n");
      out.write("                        <input type=\"radio\" name=\"horizontal_position\" id=\"hor_input\" class=\"radio\">\n");
      out.write("                        <label for=\"hor_input\">직접입력</label>\n");
      out.write("                        <input type=\"number\" name=\"horizontal\" disabled class=\"ipt_txt\" placeholder=\"0\"><span>px</span>\n");
      out.write("                    </div>\n");
      out.write("                    <div class=\"logo_position\">\n");
      out.write("                        <input type=\"hidden\" name=\"vertical\" onchange=\"changeLogoPosition()\">\n");
      out.write("                        <span class=\"title\">세로 위치</span>\n");
      out.write("                        <input type=\"radio\" name=\"vertical_position\" id=\"ver_center\" class=\"radio\" checked>\n");
      out.write("                        <label for=\"ver_center\">가운데 정렬</label>\n");
      out.write("                        <input type=\"radio\" name=\"vertical_position\" id=\"ver_input\" class=\"radio\">\n");
      out.write("                        <label for=\"ver_input\">직접입력</label>\n");
      out.write("                        <input type=\"number\" name=\"vertical\" disabled class=\"ipt_txt\" placeholder=\"0\"><span>px</span>\n");
      out.write("                    </div>\n");
      out.write("                </div>\n");
      out.write("            </dd>\n");
      out.write("        </dl>\n");
      out.write("        <dl>\n");
      out.write("            <dt>아이콘 이미지<div class=\"help help_guide main-icon\">?<div class=\"help_desc\"><i>챗봇 말풍선과 하단 동그라미에 적용될 이미지입니다.</i></div></div></dt>\n");
      out.write("            <dd class=\"cb_img_delete\">\n");
      out.write("                <a href=\"#\" class=\"btn_icon delete\" onclick=\"resetSrc(false, this)\">이미지 삭제</a>\n");
      out.write("                <div class=\"iptBox\">\n");
      out.write("                    <input type=\"text\" onmouseover=\"handleChatBuilderImageDelete(event)\" class=\"ipt_txt\" readonly>\n");
      out.write("                    <input type=\"file\" id=\"chat_build_icon\" class=\"hide\" onchange=\"changeLogoIcon()\"  accept=\"image/*\">\n");
      out.write("                    <label for=\"chat_build_icon\">찾아보기</label>\n");
      out.write("                </div>\n");
      out.write("            </dd>\n");
      out.write("        </dl>\n");
      out.write("        <div class=\"btn_box\">\n");
      out.write("            <button type=\"button\" class=\"btn_primary el_add_step02\" onclick=\"changeLang()\">저장</button>\n");
      out.write("        </div>\n");
      out.write("    </div>\n");
      out.write("</div>\n");
      out.write("\n");
      out.write("<div class=\"ipt_container\">\n");
      out.write("    <dl>\n");
      out.write("        <dt>챗봇 미리보기<div class=\"help\">?<div class=\"help_desc\"><i>챗봇의 색상, 로고, 아이콘을 적용하면 확인하실 수 있습니다.</i></div></div></dt>\n");
      out.write("        <dd class=\"floating_ui\">\n");
      out.write("            <div class=\"chat_preview\">\n");
      out.write("                <div class=\"chatUI_top\">\n");
      out.write("                    <p class=\"h1 pick_logo\"></p>\n");
      out.write("                    <div class=\"langBox\">\n");
      out.write("                        <p class=\"active\"><button class=\"btn_lang\" id=\"preview_lang_globe\" title=\"언어선택\">언어선택</button></p>\n");
      out.write("                        <ul class=\"lst_lang show\">\n");
      out.write("                            <li><button class=\"btn_lang ico_ko active pick_color_bg pick_color\" data-lang=\"1\">한국어</button></li>\n");
      out.write("                            <li><button class=\"btn_lang ico_en\" data-lang=\"2\">English</button></li>\n");
      out.write("                            <li><button class=\"btn_lang ico_ja\" data-lang=\"3\">日本語</button></li>\n");
      out.write("                            <li><button class=\"btn_lang ico_zh_cn\" data-lang=\"4\">中文(汉语)</button></li>\n");
      out.write("                        </ul>\n");
      out.write("                    </div>\n");
      out.write("                    <div class=\"btn_chatClose\">close</div>\n");
      out.write("                </div>\n");
      out.write("                <div class=\"chatUI_mid\">\n");
      out.write("                    <ul class=\"lst_talk\">\n");
      out.write("                        <li class=\"newDate\"><span>0000년 00월 00일 o요일</span></li>\n");
      out.write("                        <li class=\"bot\">\n");
      out.write("                            <div class=\"pick_icon\"></div>\n");
      out.write("                            <div class=\"bot_msg\">\n");
      out.write("                                <div class=\"txt\">챗봇의 색상, 로고, 아이콘을 설정해보세요.</div>\n");
      out.write("                                <div class=\"date\">0000.00.00 00:00</div>\n");
      out.write("                            </div>\n");
      out.write("                        </li>\n");
      out.write("                        <li class=\"user\">\n");
      out.write("                            <div class=\"bot_msg\">\n");
      out.write("                                <em class=\"txt pick_color_bg pick_color\">네 설정해주세요.</em>\n");
      out.write("                                <div class=\"date\">0000.00.00 00:00</div>\n");
      out.write("                            </div>\n");
      out.write("                        </li>\n");
      out.write("                    </ul>\n");
      out.write("                </div>\n");
      out.write("                <div class=\"chatUI_btm\">\n");
      out.write("                    <div class=\"textArea\" disabled rows=\"1\" placeholder=\"메세지를 입력해 주세요\"></div>\n");
      out.write("                    <div id=\"btn_chat\" class=\"btn_chat pick_color_bg\">전송</div>\n");
      out.write("                </div>\n");
      out.write("            </div>\n");
      out.write("            <div class=\"chatGreeting pick_color_bg pick_color\">\n");
      out.write("                무엇을 도와드릴까요?<br>How may I help you?\n");
      out.write("            </div>\n");
      out.write("            <button type=\"button\" id=\"btn_goChat\" class=\"pick_color_bd pick_icon\">챗봇</button>\n");
      out.write("            <p class=\"powered\" style=\"display: none\">Powered by\n");
      out.write("                <img src=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${pageContext.request.contextPath}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("/images/img_tit_mindsLab.png\" alt=\"mindslab logo\">\n");
      out.write("            </p>\n");
      out.write("        </dd>\n");
      out.write("    </dl>\n");
      out.write("</div>\n");
      out.write("\n");
      out.write("<div class=\"connect_script\">\n");
      out.write("    <div class=\"ipt_container\">\n");
      out.write("        <dl>\n");
      out.write("            <dt>연동 스크립트<div class=\"help\">?<div class=\"help_desc\"><i>홈페이지에 입력할 스크립트 코드입니다.</i></div></div>\n");
      out.write("                <div class=\"fr\">\n");
      out.write("                    <!-- [D] disabled attr 추가 시 비활성화 디자인이 적용됩니다. -->\n");
      out.write("                    <button type=\"button\" class=\"btn_copy btn_line_primary\">내용 복사하기</button>\n");
      out.write("                </div>\n");
      out.write("                <select class=\"select\" style=\"display:inline-block; width: auto; margin-left:10px;\"\n");
      out.write("                          id=\"defualtLang\" name=\"defualtLang\" onchange=\"selectDefualtLang();\">\n");
      out.write("                </select>\n");
      out.write("            </dt>\n");
      out.write("            <dd>\n");
      out.write("                <p class=\"ipt_txt copy_text\" readonly>\n");
      out.write("                </p>\n");
      out.write("            </dd>\n");
      out.write("        </dl>\n");
      out.write("\n");
      out.write("        <dl>\n");
      out.write("            <dt>챗봇 qr코드<div class=\"help\">?<div class=\"help_desc\"><i>챗봇을 띄울 수 있는 qr코드입니다.</i></div></div>\n");
      out.write("                <div class=\"fr\">\n");
      out.write("                    <!-- [D] disabled attr 추가 시 비활성화 디자인이 적용됩니다. -->\n");
      out.write("\n");
      out.write("                </div>\n");
      out.write("            </dt>\n");
      out.write("            <dd>\n");
      out.write("                <div id=\"qrcode\"></div>\n");
      out.write("                <script type=\"text/javascript\">\n");
      out.write("                  var qrcode = new QRCode(document.getElementById(\"qrcode\"), {\n");
      out.write("                    text: \"http://maum.ai\",\n");
      out.write("                    width: 180,\n");
      out.write("                    height: 180,\n");
      out.write("                    colorDark : \"#000000\",\n");
      out.write("                    colorLight : \"#ffffff\",\n");
      out.write("                    correctLevel : QRCode.CorrectLevel.H\n");
      out.write("                  });\n");
      out.write("                </script>\n");
      out.write("            </dd>\n");
      out.write("        </dl>\n");
      out.write("    </div>\n");
      out.write("</div>\n");
      out.write("</body>\n");
      out.write("</html>\n");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
